{"version":3,"sources":["store/googleUser/constants.ts","components/GlobalStyles.ts","constant/style/breakpoints.ts","components/Button/index.ts","components/NavBar/Elements.ts","constant/routes.ts","store/googleUser/actions.ts","store/budgets/constants.ts","store/localstorage.ts","store/budgets/reducer.ts","store/currency/constants.ts","store/currency/reducer.ts","store/loader.ts","store/transactions/constants.ts","store/transactions/reducer.ts","store/index.ts","store/googleUser/reducer.ts","store/budgets/actions.ts","utils/utility.ts","store/transactions/actions.ts","store/currency/actions.ts","components/NavBar/index.tsx","pages/Overview.tsx","pages/Budgets/components/BudgetList/Elements.ts","pages/Budgets/components/Budget/Elements.ts","pages/Budgets/components/BudgetModal/Elements.ts","components/Modal/Elements.ts","components/Modal/index.tsx","hooks/useForm.ts","components/Input/index.ts","components/Form/Elements.ts","components/CurrencySelector/Elements.ts","components/CurrencySelector/index.tsx","components/Form/index.tsx","pages/Budgets/components/BudgetModal/index.tsx","components/BudgetInfo/Elements.ts","utils/ux.ts","components/BudgetInfo/index.tsx","pages/Budgets/components/Budget/index.tsx","pages/Budgets/components/BudgetList/index.tsx","pages/Budgets/components/BudgetForm/index.tsx","components/AllMoney/Elements.ts","components/AllMoney/index.tsx","pages/Budgets/index.tsx","pages/Payments/components/PaymentForm/Elements.ts","pages/Payments/components/PaymentForm/index.tsx","components/ModalConfirm/Elements.ts","components/ModalConfirm/index.tsx","pages/Payments/components/Transaction/Elements.ts","pages/Payments/components/Transaction/index.tsx","pages/Payments/components/TransactionList/Elements.ts","pages/Payments/components/TransactionList/index.tsx","pages/Payments/index.tsx","pages/Statistics.tsx","components/AnimatedRouter.tsx","api/currencyExchange.ts","api/db.ts","components/App.tsx","index.tsx"],"names":["Constants","GlobalStyle","createGlobalStyle","breakpoints","Button","styled","button","props","secondary","color","textColor","Navigation","nav","Header","div","ToggleNavButton","NavIcon","opened","focused","MobileLinksContainer","DesktopLinksContainer","ul","StyledLink","Link","Avatar","url","GoogleButton","routes","dbUrl","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","setLoaderAction","action","SET_LOADING","unsetLoaderAction","UNSET_LOADING","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","store","createStore","combineReducers","budgets","state","type","ADD_BUDGET","payload","budget","REMOVE_BUDGET","filter","_id","budgetId","EDIT_BUDGET","map","CHANGE_TRANSACTIONS","amount","actual","starting","diff","currency","transactions","forEach","transaction","money","currencies","REMOVE_BUDGET_ALL","ADD_TRANSACTION","REMOVE_TRANSACTION","transactionId","REMOVE_TRANSACTIONS_BUDGET","EDIT_TRANSACTION","REMOVE_TRANSACTION_ALL","googleUser","LOGIN","userInfo","LOGOUT","dateFetched","Date","source","primaryCurrency","UPDATE_CURRENCY","SET_PRIMARY_CURRENCY","currencyString","loader","subscribe","getState","userId","stringify","setItem","saveState","addBudgetAction","removeBudgetAction","editBudgetAction","changeTransactions","prototype","getFancyDate","day","this","getDate","toString","month","getMonth","parseInt","getFullYear","getFancyHours","hours","getHours","minutes","getMinutes","timeout","ms","Promise","resolve","setTimeout","addTransactionAction","removeTransactionsByBudgetIdAction","setPrimaryCurrency","NavBar","useState","setOpened","btnFocused","setBtnFocued","btnRef","useRef","dispatch","useDispatch","useSelector","toggleNavMenu","e","target","current","scrollTo","renderLinks","focusableByDefault","route","i","tabIndex","onClick","to","handleResponseGoogle","response","profileObj","handleLogout","a","style","marginRight","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","render","renderProps","disabled","imageUrl","onLogoutSuccess","aria-label","onFocus","onBlur","ref","Overview","StyledList","Container","Top","h1","IconSpan","span","ButtonsContainer","Background","animating","Center","modalRoot","document","getElementById","ModalContext","createContext","handleClose","Modal","children","closeModal","closable","container","setAnimating","bgRef","useEffect","ReactDOM","createPortal","handleBgClick","Provider","value","useForm","initialState","newState","Object","entries","key","checked","formData","setFormData","name","bool","required","Input","input","StyledForm","form","Label","label","Warning","p","Select","select","CurrencySelector","onChangeAction","currentCurrency","setCurrentCurrency","onChange","Form","handleSubmit","childrenBefore","data","title","toggleChecked","handleInputChange","formCurrency","setFormCurrency","onSubmit","preventDefault","amountCheck","titleCheck","amountNum","parseFloat","noValidate","autoComplete","htmlFor","id","placeholder","position","fontSize","right","BudgetModal","context","useContext","height","onKeyPress","handleEnterPressed","marginTop","newTitle","newAmount","newCurrency","newBudget","googleId","date","axios","patch","then","toFixed","padding","width","delete","TitleHeader","MoneyHeader","h2","DiffSpan","SmallMoneyHeader","h3","DiffIcon","getMoneyColor","BudgetInfo","Budget","modalOpened","setModalOpened","BudgetList","TransitionGroup","component","CSSTransition","classNames","BudgetForm","uuidv4","post","AllMoney","Budgets","PaymentForm","selectedBudgetId","setSelectedBudgetId","budgetsLength","length","selectedBudget","newTransaction","opacity","ModalConfirm","handleAction","Money","Title","SmallTitle","DateHeader","DeleteBtn","CloseIcon","BiX","DeleteText","Transaction","setBudget","dateN","flex","List","TransactionList","Payments","Statistics","AnimatedRouter","location","useLocation","exact","path","currencyExchangeAPI","currencyFromState","lastFetchedDate","Math","floor","getTime","get","rates","rate","dbAPI","setLoading","unsetLoading","params","userCurrency","res","catch","App","firstRender","setLoader","useCallback","unsetLoader","updateCurrency","size"],"mappings":"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","file":"static/js/main.4557ab2d.chunk.js","sourcesContent":["export enum Constants {\r\n  LOGIN = 'LOGIN',\r\n  LOGOUT = 'LOGOUT',\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-family: Roboto;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--color-black)\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n\r\n  :root {\r\n    // COLORS\r\n    --color-red: #E53E3E;\r\n    --color-gray: #CBD5E0;\r\n    --color-gray-dark: #1A202C;\r\n    --color-green: #48BB78;\r\n    --color-black: #222;\r\n    --color-white: #fff;\r\n    --color-blue-light: #90CDF4;\r\n\r\n    // TRANSITIONS\r\n    --trans-default: all .2s ease;\r\n    \r\n    // SHADOWS\r\n    --shadow-default: 0px 5px 30px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const breakpoints = {\r\n  mobile: '36rem', // 576px\r\n  tablet: '48rem', // 768px\r\n  laptop: '62rem', // 992px\r\n  desktop: '75rem', // 1200px\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  color: string;\r\n  textColor: string;\r\n  secondary?: boolean;\r\n}\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  border-radius: 1rem;\r\n  border: ${props =>\r\n    props.secondary ? `2px solid var(--color-${props.color})` : 'none'};\r\n  width: 100%;\r\n  font-size: 1.8rem;\r\n  padding: 1.1rem;\r\n  color: ${props => `var(--color-${props.textColor})`};\r\n  background-color: ${props =>\r\n    props.secondary ? 'var(--color-white)' : `var(--color-${props.color})`};\r\n  font-family: inherit;\r\n  transition: var(--trans-default);\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n    transform: translateY(-5%);\r\n    cursor: pointer;\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.3);\r\n    ${props =>\r\n      props.secondary &&\r\n      `background-color: var(--color-${props.color}); color: var(--color-white)`};\r\n  }\r\n\r\n  :active {\r\n    transform: translateY(2%);\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\nimport { Button } from '../Button';\r\n\r\ninterface NavProps {\r\n  opened?: boolean;\r\n  focused?: boolean;\r\n}\r\n\r\nexport const Navigation = styled.nav`\r\n  color: #111;\r\n  letter-spacing: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 3.5rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    font-weight: 400;\r\n    font-size: 3rem;\r\n    margin-right: 2rem;\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ToggleNavButton = styled.button`\r\n  width: 4.5rem;\r\n  height: 4.5rem;\r\n  border-radius: 35%;\r\n  background-color: #111;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 11;\r\n  position: fixed;\r\n  right: 3.5rem;\r\n  transition: var(--trans-default);\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavIcon = styled.div<NavProps>`\r\n  pointer-events: none;\r\n  width: 2.2rem;\r\n  height: 3px;\r\n  background-color: #fff;\r\n\r\n  transform: ${props =>\r\n    props.opened ? 'rotate(225deg) scale(1.3)' : 'rotate(0) scale(1)'};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.opened\r\n        ? `rotate(90deg) translateY(0)`\r\n        : `rotate(0) translateY(${props.focused ? '250%' : '125%'})`};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.focused ? 'translateY(-350%)' : 'translateY(-225%)'};\r\n\r\n    display: ${props => (props.opened ? 'none' : 'block')};\r\n  }\r\n`;\r\n\r\nexport const MobileLinksContainer = styled.div<NavProps>`\r\n  background-color: #111;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  transition: var(--trans-default);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  transform: ${props => (props.opened ? 'translateX(0)' : 'translateX(-100%)')};\r\n\r\n  ul {\r\n    transition: var(--trans-default);\r\n    transition-delay: 0.1s;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n    margin-bottom: 25%;\r\n\r\n    transform: ${props =>\r\n      props.opened ? 'translateX(0)' : 'translateX(-100%)'};\r\n\r\n    li {\r\n      :not(:last-child) {\r\n        margin-bottom: 4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopLinksContainer = styled.ul`\r\n  width: 47rem;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n    :not(:last-child) {\r\n    }\r\n  }\r\n\r\n  display: none;\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: 2.5rem;\r\n  text-decoration: none;\r\n  text-transform: capitalize;\r\n\r\n  color: #fff;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    color: #222;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\ntype url = { url: string };\r\n\r\nexport const Avatar = styled.div<url>`\r\n  border-radius: 50%;\r\n  background-image: ${props => `url('${props.url}')`};\r\n  background-size: cover;\r\n  padding: 2rem;\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nexport const GoogleButton = styled(Button)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0.9rem;\r\n\r\n  svg {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n","export const routes = ['overview', 'budgets', 'payments', 'statistics'];\r\n\r\nexport const dbUrl = 'https://budgety-server.herokuapp.com';\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { action } from 'typesafe-actions';\r\nimport { Constants } from './constants';\r\n\r\nexport const loginAction = (userInfo: GoogleLoginResponse['profileObj']) => {\r\n  return action(Constants.LOGIN, { userInfo });\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  return action(Constants.LOGOUT);\r\n};\r\n","export enum Constants {\r\n  ADD_BUDGET = 'ADD_BUDGET',\r\n  REMOVE_BUDGET = 'REMOVE_BUDGET',\r\n  EDIT_BUDGET = 'EDIT_BUDGET',\r\n  CHANGE_TRANSACTIONS = 'CHANGE_TRANSACTIONS',\r\n  REMOVE_BUDGET_ALL = 'REMOVE_BUDGET_ALL',\r\n}\r\n","import { RootState } from '.';\r\n\r\nexport const loadState = (): RootState | undefined => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    const state: RootState = JSON.parse(serializedState);\r\n    return state;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: RootState): void => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","import { Constants } from './constants';\r\nimport { BudgetsActions, BudgetsState } from './types';\r\n\r\nexport const budgetsReducer = (\r\n  state: BudgetsState = [],\r\n  action: BudgetsActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_BUDGET:\r\n      return [...state, action.payload.budget];\r\n\r\n    case Constants.REMOVE_BUDGET:\r\n      newState = state.filter(budget => budget._id !== action.payload.budgetId);\r\n      return newState;\r\n\r\n    case Constants.EDIT_BUDGET:\r\n      newState = state.map(budget => {\r\n        if (budget._id === action.payload.budget._id) {\r\n          return action.payload.budget;\r\n        }\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.CHANGE_TRANSACTIONS:\r\n      newState = state.map(budget => {\r\n        budget.amount.actual = budget.amount.starting;\r\n        budget.amount.diff = 0;\r\n        const currency = action.payload.currency;\r\n\r\n        action.payload.transactions.forEach(transaction => {\r\n          let money =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[budget.amount.currency];\r\n\r\n          if (transaction.budgetId === budget._id) {\r\n            budget = {\r\n              ...budget,\r\n              amount: {\r\n                ...budget.amount,\r\n                actual: budget.amount.actual + money,\r\n                diff: budget.amount.actual + money - budget.amount.starting,\r\n              },\r\n            };\r\n          }\r\n        });\r\n\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_BUDGET_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  UPDATE_CURRENCY = 'UPDATE_CURRENCY',\r\n  SET_PRIMARY_CURRENCY = 'SET_PRIMARY_CURRENCY',\r\n}\r\n","import { Constants } from './constants';\r\nimport { CurrencyActions, CurrencyType } from './types';\r\n\r\nexport const currencyReducer = (\r\n  state: CurrencyType = {\r\n    dateFetched: new Date(0),\r\n    source: 'USD',\r\n    currencies: {},\r\n    primaryCurrency: 'USD',\r\n  },\r\n  action: CurrencyActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_CURRENCY:\r\n      return action.payload.currency;\r\n\r\n    case Constants.SET_PRIMARY_CURRENCY:\r\n      return { ...state, primaryCurrency: action.payload.currencyString };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionType } from 'typesafe-actions';\r\nimport { action } from 'typesafe-actions';\r\n\r\nexport enum Constants {\r\n  SET_LOADING = 'SET_LOADING',\r\n  UNSET_LOADING = 'UNSET_LOADING',\r\n}\r\n\r\nexport const setLoaderAction = () => {\r\n  return action(Constants.SET_LOADING);\r\n};\r\n\r\nexport const unsetLoaderAction = () => {\r\n  return action(Constants.UNSET_LOADING);\r\n};\r\n\r\nconst actions = {\r\n  setLoaderAction,\r\n  unsetLoaderAction,\r\n};\r\n\r\nexport type LoaderActions = ActionType<typeof actions>;\r\n\r\nexport const loaderReducer = (\r\n  state: boolean = false,\r\n  action: LoaderActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.SET_LOADING:\r\n      return true;\r\n\r\n    case Constants.UNSET_LOADING:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  ADD_TRANSACTION = 'ADD_TRANSACTION',\r\n  REMOVE_TRANSACTION = 'REMOVE_TRANSACTION',\r\n  REMOVE_TRANSACTIONS_BUDGET = 'REMOVE_TRANSACTIONS_BUDGET',\r\n  EDIT_TRANSACTION = 'EDIT_TRANSACTION',\r\n  REMOVE_TRANSACTION_ALL = 'REMOVE_TRANSACTION_ALL',\r\n}\r\n","import { Constants } from './constants';\r\nimport { TransactionActions, TransactionState } from './types';\r\n\r\nexport const transactionReducer = (\r\n  state: TransactionState = [],\r\n  action: TransactionActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_TRANSACTION:\r\n      return [...state, action.payload.transaction];\r\n\r\n    case Constants.REMOVE_TRANSACTION:\r\n      newState = state.filter(\r\n        transaction => transaction._id !== action.payload.transactionId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTIONS_BUDGET:\r\n      newState = state.filter(\r\n        transaction => transaction.budgetId !== action.payload.budgetId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.EDIT_TRANSACTION:\r\n      newState = state.map(transaction => {\r\n        if (transaction._id === action.payload.transaction._id) {\r\n          return action.payload.transaction;\r\n        }\r\n        return transaction;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTION_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { combineReducers, createStore, compose } from 'redux';\r\n\r\nimport { budgetsReducer } from './budgets/reducer';\r\nimport { BudgetsState } from './budgets/types';\r\nimport { currencyReducer } from './currency/reducer';\r\nimport { CurrencyType } from './currency/types';\r\nimport { googleUserReducer } from './googleUser/reducer';\r\nimport { loaderReducer } from './loader';\r\nimport { loadState, saveState } from './localstorage';\r\nimport { transactionReducer } from './transactions/reducer';\r\nimport { TransactionState } from './transactions/types';\r\n\r\nexport interface RootState {\r\n  budgets: BudgetsState;\r\n  transactions: TransactionState;\r\n  googleUser: GoogleLoginResponse['profileObj'] | null;\r\n  currency: CurrencyType;\r\n  loader: boolean;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  combineReducers<RootState>({\r\n    budgets: budgetsReducer,\r\n    transactions: transactionReducer,\r\n    googleUser: googleUserReducer,\r\n    currency: currencyReducer,\r\n    loader: loaderReducer,\r\n  }),\r\n  persistedState,\r\n  composeEnhancers()\r\n);\r\n\r\nstore.subscribe((): void => {\r\n  const state = store.getState();\r\n  // const persState = loadState() as RootState;\r\n\r\n  const budgets = state.budgets.filter(budget => budget.userId === null);\r\n  const transactions = state.transactions.filter(\r\n    transaction => transaction.userId === null\r\n  );\r\n  const currency = state.currency;\r\n  const loader = state.loader;\r\n\r\n  if (state.googleUser === null)\r\n    saveState({ budgets, transactions, currency, loader, googleUser: null });\r\n});\r\n\r\nexport default store;\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { Constants } from './constants';\r\nimport { GoogleUserActions } from './types';\r\n\r\nexport const googleUserReducer = (\r\n  state: GoogleLoginResponse['profileObj'] | null = null,\r\n  action: GoogleUserActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.LOGIN:\r\n      return { ...action.payload.userInfo };\r\n\r\n    case Constants.LOGOUT:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport store from '..';\r\nimport { BudgetType } from './types';\r\nimport { TransactionType } from '../transactions/types';\r\nimport { Constants } from './constants';\r\nimport { CurrencyType } from '../currency/types';\r\n\r\nexport const addBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.ADD_BUDGET, { budget });\r\n};\r\n\r\nexport const removeBudgetAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.EDIT_BUDGET, { budget });\r\n};\r\n\r\nexport const changeTransactions = () => {\r\n  const transactions: TransactionType[] = store.getState().transactions;\r\n  const currency: CurrencyType = store.getState().currency;\r\n  return action(Constants.CHANGE_TRANSACTIONS, { transactions, currency });\r\n};\r\n\r\nexport const removeAllBudgetsAction = () => {\r\n  return action(Constants.REMOVE_BUDGET_ALL);\r\n};\r\n","import React from 'react';\r\n\r\n// PROTOTYPES\r\ndeclare global {\r\n  interface Date {\r\n    getFancyDate(): string;\r\n    getFancyHours(): string;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyDate = function (): string {\r\n  let day = this.getDate().toString();\r\n  let month = (this.getMonth() + 1).toString();\r\n\r\n  if (parseInt(day) < 10) day = `0${day}`;\r\n  if (parseInt(month) < 10) month = `0${month}`;\r\n\r\n  return `${day}/${month}/${this.getFullYear()}`;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyHours = function (): string {\r\n  let hours = this.getHours().toString();\r\n  let minutes = this.getMinutes().toString();\r\n\r\n  if (parseInt(minutes) < 10) minutes = `0${minutes}`;\r\n  if (parseInt(hours) < 10) hours = `0${hours}`;\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const handleEnterPressed = (\r\n  e: React.KeyboardEvent,\r\n  action: () => void\r\n): void => {\r\n  if (e.key === 'Enter') action();\r\n};\r\n\r\nexport const timeout = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { TransactionType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const addTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.ADD_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeTransactionAction = (transactionId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTION, { transactionId });\r\n};\r\n\r\nexport const removeTransactionsByBudgetIdAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTIONS_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.EDIT_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeAllTransactionsAction = () => {\r\n  return action(Constants.REMOVE_TRANSACTION_ALL);\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { CurrencyType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const updateCurrency = (currency: CurrencyType) => {\r\n  return action(Constants.UPDATE_CURRENCY, { currency });\r\n};\r\n\r\nexport const setPrimaryCurrency = (currencyString: string) => {\r\n  return action(Constants.SET_PRIMARY_CURRENCY, { currencyString });\r\n};\r\n","import React, { FC, useState, useRef } from 'react';\r\n\r\nimport GoogleLogin, {\r\n  GoogleLoginResponse,\r\n  GoogleLoginResponseOffline,\r\n  GoogleLogout,\r\n} from 'react-google-login';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  Navigation,\r\n  Header,\r\n  ToggleNavButton,\r\n  NavIcon,\r\n  MobileLinksContainer,\r\n  StyledLink,\r\n  DesktopLinksContainer,\r\n  Avatar,\r\n  GoogleButton,\r\n} from './Elements';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport { routes } from '../../constant/routes';\r\nimport { loginAction, logoutAction } from '../../store/googleUser/actions';\r\nimport { RootState } from '../../store';\r\nimport { loadState } from '../../store/localstorage';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n} from '../../store/budgets/actions';\r\nimport { timeout } from '../../utils/utility';\r\nimport { addTransactionAction } from '../../store/transactions/actions';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\n\r\nconst NavBar: FC = (): JSX.Element => {\r\n  const [opened, setOpened] = useState(false);\r\n  const [btnFocused, setBtnFocued] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const toggleNavMenu = (e: React.MouseEvent) => {\r\n    setOpened(!opened);\r\n    if (!(e.target === btnRef.current)) window.scrollTo(0, 0);\r\n  };\r\n\r\n  const renderLinks = (\r\n    routes: string[],\r\n    focusableByDefault = true\r\n  ): JSX.Element[] => {\r\n    return routes.map((route, i) => (\r\n      <li key={i}>\r\n        <StyledLink\r\n          tabIndex={focusableByDefault ? 0 : opened ? 0 : -1}\r\n          onClick={toggleNavMenu}\r\n          to={`/${route}`}\r\n        >\r\n          {route}\r\n        </StyledLink>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  const handleResponseGoogle = (\r\n    response: GoogleLoginResponse | GoogleLoginResponseOffline\r\n  ) => {\r\n    if ((response as GoogleLoginResponse).profileObj) {\r\n      dispatch(loginAction((response as GoogleLoginResponse).profileObj));\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    const state = loadState();\r\n    dispatch(logoutAction());\r\n\r\n    if (state) {\r\n      await timeout(100);\r\n      state.budgets.forEach(budget => dispatch(addBudgetAction(budget)));\r\n      state.transactions.forEach(transaction =>\r\n        dispatch(addTransactionAction(transaction))\r\n      );\r\n\r\n      dispatch(setPrimaryCurrency(state.currency.primaryCurrency));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navigation>\r\n      <Header>\r\n        <h1 style={{ marginRight: '1rem' }}>Budgety</h1>\r\n        {googleUser === null ? (\r\n          <GoogleLogin\r\n            clientId=\"118372615416-g77a8gaf92slnb4f50jr6o9cmh0f4ho1.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={handleResponseGoogle}\r\n            onFailure={handleResponseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn\r\n            render={renderProps => (\r\n              <GoogleButton\r\n                color=\"red\"\r\n                textColor=\"white\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <FaGoogle />\r\n                Login\r\n              </GoogleButton>\r\n            )}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Avatar url={googleUser.imageUrl} />\r\n            <GoogleLogout\r\n              clientId=\"118372615416-cjlib17tonjdhn4tqtpnetm7mif08ah9.apps.googleusercontent.com\"\r\n              buttonText=\"Logout\"\r\n              onLogoutSuccess={handleLogout}\r\n              render={renderProps => (\r\n                <GoogleButton\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={renderProps.onClick}\r\n                  disabled={renderProps.disabled}\r\n                >\r\n                  <FaGoogle />\r\n                  Logout\r\n                </GoogleButton>\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n      </Header>\r\n      <ToggleNavButton\r\n        aria-label=\"Navigation button\"\r\n        onClick={toggleNavMenu}\r\n        onFocus={() => setBtnFocued(true)}\r\n        onBlur={() => setBtnFocued(false)}\r\n        ref={btnRef}\r\n      >\r\n        <NavIcon opened={opened} focused={btnFocused} />\r\n      </ToggleNavButton>\r\n      <MobileLinksContainer opened={opened}>\r\n        <ul>{renderLinks(routes, false)}</ul>\r\n      </MobileLinksContainer>\r\n      <DesktopLinksContainer>{renderLinks(routes)}</DesktopLinksContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { FC } from 'react';\r\n\r\nconst Overview: FC = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Overview;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledList = styled.ul`\r\n  list-style: none;\r\n  margin: 4rem auto;\r\n  padding: 0;\r\n  justify-content: center;\r\n  gap: 4rem;\r\n  grid-template-columns: repeat(auto-fit, 23rem);\r\n  padding: 0 4rem;\r\n\r\n  display: grid;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 23rem;\r\n  height: 23rem;\r\n  box-shadow: var(--shadow-default);\r\n  border-radius: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-weight: 400;\r\n  font-size: 2.8rem;\r\n`;\r\n\r\nexport const IconSpan = styled.span`\r\n  font-size: 3rem;\r\n  height: 4rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border: solid 1px transparent;\r\n  border-radius: 1rem;\r\n\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const Background = styled.div<{ animating: boolean }>`\r\n  position: fixed;\r\n  z-index: 20;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  transition: var(--trans-default);\r\n  opacity: ${props => (props.animating ? '0' : '100%')};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  z-index: 21;\r\n  background-color: var(--color-white);\r\n  width: 75%;\r\n  padding: 2rem 2rem;\r\n  border-radius: 1rem;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 50rem;\r\n  }\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n`;\r\n","import ReactDOM from 'react-dom';\r\nimport { FC, useRef } from 'react';\r\n\r\nimport { Background, Center, Container } from './Elements';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nconst modalRoot = document.getElementById('modal') as HTMLElement;\r\n\r\nexport const ModalContext = createContext({ handleClose: () => {} });\r\n\r\ninterface ModalProps {\r\n  children: JSX.Element;\r\n  closeModal: () => void;\r\n  closable?: boolean;\r\n  container?: boolean;\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({\r\n  children,\r\n  closeModal,\r\n  closable = true,\r\n  container = true,\r\n}): JSX.Element => {\r\n  const [animating, setAnimating] = useState(true);\r\n  const bgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setAnimating(false);\r\n  }, []);\r\n\r\n  const handleClose = (): void => {\r\n    setAnimating(true);\r\n    setTimeout(() => closeModal(), 200);\r\n  };\r\n\r\n  const handleBgClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ): void => {\r\n    if (e.target === bgRef.current && closable) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Background\r\n      animating={animating}\r\n      ref={bgRef}\r\n      onClick={e => handleBgClick(e)}\r\n    >\r\n      {container ? (\r\n        <Container>\r\n          <ModalContext.Provider value={{ handleClose }}>\r\n            {children}\r\n          </ModalContext.Provider>\r\n        </Container>\r\n      ) : (\r\n        <ModalContext.Provider value={{ handleClose }}>\r\n          <Center>{children}</Center>\r\n        </ModalContext.Provider>\r\n      )}\r\n    </Background>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\ninterface returnedObject {\r\n  [key: string]: { value: string; required: boolean; checked: boolean };\r\n}\r\n\r\nconst useForm = (initialState: {\r\n  [key: string]: { value: string; required: boolean };\r\n}): [\r\n  returnedObject,\r\n  Dispatch<SetStateAction<returnedObject>>,\r\n  (name: string, bool?: boolean) => void,\r\n  (e: React.ChangeEvent<HTMLInputElement>) => void\r\n] => {\r\n  let newState: returnedObject = {};\r\n\r\n  for (const [key, value] of Object.entries(initialState)) {\r\n    newState = { ...newState, [key]: { ...value, checked: true } };\r\n  }\r\n\r\n  const [formData, setFormData] = useState(newState);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = formData[e.target.name].required\r\n      ? e.target.value\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: {\r\n        ...formData[e.target.name],\r\n        value: e.target.value,\r\n        checked: checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  const toggleChecked = (name: string, bool: boolean = false): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: {\r\n        ...formData[name],\r\n        checked: bool,\r\n      },\r\n    });\r\n  };\r\n  return [formData, setFormData, toggleChecked, handleInputChange];\r\n};\r\n\r\nexport default useForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const StyledForm = styled.form`\r\n  margin: 5rem auto;\r\n  padding: 0 4rem;\r\n  margin-top: 0;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 2.5rem;\r\n  display: block;\r\n  margin-bottom: 1rem;\r\n  width: max-content;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  :not(:first-child) {\r\n    margin: 4rem 0;\r\n  }\r\n`;\r\n\r\nexport const Warning = styled.p`\r\n  font-size: 1.3rem;\r\n  color: var(--color-red);\r\n  position: absolute;\r\n  margin-top: 0.7rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select<{ color: string }>`\r\n  padding: 0.2rem 0.2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 3rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  color: ${props => `var(--color-${props.color})`};\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { Select } from './Elements';\r\n\r\ninterface CurrencySelectorProps {\r\n  color: string;\r\n  onChangeAction: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  style?: { [key: string]: string };\r\n  currency?: string;\r\n}\r\n\r\nconst CurrencySelector: FC<CurrencySelectorProps> = ({\r\n  color,\r\n  onChangeAction,\r\n  style,\r\n  currency,\r\n}): JSX.Element => {\r\n  const currencies = useSelector(\r\n    (state: RootState) => state.currency.currencies\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [currentCurrency, setCurrentCurrency] = useState(primaryCurrency);\r\n\r\n  useEffect(() => {\r\n    currency && setCurrentCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setCurrentCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  const renderCurrenciesOptions = (): JSX.Element[] => {\r\n    return Object.entries(currencies).map(currency => {\r\n      return (\r\n        <option value={currency[0]} key={currency[0]}>\r\n          {currency[0]}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setCurrentCurrency(e.target.value);\r\n    onChangeAction(e);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      color={color}\r\n      onChange={handleSelectChange}\r\n      value={currentCurrency}\r\n      style={style}\r\n    >\r\n      {renderCurrenciesOptions()}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { FC, useState, useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport useForm from '../../hooks/useForm';\r\nimport { Input } from '../Input';\r\nimport { Container, StyledForm, Label, Warning } from './Elements';\r\nimport { Button } from '../Button';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { RootState } from '../../store';\r\n\r\ninterface FormProps {\r\n  handleSubmit: (title: string, amount: number, currency: string) => void;\r\n  disabled?: boolean;\r\n  children?: JSX.Element;\r\n  childrenBefore?: JSX.Element;\r\n  button?: boolean;\r\n  data?: {\r\n    [key in 'title' | 'amount']: { value: string; required: boolean };\r\n  };\r\n  currency?: string;\r\n  style?: {};\r\n}\r\n\r\nconst Form: FC<FormProps> = ({\r\n  handleSubmit,\r\n  disabled = false,\r\n  children,\r\n  childrenBefore,\r\n  button = true,\r\n  data,\r\n  currency,\r\n  style,\r\n}): JSX.Element => {\r\n  const [formData, setFormData, toggleChecked, handleInputChange] = useForm(\r\n    data\r\n      ? data\r\n      : {\r\n          title: { value: '', required: true },\r\n          amount: { value: '', required: true },\r\n        }\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [formCurrency, setFormCurrency] = useState(primaryCurrency);\r\n\r\n  const { title, amount } = formData;\r\n\r\n  useEffect(() => {\r\n    currency && setFormCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setFormCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    if (!disabled) {\r\n      const amountCheck = amount.required && !amount.value;\r\n      const titleCheck = title.required && !title.value;\r\n\r\n      if (amountCheck && titleCheck) {\r\n        let newState = {};\r\n\r\n        for (const [key, value] of Object.entries(formData)) {\r\n          newState = { ...newState, [key]: { ...value, checked: false } };\r\n        }\r\n\r\n        setFormData(newState);\r\n      } else {\r\n        if (titleCheck) toggleChecked('title');\r\n\r\n        if (amountCheck) toggleChecked('amount');\r\n      }\r\n\r\n      if (amountCheck || titleCheck) return;\r\n      const amountNum = parseFloat(formData.amount.value);\r\n\r\n      handleSubmit(title.value, amountNum, formCurrency);\r\n\r\n      setFormData({\r\n        title: { ...title, value: '' },\r\n        amount: { ...amount, value: '' },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCurrencyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setFormCurrency(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={handleSubmitForm}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      style={style}\r\n    >\r\n      <Container>{childrenBefore}</Container>\r\n      <Container>\r\n        <Label htmlFor=\"title\">Title</Label>\r\n        <Input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter budget title\"\r\n          value={title.value}\r\n          onChange={handleInputChange}\r\n        />\r\n        {!title.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container style={{ position: 'relative' }}>\r\n        <Label htmlFor=\"amount\">Amount</Label>\r\n        <Input\r\n          id=\"amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          placeholder=\"Enter budget amount\"\r\n          value={amount.value}\r\n          onChange={handleInputChange}\r\n        />\r\n        <CurrencySelector\r\n          color=\"black\"\r\n          onChangeAction={handleCurrencyChange}\r\n          style={{ fontSize: '2.7rem', position: 'absolute', right: '0' }}\r\n          currency={formCurrency}\r\n        />\r\n        {!amount.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container>{children}</Container>\r\n      {button && (\r\n        <Button color=\"green\" textColor=\"white\">\r\n          Add\r\n        </Button>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { Top, Header, IconSpan, ButtonsContainer } from './Elements';\r\nimport { BiEdit, BiX } from 'react-icons/bi';\r\nimport { ModalContext } from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { Button } from '../../../../components/Button';\r\nimport {\r\n  changeTransactions,\r\n  editBudgetAction,\r\n  removeBudgetAction,\r\n} from '../../../../store/budgets/actions';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { removeTransactionsByBudgetIdAction } from '../../../../store/transactions/actions';\r\nimport Form from '../../../../components/Form';\r\nimport { RootState } from '../../../../store';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetModal: FC<BudgetType> = ({ _id, title, amount }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const context = useContext(ModalContext);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleDelete = (): void => {\r\n    context.handleClose();\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/budgets/${_id}`).then(() => {\r\n        dispatch(removeBudgetAction(_id));\r\n        dispatch(removeTransactionsByBudgetIdAction(_id));\r\n        dispatch(unsetLoaderAction());\r\n      });\r\n    } else {\r\n      dispatch(removeBudgetAction(_id));\r\n      dispatch(removeTransactionsByBudgetIdAction(_id));\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (\r\n    newTitle: string,\r\n    newAmount: number,\r\n    newCurrency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id,\r\n      userId: googleUser?.googleId ? googleUser?.googleId : null,\r\n      title: newTitle,\r\n      amount: {\r\n        actual: newAmount,\r\n        currency: newCurrency,\r\n        diff: 0,\r\n        starting: newAmount,\r\n      },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .patch(`${dbUrl}/budgets/${_id}`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(editBudgetAction(budget.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(editBudgetAction(newBudget));\r\n      dispatch(changeTransactions());\r\n    }\r\n    context.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Top>\r\n        <IconSpan tabIndex={0}>\r\n          <BiEdit />\r\n        </IconSpan>\r\n        <Header>Edit</Header>\r\n        <IconSpan\r\n          tabIndex={0}\r\n          style={{ fontSize: '3.5rem', height: '4.5rem' }}\r\n          onClick={handleClose}\r\n          onKeyPress={e => handleEnterPressed(e, handleClose)}\r\n        >\r\n          <BiX />\r\n        </IconSpan>\r\n      </Top>\r\n      <div style={{ marginTop: '3.5rem' }}>\r\n        <Form\r\n          handleSubmit={handleSubmitForm}\r\n          button={false}\r\n          data={{\r\n            title: { value: title, required: true },\r\n            amount: { value: amount.starting.toFixed(2), required: true },\r\n          }}\r\n          style={{ padding: 0 }}\r\n          currency={amount.currency}\r\n        >\r\n          <ButtonsContainer>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"gray-dark\"\r\n              secondary\r\n              style={{ width: '48%' }}\r\n              onClick={handleDelete}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"white\"\r\n              style={{ width: '48%' }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ButtonsContainer>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetModal;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ColorType {\r\n  color: 'green' | 'red' | 'black';\r\n}\r\n\r\nexport const TitleHeader = styled.h1`\r\n  font-size: 3rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  text-align: center;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport const MoneyHeader = styled.h2<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin: 0;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const DiffSpan = styled.div<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin-left: 0;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n  height: 5rem;\r\n`;\r\n\r\nexport const SmallMoneyHeader = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n\r\nexport const DiffIcon = styled.i<{ amount: number }>`\r\n  position: absolute;\r\n  top: ${props => (props.amount > 0 ? '25%' : '90%')};\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n","export const getMoneyColor = (amount: number): 'red' | 'green' | 'black' => {\r\n  if (amount > 0) return 'green';\r\n  else if (amount < 0) return 'red';\r\n  return 'black';\r\n};\r\n","import { FC } from 'react';\r\n\r\nimport {\r\n  TitleHeader,\r\n  MoneyHeader,\r\n  SmallMoneyHeader,\r\n  DiffSpan,\r\n  DiffIcon,\r\n} from './Elements';\r\nimport { BiCaretUp, BiCaretDown, BiMinus } from 'react-icons/bi';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport { BudgetType } from '../../store/budgets/types';\r\n\r\nconst BudgetInfo: FC<BudgetType> = (budget): JSX.Element => {\r\n  const { title, amount } = budget;\r\n\r\n  return (\r\n    <>\r\n      <TitleHeader>{title}</TitleHeader>\r\n      <div>\r\n        <MoneyHeader color={getMoneyColor(amount.actual)}>\r\n          {amount.actual.toFixed(2)} {amount.currency}\r\n        </MoneyHeader>\r\n        <DiffSpan color={getMoneyColor(amount.diff)}>\r\n          <SmallMoneyHeader>\r\n            {amount.diff.toFixed(2)} {amount.currency}\r\n          </SmallMoneyHeader>\r\n          <DiffIcon amount={amount.diff}>\r\n            {amount.diff > 0 ? (\r\n              <BiCaretUp />\r\n            ) : amount.diff < 0 ? (\r\n              <BiCaretDown />\r\n            ) : (\r\n              <BiMinus />\r\n            )}\r\n          </DiffIcon>\r\n        </DiffSpan>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetInfo;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { Container } from './Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport BudgetModal from '../BudgetModal';\r\nimport Modal from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\n\r\nconst Budget: FC<BudgetType> = (budget): JSX.Element => {\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <BudgetInfo {...budget} />\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          onClick={() => setModalOpened(true)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <BudgetModal {...budget} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Budget;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { StyledList } from './Elements';\r\nimport Budget from '../Budget';\r\nimport { RootState } from '../../../../store';\r\nimport '../../../../constant/style/animations.css';\r\n\r\nconst BudgetList: FC = (): JSX.Element => {\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n\r\n  const renderBudgets = (): JSX.Element[] => {\r\n    return budgets.map(budget => (\r\n      <CSSTransition timeout={200} classNames=\"slide\" key={budget._id}>\r\n        <li>\r\n          <Budget {...budget} />\r\n        </li>\r\n      </CSSTransition>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <StyledList>\r\n      <TransitionGroup component={null}>{renderBudgets()}</TransitionGroup>\r\n    </StyledList>\r\n  );\r\n};\r\n\r\nexport default BudgetList;\r\n","import { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addBudgetAction } from '../../../../store/budgets/actions';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport Form from '../../../../components/Form';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id: uuidv4(),\r\n      userId: googleUser ? googleUser?.googleId : null,\r\n      title: title,\r\n      amount: { actual: amount, currency, diff: 0, starting: amount },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .post(`${dbUrl}/budgets`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(addBudgetAction(budget.data));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(addBudgetAction(newBudget));\r\n  };\r\n\r\n  return <Form handleSubmit={handleSubmit} />;\r\n};\r\n\r\nexport default BudgetForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h2`\r\n  font-size: 3.5rem;\r\n  font-weight: 400;\r\n  color: var(--color-green);\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin-bottom: 2.5rem;\r\n`;\r\n","import axios from 'axios';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dbUrl } from '../../constant/routes';\r\n\r\nimport { RootState } from '../../store';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../store/loader';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { Header } from './Elements';\r\n\r\nconst AllMoney: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n  const googleId = useSelector(\r\n    (state: RootState) => state.googleUser?.googleId\r\n  );\r\n\r\n  let money = 0;\r\n  budgets.forEach(\r\n    budget =>\r\n      (money +=\r\n        budget.amount.actual / currency.currencies[budget.amount.currency])\r\n  );\r\n\r\n  money =\r\n    (money / currency.currencies['USD']) * currency.currencies[primaryCurrency];\r\n\r\n  const handleCurrencyChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    if (googleId) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .patch(`${dbUrl}/users/${googleId}`, {\r\n          currency: e.target.value,\r\n        })\r\n        .then(() => {\r\n          dispatch(setPrimaryCurrency(e.target.value));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(setPrimaryCurrency(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      {money.toFixed(2)}{' '}\r\n      <CurrencySelector color=\"green\" onChangeAction={handleCurrencyChange} />\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AllMoney;\r\n","import { FC } from 'react';\r\n\r\nimport BudgetList from './components/BudgetList';\r\nimport BudgetForm from './components/BudgetForm';\r\nimport AllMoney from '../../components/AllMoney';\r\n\r\nconst Budgets: FC = (): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <AllMoney />\r\n      <BudgetForm />\r\n      <BudgetList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Budgets;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 14rem;\r\n  flex-direction: column;\r\n`;\r\n","import { FC, useRef, useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport Form from '../../../../components/Form';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport { Select, Container } from './Elements';\r\nimport { Label } from '../../../../components/Form/Elements';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { Button } from '../../../../components/Button';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst PaymentForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  let budgetsLength = useRef(-1);\r\n\r\n  useEffect(() => {\r\n    if (budgetsLength.current !== budgets.length) {\r\n      if (budgets[0]) setSelectedBudgetId(budgets[0]._id);\r\n      else setSelectedBudgetId('');\r\n    }\r\n    return () => {\r\n      budgetsLength.current = budgets.length;\r\n    };\r\n  }, [budgets]);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newTransaction: TransactionType = {\r\n      _id: uuidv4(),\r\n      currency,\r\n      budgetId: selectedBudgetId,\r\n      userId: googleUser ? googleUser.googleId : null,\r\n      title,\r\n      amount,\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .post(`${dbUrl}/transactions`, {\r\n          ...newTransaction,\r\n        })\r\n        .then(transaction => {\r\n          dispatch(addTransactionAction(transaction.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(addTransactionAction(newTransaction));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => {\r\n      return (\r\n        <option key={budget._id} value={budget._id}>\r\n          {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n          {budget.amount.currency}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const selectedBudget = budgets.filter(\r\n    budget => budget._id === selectedBudgetId\r\n  )[0];\r\n\r\n  return (\r\n    <Form\r\n      handleSubmit={handleSubmit}\r\n      disabled={!budgets.length}\r\n      button={false}\r\n      currency={selectedBudget && selectedBudget.amount.currency}\r\n      childrenBefore={\r\n        <>\r\n          <Label htmlFor=\"selectBudget\">Select a budget</Label>\r\n          <Select\r\n            id=\"selectBudget\"\r\n            onChange={handleSelectChange}\r\n            value={selectedBudgetId}\r\n          >\r\n            {renderOptions()}\r\n          </Select>\r\n        </>\r\n      }\r\n    >\r\n      <>\r\n        {budgets[0] && (\r\n          <Container>\r\n            {selectedBudgetId && <BudgetInfo {...selectedBudget} />}\r\n          </Container>\r\n        )}\r\n        <Button\r\n          color=\"green\"\r\n          textColor=\"white\"\r\n          style={{ marginTop: '3rem', opacity: !budgets[0] ? 0.6 : 1 }}\r\n          onClick={e => !budgets[0] && e.preventDefault()}\r\n        >\r\n          {!budgets[0] ? 'Add a budget' : 'Add'}\r\n        </Button>\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h1`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { ButtonsContainer, Header } from './Elements';\r\nimport { ModalContext } from '../Modal';\r\nimport { Button } from '../Button';\r\n\r\ninterface ModalConfirmProps {\r\n  handleAction: () => void;\r\n}\r\n\r\nconst ModalConfirm: FC<ModalConfirmProps> = ({ handleAction }): JSX.Element => {\r\n  const context = useContext(ModalContext);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  return (\r\n    <div>\r\n      <Header>Are you sure?</Header>\r\n      <ButtonsContainer>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"gray-dark\"\r\n          secondary\r\n          style={{ width: '48%' }}\r\n          onClick={handleClose}\r\n          type=\"button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          style={{ width: '48%' }}\r\n          onClick={handleAction}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ButtonsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import { BiX } from 'react-icons/bi';\r\nimport styled from 'styled-components';\r\nimport { ColorType } from '../../../../components/BudgetInfo/Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Money = styled.div<ColorType>`\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-size: 2.1rem;\r\n  margin: 0 1rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const SmallTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.9;\r\n`;\r\n\r\nexport const DateHeader = styled.h3`\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const DeleteBtn = styled(Button)`\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CloseIcon = styled(BiX)`\r\n  font-size: 3rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DeleteText = styled.p`\r\n  display: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: inline;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport { removeTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport { getMoneyColor } from '../../../../utils/ux';\r\nimport Modal from '../../../../components/Modal';\r\nimport ModalConfirm from '../../../../components/ModalConfirm';\r\nimport {\r\n  CloseIcon,\r\n  Container,\r\n  DateHeader,\r\n  DeleteBtn,\r\n  DeleteText,\r\n  Money,\r\n  SmallTitle,\r\n  Title,\r\n} from './Elements';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst Transaction: FC<TransactionType> = ({\r\n  _id,\r\n  budgetId,\r\n  title,\r\n  amount,\r\n  date,\r\n  currency,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  const [budget, setBudget] = useState<null | BudgetType>(null);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const dateN = new Date(date);\r\n\r\n  useEffect(() => {\r\n    const selectedBudget = budgets.filter(budget => budget._id === budgetId)[0];\r\n\r\n    if (selectedBudget) {\r\n      setBudget(selectedBudget);\r\n    }\r\n  }, [budgets, budgetId]);\r\n\r\n  const handleDeleteTransaction = (): void => {\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/transactions/${_id}`).then(() => {\r\n        dispatch(removeTransactionAction(_id));\r\n        dispatch(changeTransactions());\r\n        dispatch(unsetLoaderAction());\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div style={{ flex: 1 }}>\r\n          <Title>{title}</Title>\r\n          {budget && <SmallTitle>{budget.title}</SmallTitle>}\r\n          <DateHeader>\r\n            {dateN.getFancyDate()} | {dateN.getFancyHours()}\r\n          </DateHeader>\r\n        </div>\r\n        <Money color={getMoneyColor(amount)}>\r\n          {amount} {currency}\r\n        </Money>\r\n        <div>\r\n          <DeleteBtn\r\n            color=\"red\"\r\n            textColor=\"white\"\r\n            onClick={() => setModalOpened(true)}\r\n          >\r\n            <CloseIcon />\r\n            <DeleteText>Delete</DeleteText>\r\n          </DeleteBtn>\r\n        </div>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <ModalConfirm handleAction={handleDeleteTransaction} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  margin: 4rem auto;\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 3rem;\r\n    }\r\n  }\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { RootState } from '../../../../store';\r\nimport Transaction from '../Transaction';\r\nimport { List } from './Elements';\r\nimport '../../../../constant/style/animations.css';\r\n\r\nconst TransactionList: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n\r\n  const renderTransactions = (): JSX.Element[] => {\r\n    return transactions.map(transaction => (\r\n      <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n        <li>\r\n          <Transaction {...transaction} />\r\n        </li>\r\n      </CSSTransition>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      <TransitionGroup component={null}>{renderTransactions()}</TransitionGroup>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import { FC } from 'react';\r\nimport AllMoney from '../../components/AllMoney';\r\n\r\nimport PaymentForm from './components/PaymentForm';\r\nimport TransactionList from './components/TransactionList';\r\n\r\nconst Payments: FC = () => {\r\n  return (\r\n    <div>\r\n      <AllMoney />\r\n      <PaymentForm />\r\n      <TransactionList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import { FC } from 'react';\r\n\r\nconst Statistics: FC = () => {\r\n  return <div>Statistics</div>;\r\n};\r\n\r\nexport default Statistics;\r\n","import { FC } from 'react';\r\n\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport Overview from '../pages/Overview';\r\nimport Budgets from '../pages/Budgets';\r\nimport Payments from '../pages/Payments';\r\nimport Statistics from '../pages/Statistics';\r\n\r\nimport '../constant/style/animations.css';\r\n\r\nconst AnimatedRouter: FC = (): JSX.Element => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <TransitionGroup component={null}>\r\n      <CSSTransition timeout={200} classNames=\"fade\" key={location.key}>\r\n        <Switch location={location}>\r\n          <Route exact path=\"/overview\">\r\n            <Overview />\r\n          </Route>\r\n          <Route exact path=\"/budgets\">\r\n            <Budgets />\r\n          </Route>\r\n          <Route exact path=\"/payments\">\r\n            <Payments />\r\n          </Route>\r\n          <Route exact path=\"/statistics\">\r\n            <Statistics />\r\n          </Route>\r\n        </Switch>\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default AnimatedRouter;\r\n","import axios from 'axios';\r\nimport { CurrencyType } from '../store/currency/types';\r\n\r\nexport const currencyExchangeAPI = async (\r\n  currencyFromState: CurrencyType\r\n): Promise<CurrencyType> => {\r\n  const date = new Date();\r\n  const lastFetchedDate = new Date(currencyFromState.dateFetched);\r\n\r\n  const dayInMiliseconds = 1000 * 60 * 60 * 24;\r\n  const daysBetweenDates = Math.floor(\r\n    (date.getTime() - lastFetchedDate.getTime()) / dayInMiliseconds\r\n  );\r\n\r\n  if (daysBetweenDates >= 7) {\r\n    interface rate {\r\n      [key: string]: number;\r\n    }\r\n\r\n    interface dataFetchedType {\r\n      rates: rate;\r\n      source: string;\r\n      date: string;\r\n      timestamp: number;\r\n    }\r\n\r\n    const currencies: dataFetchedType = await (\r\n      await axios.get(\r\n        'https://v1.nocodeapi.com/kriziuu/cx/FPLWrEBmjQDFHLdf/rates'\r\n      )\r\n    ).data;\r\n\r\n    let rates: rate = {};\r\n    for (const [key, value] of Object.entries(currencies.rates)) {\r\n      const rate: rate = { [key]: value };\r\n      rates = { ...rates, ...rate };\r\n    }\r\n\r\n    const currency: CurrencyType = {\r\n      dateFetched: date,\r\n      source: currencies.source,\r\n      currencies: rates,\r\n      primaryCurrency: currencyFromState.primaryCurrency,\r\n    };\r\n\r\n    return currency;\r\n  } else return currencyFromState;\r\n};\r\n","import axios from 'axios';\r\nimport { GoogleLoginResponse } from 'react-google-login';\r\nimport { dbUrl } from '../constant/routes';\r\nimport { BudgetType } from '../store/budgets/types';\r\nimport { TransactionType } from '../store/transactions/types';\r\n\r\ninterface ReturnResponseType {\r\n  budgets: BudgetType[];\r\n  transactions: TransactionType[];\r\n  userCurrency: string;\r\n}\r\n\r\nexport const dbAPI = async (\r\n  googleUser: GoogleLoginResponse['profileObj'],\r\n  setLoading: () => void,\r\n  unsetLoading: () => void\r\n): Promise<ReturnResponseType> => {\r\n  setLoading();\r\n\r\n  let budgets: BudgetType[] = await (\r\n    await axios.get(`${dbUrl}/budgets`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let transactions: TransactionType[] = await (\r\n    await axios.get(`${dbUrl}/transactions`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let userCurrency: string = '';\r\n\r\n  await axios\r\n    .get(`${dbUrl}/users/${googleUser?.googleId}`)\r\n    .then(res => {\r\n      userCurrency = res.data.currency;\r\n    })\r\n    .catch(() => {\r\n      axios.post(`${dbUrl}/users`, {\r\n        _id: googleUser?.googleId,\r\n        currency: 'USD',\r\n      });\r\n    });\r\n\r\n  budgets = budgets.map(budget => {\r\n    budget.date = new Date(budget.date);\r\n    return budget;\r\n  });\r\n\r\n  transactions.map(transaction => {\r\n    transaction.date = new Date(transaction.date);\r\n    return transaction;\r\n  });\r\n\r\n  unsetLoading();\r\n  return { budgets, transactions, userCurrency };\r\n};\r\n","import { FC, useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport GlobalStyle from './GlobalStyles';\r\nimport NavBar from './NavBar';\r\nimport { breakpoints } from '../constant/style/breakpoints';\r\nimport AnimatedRouter from './AnimatedRouter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n  removeAllBudgetsAction,\r\n} from '../store/budgets/actions';\r\nimport { RootState } from '../store';\r\nimport {\r\n  addTransactionAction,\r\n  removeAllTransactionsAction,\r\n} from '../store/transactions/actions';\r\nimport { setPrimaryCurrency, updateCurrency } from '../store/currency/actions';\r\nimport { currencyExchangeAPI } from '../api/currencyExchange';\r\nimport { dbAPI } from '../api/db';\r\nimport Modal from './Modal';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport { setLoaderAction, unsetLoaderAction } from '../store/loader';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 75vw;\r\n  }\r\n`;\r\n\r\nconst App: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const currencyFromState = useSelector((state: RootState) => state.currency);\r\n  const firstRender = useRef(true);\r\n  const loader = useSelector((state: RootState) => state.loader);\r\n\r\n  const setLoader = useCallback(() => dispatch(setLoaderAction()), [dispatch]);\r\n  const unsetLoader = useCallback(\r\n    () => dispatch(unsetLoaderAction()),\r\n    [dispatch]\r\n  );\r\n\r\n  // DATABASE\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n      dispatch(removeAllTransactionsAction());\r\n      dispatch(removeAllBudgetsAction());\r\n      dispatch(changeTransactions());\r\n    }\r\n\r\n    if (googleUser) {\r\n      dbAPI(googleUser, setLoader, unsetLoader).then(response => {\r\n        response.budgets.forEach(budget => {\r\n          dispatch(addBudgetAction(budget));\r\n        });\r\n        response.transactions.forEach(transaction => {\r\n          dispatch(addTransactionAction(transaction));\r\n        });\r\n\r\n        dispatch(setPrimaryCurrency(response.userCurrency));\r\n\r\n        dispatch(changeTransactions());\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      firstRender.current = false;\r\n    };\r\n  }, [googleUser, dispatch, setLoader, unsetLoader]);\r\n\r\n  // CURRENCY\r\n  useEffect(() => {\r\n    currencyExchangeAPI(currencyFromState).then(currency => {\r\n      dispatch(updateCurrency(currency));\r\n    });\r\n  }, [currencyFromState, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Container>\r\n        <Router>\r\n          <NavBar />\r\n          <main style={{ position: 'relative' }}>\r\n            <AnimatedRouter />\r\n          </main>\r\n        </Router>\r\n      </Container>\r\n      {loader && (\r\n        <Modal closeModal={() => {}} container={false} closable={false}>\r\n          <ClipLoader size=\"8rem\" color=\"silver\" />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n"],"sourceRoot":""}