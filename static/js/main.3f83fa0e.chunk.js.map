{"version":3,"sources":["store/googleUser/constants.ts","components/GlobalStyles.ts","constant/style/breakpoints.ts","components/Button/index.ts","components/NavBar/Elements.ts","constant/routes.ts","store/googleUser/actions.ts","store/localstorage.ts","utils/utility.ts","store/budgets/constants.ts","store/budgets/reducer.ts","store/currency/constants.ts","store/currency/reducer.ts","store/loader.ts","store/theme.ts","store/transactions/constants.ts","store/transactions/reducer.ts","store/index.ts","store/googleUser/reducer.ts","store/budgets/actions.ts","store/transactions/actions.ts","store/currency/actions.ts","components/ThemeChanger/index.tsx","components/NavBar/index.tsx","components/Header/index.ts","utils/ux.ts","components/Modal/Elements.ts","components/Modal/index.tsx","components/ModalConfirm/Elements.ts","components/ModalConfirm/index.tsx","pages/Payments/components/Transaction/Elements.ts","pages/Payments/components/Transaction/index.tsx","components/Dash/index.ts","pages/Overview/components/FrequentTransactionsList/Elements.ts","pages/Overview/components/FrequentTransactionsList/index.tsx","pages/Overview/components/MoneyLastMonth/Elements.ts","pages/Overview/components/MoneyLastMonth/index.tsx","components/BudgetInfo/Elements.ts","components/BudgetInfo/index.tsx","pages/Overview/components/MostValuableBudget/Elements.ts","pages/Overview/components/MostValuableBudget/index.tsx","pages/Overview/index.tsx","pages/Budgets/components/BudgetList/Elements.ts","pages/Budgets/components/Budget/Elements.ts","pages/Budgets/components/BudgetModal/Elements.ts","hooks/useForm.ts","components/Input/index.ts","components/Form/Elements.ts","components/CurrencySelector/Elements.ts","components/CurrencySelector/index.tsx","components/Form/index.tsx","pages/Budgets/components/BudgetModal/index.tsx","pages/Budgets/components/Budget/index.tsx","pages/Payments/components/TransactionList/Elements.ts","pages/Budgets/components/BudgetList/index.tsx","pages/Budgets/components/BudgetForm/index.tsx","pages/Budgets/index.tsx","pages/Payments/components/PaymentForm/Elements.ts","components/Checkbox/index.ts","pages/Payments/components/PaymentForm/index.tsx","pages/Payments/components/TransactionList/index.tsx","pages/Payments/index.tsx","pages/Statistics/index.tsx","components/AllMoney/index.tsx","components/AnimatedRouter.tsx","api/currencyExchange.ts","api/db.ts","components/Theme.ts","components/App.tsx","index.tsx"],"names":["Constants","GlobalStyle","createGlobalStyle","theme","background","border","text","body","breakpoints","Button","styled","button","props","secondary","color","textColor","Navigation","nav","HeaderContainer","div","ToggleNavButton","NavIcon","opened","focused","MobileLinksContainer","DesktopLinksContainer","ul","StyledLink","Link","$isactive","Avatar","url","GoogleButton","StyledThemeChanger","span","StyledThemeChangerDesktop","routes","dbUrl","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","Date","prototype","getFancyDate","day","this","getDate","toString","month","getMonth","parseInt","getFullYear","getFancyHours","hours","getHours","minutes","getMinutes","handleEnterPressed","e","action","key","timeout","ms","Promise","resolve","setTimeout","getMultiplier","transaction","monthly","hour","repeat","every","now","nowDate","getTime","transactionDate","date","multiplier","type","Math","floor","setLoaderAction","SET_LOADING","unsetLoaderAction","UNSET_LOADING","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","store","createStore","combineReducers","budgets","state","ADD_BUDGET","payload","budget","REMOVE_BUDGET","filter","_id","budgetId","EDIT_BUDGET","map","CHANGE_TRANSACTIONS","amount","actual","starting","currency","transactions","forEach","money","currencies","diff","REMOVE_BUDGET_ALL","ADD_TRANSACTION","REMOVE_TRANSACTION","transactionId","REMOVE_TRANSACTIONS_BUDGET","EDIT_TRANSACTION","REMOVE_TRANSACTION_ALL","googleUser","LOGIN","userInfo","LOGOUT","dateFetched","source","primaryCurrency","UPDATE_CURRENCY","SET_PRIMARY_CURRENCY","currencyString","loader","CHANGE_THEME","subscribe","getState","userId","stringify","setItem","saveState","addBudgetAction","removeBudgetAction","editBudgetAction","changeTransactions","addTransactionAction","removeTransactionAction","removeTransactionsByBudgetIdAction","setPrimaryCurrency","ThemeChanger","dispatch","useDispatch","useSelector","onClick","changeThemeAction","style","height","NavBar","useState","setOpened","btnFocused","setBtnFocued","btnRef","useRef","location","useLocation","toggleNavMenu","target","current","scrollTo","renderLinks","focusableByDefault","route","i","isActive","pathname","tabIndex","preventDefault","to","handleResponseGoogle","response","profileObj","handleLogout","a","marginRight","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","render","renderProps","disabled","imageUrl","onLogoutSuccess","aria-label","onFocus","onBlur","ref","Header2","h1","$color","h2","Header3","h3","Header4","h4","Header5","h5","Header6","h6","NoMessage","getMoneyColor","Background","animating","Container","Center","modalRoot","document","getElementById","ModalContext","createContext","handleClose","Modal","children","closeModal","closable","container","setAnimating","bgRef","useEffect","ReactDOM","createPortal","handleBgClick","Provider","value","ButtonsContainer","ModalConfirm","handleAction","context","useContext","marginBottom","width","Money","Title","MediumTitle","SmallTitle","DateHeader","DeleteBtn","CloseIcon","BiX","DeleteText","p","Transaction","title","deletable","modalOpened","setModalOpened","setBudget","dateN","selectedBudget","flex","display","flexDirection","alignItems","axios","delete","then","Dash","FrequentTransactionsList","history","useHistory","sort","b","slice","transactionsRepeated","marginTop","push","onKeyPress","length","SmContainer","MoneyLastMonth","income","spent","total","moneyLastMonth","setMoneyLastMonth","amountToAdd","toFixed","DiffSpan","SmallMoneyHeader","DiffIcon","BudgetInfo","BudgetContainer","MostValuableBudget","Overview","StyledList","Top","IconSpan","useForm","initialState","newState","Object","entries","checked","formData","setFormData","name","bool","required","Input","input","Label","label","StyledForm","form","Warning","MinPlus","MinPlusIcon","minus","Select","select","CurrencySelector","onChangeAction","currentCurrency","setCurrentCurrency","onChange","Form","handleSubmit","childrenBefore","data","pageTitle","toggleChecked","handleInputChange","formCurrency","setFormCurrency","setMinus","clicked","parseFloat","onSubmit","amountCheck","titleCheck","amountNum","noValidate","autoComplete","htmlFor","id","placeholder","position","padding","fontSize","right","BudgetModal","newTitle","newAmount","newCurrency","newBudget","googleId","patch","Budget","List","Flex","Line","BudgetList","selectedSort","setSelectedSort","TransitionGroup","component","sortedBudgets","compare","split","localeCompare","reverse","CSSTransition","classNames","renderBudgets","BudgetForm","uuidv4","post","Budgets","StyledP","SmallContainer","AnimatedSmallContainer","animate","CheckBox","PaymentForm","selectedBudgetId","setSelectedBudgetId","repeatTransaction","setRepeatTransaction","startDate","setStartDate","dateCheck","setDateCheck","check","budgetsLength","handleCheckboxCheck","newTransaction","in","unmountOnExit","className","isNaN","maxLength","opacity","TransactionList","selectedTransactions","renderTransactionsRepeat","renderTransactions","Payments","Statistics","AllMoney","AnimatedRouter","exact","path","currencyExchangeAPI","currencyFromState","lastFetchedDate","get","rates","rate","dbAPI","setLoading","unsetLoading","params","userCurrency","res","catch","lightTheme","darkTheme","App","firstRender","setLoader","useCallback","unsetLoader","updateCurrency","size"],"mappings":"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","file":"static/js/main.3f83fa0e.chunk.js","sourcesContent":["export enum Constants {\r\n  LOGIN = 'LOGIN',\r\n  LOGOUT = 'LOGOUT',\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\ndeclare module 'styled-components' {\r\n  export interface DefaultTheme {\r\n    body: string;\r\n    text: string;\r\n    border: string;\r\n    background: string;\r\n  }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  select {\r\n    background-color: ${({ theme }) => theme.background} !important;\r\n    border: 1px solid ${({ theme }) => theme.border} !important;\r\n    color: ${({ theme }) => theme.text} !important;\r\n\r\n    :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light) !important;\r\n  }\r\n  }\r\n\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-family: Roboto;\r\n    box-sizing: border-box;\r\n    background-color: ${({ theme }) => theme.body};\r\n\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all .3s;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n\r\n  :root {\r\n    // COLORS\r\n    --color-red: #E53E3E;\r\n    --color-gray: #CBD5E0;\r\n    --color-gray-dark: #1A202C;\r\n    --color-green: #48BB78;\r\n    --color-black: #222;\r\n    --color-white: #fff;\r\n    --color-blue-light: #90CDF4;\r\n\r\n    // TRANSITIONS\r\n    --trans-default: all .2s ease;\r\n    \r\n    // SHADOWS\r\n    --shadow-default: 0px 5px 30px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const breakpoints = {\r\n  mobile: '36rem', // 576px\r\n  tablet: '48rem', // 768px\r\n  laptop: '62rem', // 992px\r\n  desktop: '75rem', // 1200px\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  color: string;\r\n  textColor: string;\r\n  secondary?: boolean;\r\n}\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  border-radius: 1rem;\r\n  border: ${props =>\r\n    props.secondary ? `2px solid var(--color-${props.color})` : 'none'};\r\n  width: 100%;\r\n  font-size: 1.8rem;\r\n  padding: 1.1rem;\r\n  color: ${props => `var(--color-${props.textColor})`};\r\n  background-color: ${props =>\r\n    props.secondary ? 'var(--color-white)' : `var(--color-${props.color})`};\r\n  font-family: inherit;\r\n  transition: var(--trans-default);\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n    transform: translateY(-5%);\r\n    cursor: pointer;\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.3);\r\n    ${props =>\r\n      props.secondary &&\r\n      `background-color: var(--color-${props.color}); color: var(--color-white)`};\r\n  }\r\n\r\n  :active {\r\n    transform: translateY(2%);\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\nimport { Button } from '../Button';\r\nimport ThemeChanger from '../ThemeChanger';\r\n\r\ninterface NavProps {\r\n  opened?: boolean;\r\n  focused?: boolean;\r\n}\r\n\r\nexport const Navigation = styled.nav`\r\n  color: #111;\r\n  letter-spacing: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 3.5rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    font-weight: 500;\r\n    font-size: 3rem;\r\n    margin-right: 2rem;\r\n    display: none;\r\n    color: ${({ theme }) => theme.text};\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ToggleNavButton = styled.button`\r\n  width: 4.5rem;\r\n  height: 4.5rem;\r\n  border-radius: 35%;\r\n  background-color: #111;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 11;\r\n  position: fixed;\r\n  right: 3.5rem;\r\n  transition: var(--trans-default);\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavIcon = styled.div<NavProps>`\r\n  pointer-events: none;\r\n  width: 2.2rem;\r\n  height: 3px;\r\n  background-color: #fff;\r\n\r\n  transform: ${props =>\r\n    props.opened ? 'rotate(225deg) scale(1.3)' : 'rotate(0) scale(1)'};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.opened\r\n        ? `rotate(90deg) translateY(0)`\r\n        : `rotate(0) translateY(${props.focused ? '250%' : '125%'})`};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.focused ? 'translateY(-350%)' : 'translateY(-225%)'};\r\n\r\n    display: ${props => (props.opened ? 'none' : 'block')};\r\n  }\r\n`;\r\n\r\nexport const MobileLinksContainer = styled.div<NavProps>`\r\n  background-color: #111;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  transition: var(--trans-default);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  transform: ${props => (props.opened ? 'translateX(0)' : 'translateX(-100%)')};\r\n\r\n  ul {\r\n    transition: var(--trans-default);\r\n    transition-delay: 0.1s;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n    margin-bottom: 25%;\r\n\r\n    transform: ${props =>\r\n      props.opened ? 'translateX(0)' : 'translateX(-100%)'};\r\n\r\n    li {\r\n      :not(:last-child) {\r\n        margin-bottom: 4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopLinksContainer = styled.ul`\r\n  width: 47rem;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n    :not(:last-child) {\r\n    }\r\n  }\r\n\r\n  display: none;\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)<{ $isactive: boolean }>`\r\n  font-size: 2.5rem;\r\n  text-decoration: none;\r\n  text-transform: capitalize;\r\n  ${props => props.$isactive && 'text-decoration: underline; cursor: default;'}\r\n\r\n  color: #fff;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\ntype url = { url: string };\r\n\r\nexport const Avatar = styled.div<url>`\r\n  border-radius: 50%;\r\n  background-image: ${props => `url('${props.url}')`};\r\n  background-size: cover;\r\n  padding: 2rem;\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nexport const GoogleButton = styled(Button)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0.9rem;\r\n\r\n  svg {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const StyledThemeChanger = styled.span`\r\n  position: absolute;\r\n  top: 3.5rem;\r\n  left: 3.5rem;\r\n`;\r\n\r\nexport const StyledThemeChangerDesktop = styled.span`\r\n  display: none;\r\n  margin-left: 2rem;\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: block;\r\n  }\r\n`;\r\n","export const routes = ['overview', 'budgets', 'payments', 'statistics'];\r\n\r\nexport const dbUrl = 'https://budgety-server.herokuapp.com';\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { action } from 'typesafe-actions';\r\nimport { Constants } from './constants';\r\n\r\nexport const loginAction = (userInfo: GoogleLoginResponse['profileObj']) => {\r\n  return action(Constants.LOGIN, { userInfo });\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  return action(Constants.LOGOUT);\r\n};\r\n","import { RootState } from '.';\r\n\r\nexport const loadState = (): RootState | undefined => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    const state: RootState = JSON.parse(serializedState);\r\n    return state;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: RootState): void => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { TransactionType } from '../store/transactions/types';\r\n\r\n// PROTOTYPES\r\ndeclare global {\r\n  interface Date {\r\n    getFancyDate(): string;\r\n    getFancyHours(): string;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyDate = function (): string {\r\n  let day = this.getDate().toString();\r\n  let month = (this.getMonth() + 1).toString();\r\n\r\n  if (parseInt(day) < 10) day = `0${day}`;\r\n  if (parseInt(month) < 10) month = `0${month}`;\r\n\r\n  return `${day}/${month}/${this.getFullYear()}`;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyHours = function (): string {\r\n  let hours = this.getHours().toString();\r\n  let minutes = this.getMinutes().toString();\r\n\r\n  if (parseInt(minutes) < 10) minutes = `0${minutes}`;\r\n  if (parseInt(hours) < 10) hours = `0${hours}`;\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const handleEnterPressed = (\r\n  e: React.KeyboardEvent,\r\n  action: (e: React.SyntheticEvent) => void\r\n): void => {\r\n  if (e.key === 'Enter') action(e);\r\n};\r\n\r\nexport const timeout = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n\r\nexport const getMultiplier = (\r\n  transaction: TransactionType,\r\n  monthly: boolean = false\r\n): number => {\r\n  const hour = 1000 * 60 * 60 * transaction.repeat.every;\r\n  const now = new Date();\r\n  const nowDate = now.getTime();\r\n  const transactionDate = monthly\r\n    ? new Date(now.getFullYear(), now.getMonth(), 1).getTime()\r\n    : new Date(transaction.date).getTime();\r\n  let multiplier = 1;\r\n\r\n  if (!transaction.repeat.repeat) return 1;\r\n\r\n  switch (transaction.repeat.type) {\r\n    case 'hours':\r\n      multiplier = Math.floor((nowDate - transactionDate) / hour);\r\n      break;\r\n    case 'days':\r\n      multiplier = Math.floor((nowDate - transactionDate) / (hour * 24));\r\n      break;\r\n    case 'month':\r\n      multiplier = Math.floor((nowDate - transactionDate) / (hour * 24 * 31));\r\n      break;\r\n    case 'year':\r\n      multiplier = Math.floor((nowDate - transactionDate) / (hour * 24 * 365));\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n  }\r\n\r\n  return multiplier;\r\n};\r\n","export enum Constants {\r\n  ADD_BUDGET = 'ADD_BUDGET',\r\n  REMOVE_BUDGET = 'REMOVE_BUDGET',\r\n  EDIT_BUDGET = 'EDIT_BUDGET',\r\n  CHANGE_TRANSACTIONS = 'CHANGE_TRANSACTIONS',\r\n  REMOVE_BUDGET_ALL = 'REMOVE_BUDGET_ALL',\r\n}\r\n","import { getMultiplier } from '../../utils/utility';\r\nimport { Constants } from './constants';\r\nimport { BudgetsActions, BudgetsState } from './types';\r\n\r\nexport const budgetsReducer = (\r\n  state: BudgetsState = [],\r\n  action: BudgetsActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_BUDGET:\r\n      return [...state, action.payload.budget];\r\n\r\n    case Constants.REMOVE_BUDGET:\r\n      newState = state.filter(budget => budget._id !== action.payload.budgetId);\r\n      return newState;\r\n\r\n    case Constants.EDIT_BUDGET:\r\n      newState = state.map(budget => {\r\n        if (budget._id === action.payload.budget._id) {\r\n          return action.payload.budget;\r\n        }\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.CHANGE_TRANSACTIONS:\r\n      newState = state.map(budget => {\r\n        budget.amount.actual = budget.amount.starting;\r\n        const currency = action.payload.currency;\r\n\r\n        action.payload.transactions.forEach(transaction => {\r\n          let money =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[budget.amount.currency];\r\n\r\n          const multiplier = getMultiplier(transaction);\r\n\r\n          if (transaction.repeat.repeat) money = money + money * multiplier;\r\n\r\n          if (transaction.budgetId === budget._id) {\r\n            budget = {\r\n              ...budget,\r\n              amount: {\r\n                ...budget.amount,\r\n                actual: budget.amount.actual + money,\r\n              },\r\n            };\r\n          }\r\n        });\r\n\r\n        budget = {\r\n          ...budget,\r\n          amount: {\r\n            ...budget.amount,\r\n            diff: budget.amount.actual - budget.amount.starting,\r\n          },\r\n        };\r\n\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_BUDGET_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  UPDATE_CURRENCY = 'UPDATE_CURRENCY',\r\n  SET_PRIMARY_CURRENCY = 'SET_PRIMARY_CURRENCY',\r\n}\r\n","import { Constants } from './constants';\r\nimport { CurrencyActions, CurrencyType } from './types';\r\n\r\nexport const currencyReducer = (\r\n  state: CurrencyType = {\r\n    dateFetched: new Date(0),\r\n    source: 'USD',\r\n    currencies: {},\r\n    primaryCurrency: 'USD',\r\n  },\r\n  action: CurrencyActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_CURRENCY:\r\n      return action.payload.currency;\r\n\r\n    case Constants.SET_PRIMARY_CURRENCY:\r\n      return { ...state, primaryCurrency: action.payload.currencyString };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionType } from 'typesafe-actions';\r\nimport { action } from 'typesafe-actions';\r\n\r\nexport enum Constants {\r\n  SET_LOADING = 'SET_LOADING',\r\n  UNSET_LOADING = 'UNSET_LOADING',\r\n}\r\n\r\nexport const setLoaderAction = () => {\r\n  return action(Constants.SET_LOADING);\r\n};\r\n\r\nexport const unsetLoaderAction = () => {\r\n  return action(Constants.UNSET_LOADING);\r\n};\r\n\r\nconst actions = {\r\n  setLoaderAction,\r\n  unsetLoaderAction,\r\n};\r\n\r\nexport type LoaderActions = ActionType<typeof actions>;\r\n\r\nexport const loaderReducer = (\r\n  state: boolean = false,\r\n  action: LoaderActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.SET_LOADING:\r\n      return true;\r\n\r\n    case Constants.UNSET_LOADING:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionType } from 'typesafe-actions';\r\nimport { action } from 'typesafe-actions';\r\n\r\nexport enum Constants {\r\n  CHANGE_THEME = 'CHANGE_THEME',\r\n}\r\n\r\nexport const changeThemeAction = (theme: 'light' | 'dark') => {\r\n  return action(Constants.CHANGE_THEME, { theme });\r\n};\r\n\r\nexport type ThemeActions = ActionType<typeof changeThemeAction>;\r\n\r\nexport const themeReducer = (\r\n  state: 'light' | 'dark' = 'light',\r\n  action: ThemeActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.CHANGE_THEME:\r\n      return action.payload.theme;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  ADD_TRANSACTION = 'ADD_TRANSACTION',\r\n  REMOVE_TRANSACTION = 'REMOVE_TRANSACTION',\r\n  REMOVE_TRANSACTIONS_BUDGET = 'REMOVE_TRANSACTIONS_BUDGET',\r\n  EDIT_TRANSACTION = 'EDIT_TRANSACTION',\r\n  REMOVE_TRANSACTION_ALL = 'REMOVE_TRANSACTION_ALL',\r\n}\r\n","import { Constants } from './constants';\r\nimport { TransactionActions, TransactionState } from './types';\r\n\r\nexport const transactionReducer = (\r\n  state: TransactionState = [],\r\n  action: TransactionActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_TRANSACTION:\r\n      return [...state, action.payload.transaction];\r\n\r\n    case Constants.REMOVE_TRANSACTION:\r\n      newState = state.filter(\r\n        transaction => transaction._id !== action.payload.transactionId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTIONS_BUDGET:\r\n      newState = state.filter(\r\n        transaction => transaction.budgetId !== action.payload.budgetId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.EDIT_TRANSACTION:\r\n      newState = state.map(transaction => {\r\n        if (transaction._id === action.payload.transaction._id) {\r\n          return action.payload.transaction;\r\n        }\r\n        return transaction;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTION_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { combineReducers, createStore, compose } from 'redux';\r\n\r\nimport { budgetsReducer } from './budgets/reducer';\r\nimport { BudgetsState } from './budgets/types';\r\nimport { currencyReducer } from './currency/reducer';\r\nimport { CurrencyType } from './currency/types';\r\nimport { googleUserReducer } from './googleUser/reducer';\r\nimport { loaderReducer } from './loader';\r\nimport { loadState, saveState } from './localstorage';\r\nimport { themeReducer } from './theme';\r\nimport { transactionReducer } from './transactions/reducer';\r\nimport { TransactionState } from './transactions/types';\r\n\r\nexport interface RootState {\r\n  budgets: BudgetsState;\r\n  transactions: TransactionState;\r\n  googleUser: GoogleLoginResponse['profileObj'] | null;\r\n  currency: CurrencyType;\r\n  loader: boolean;\r\n  theme: 'light' | 'dark';\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  combineReducers<RootState>({\r\n    budgets: budgetsReducer,\r\n    transactions: transactionReducer,\r\n    googleUser: googleUserReducer,\r\n    currency: currencyReducer,\r\n    loader: loaderReducer,\r\n    theme: themeReducer,\r\n  }),\r\n  persistedState,\r\n  composeEnhancers()\r\n);\r\n\r\nstore.subscribe((): void => {\r\n  const state = store.getState();\r\n\r\n  const budgets = state.budgets.filter(budget => budget.userId === null);\r\n  const transactions = state.transactions.filter(\r\n    transaction => transaction.userId === null\r\n  );\r\n\r\n  if (state.googleUser === null)\r\n    saveState({\r\n      ...state,\r\n      budgets,\r\n      transactions,\r\n      googleUser: null,\r\n    });\r\n});\r\n\r\nexport default store;\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { Constants } from './constants';\r\nimport { GoogleUserActions } from './types';\r\n\r\nexport const googleUserReducer = (\r\n  state: GoogleLoginResponse['profileObj'] | null = null,\r\n  action: GoogleUserActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.LOGIN:\r\n      return { ...action.payload.userInfo };\r\n\r\n    case Constants.LOGOUT:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport store from '..';\r\nimport { BudgetType } from './types';\r\nimport { TransactionType } from '../transactions/types';\r\nimport { Constants } from './constants';\r\nimport { CurrencyType } from '../currency/types';\r\n\r\nexport const addBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.ADD_BUDGET, { budget });\r\n};\r\n\r\nexport const removeBudgetAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.EDIT_BUDGET, { budget });\r\n};\r\n\r\nexport const changeTransactions = () => {\r\n  const transactions: TransactionType[] = store.getState().transactions;\r\n  const currency: CurrencyType = store.getState().currency;\r\n  return action(Constants.CHANGE_TRANSACTIONS, { transactions, currency });\r\n};\r\n\r\nexport const removeAllBudgetsAction = () => {\r\n  return action(Constants.REMOVE_BUDGET_ALL);\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { TransactionType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const addTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.ADD_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeTransactionAction = (transactionId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTION, { transactionId });\r\n};\r\n\r\nexport const removeTransactionsByBudgetIdAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTIONS_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.EDIT_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeAllTransactionsAction = () => {\r\n  return action(Constants.REMOVE_TRANSACTION_ALL);\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { CurrencyType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const updateCurrency = (currency: CurrencyType) => {\r\n  return action(Constants.UPDATE_CURRENCY, { currency });\r\n};\r\n\r\nexport const setPrimaryCurrency = (currencyString: string) => {\r\n  return action(Constants.SET_PRIMARY_CURRENCY, { currencyString });\r\n};\r\n","import { FC } from 'react';\r\nimport { BiMoon } from 'react-icons/bi';\r\nimport { IoMdSunny } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { changeThemeAction } from '../../store/theme';\r\nimport { Button } from '../Button';\r\n\r\nconst ThemeChanger: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector((state: RootState) => state.theme);\r\n\r\n  const handleThemeChange = (): void => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n\r\n    dispatch(changeThemeAction(newTheme));\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      color={theme === 'light' ? 'gray' : 'black'}\r\n      textColor={theme === 'light' ? 'black' : 'white'}\r\n      onClick={handleThemeChange}\r\n      style={{ height: '4rem' }}\r\n    >\r\n      {theme === 'light' ? <IoMdSunny /> : <BiMoon />}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ThemeChanger;\r\n","import React, { FC, useState, useRef } from 'react';\r\n\r\nimport GoogleLogin, {\r\n  GoogleLoginResponse,\r\n  GoogleLoginResponseOffline,\r\n  GoogleLogout,\r\n} from 'react-google-login';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  Navigation,\r\n  HeaderContainer,\r\n  ToggleNavButton,\r\n  NavIcon,\r\n  MobileLinksContainer,\r\n  StyledLink,\r\n  DesktopLinksContainer,\r\n  Avatar,\r\n  GoogleButton,\r\n  StyledThemeChanger,\r\n  StyledThemeChangerDesktop,\r\n} from './Elements';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport { routes } from '../../constant/routes';\r\nimport { loginAction, logoutAction } from '../../store/googleUser/actions';\r\nimport { RootState } from '../../store';\r\nimport { loadState } from '../../store/localstorage';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n} from '../../store/budgets/actions';\r\nimport { timeout } from '../../utils/utility';\r\nimport { addTransactionAction } from '../../store/transactions/actions';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { useLocation } from 'react-router-dom';\r\nimport ThemeChanger from '../ThemeChanger';\r\n\r\nconst NavBar: FC = (): JSX.Element => {\r\n  const [opened, setOpened] = useState(false);\r\n  const [btnFocused, setBtnFocued] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const location = useLocation();\r\n\r\n  const toggleNavMenu = (e: React.MouseEvent) => {\r\n    setOpened(!opened);\r\n    if (!(e.target === btnRef.current)) window.scrollTo(0, 0);\r\n  };\r\n\r\n  const renderLinks = (\r\n    routes: string[],\r\n    focusableByDefault = true\r\n  ): JSX.Element[] => {\r\n    return routes.map((route, i) => {\r\n      const isActive = `/${route}` === location.pathname ? true : false;\r\n\r\n      return (\r\n        <li key={i}>\r\n          <StyledLink\r\n            tabIndex={focusableByDefault ? 0 : opened ? 0 : -1}\r\n            onClick={e => (!isActive ? toggleNavMenu(e) : e.preventDefault())}\r\n            to={route}\r\n            $isactive={isActive}\r\n          >\r\n            {route}\r\n          </StyledLink>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleResponseGoogle = (\r\n    response: GoogleLoginResponse | GoogleLoginResponseOffline\r\n  ) => {\r\n    if ((response as GoogleLoginResponse).profileObj) {\r\n      dispatch(loginAction((response as GoogleLoginResponse).profileObj));\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    const state = loadState();\r\n    dispatch(logoutAction());\r\n\r\n    if (state) {\r\n      await timeout(100);\r\n      state.budgets.forEach(budget => dispatch(addBudgetAction(budget)));\r\n      state.transactions.forEach(transaction =>\r\n        dispatch(addTransactionAction(transaction))\r\n      );\r\n\r\n      dispatch(setPrimaryCurrency(state.currency.primaryCurrency));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navigation>\r\n      <HeaderContainer>\r\n        <h1 style={{ marginRight: '1rem' }}>Budgety</h1>\r\n        {googleUser === null ? (\r\n          <GoogleLogin\r\n            clientId=\"118372615416-g77a8gaf92slnb4f50jr6o9cmh0f4ho1.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={handleResponseGoogle}\r\n            onFailure={handleResponseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn\r\n            render={renderProps => (\r\n              <GoogleButton\r\n                color=\"red\"\r\n                textColor=\"white\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <FaGoogle />\r\n                Login\r\n              </GoogleButton>\r\n            )}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Avatar url={googleUser.imageUrl} />\r\n            <GoogleLogout\r\n              clientId=\"118372615416-cjlib17tonjdhn4tqtpnetm7mif08ah9.apps.googleusercontent.com\"\r\n              buttonText=\"Logout\"\r\n              onLogoutSuccess={handleLogout}\r\n              render={renderProps => (\r\n                <GoogleButton\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={renderProps.onClick}\r\n                  disabled={renderProps.disabled}\r\n                >\r\n                  <FaGoogle />\r\n                  Logout\r\n                </GoogleButton>\r\n              )}\r\n            />\r\n            <StyledThemeChangerDesktop>\r\n              <ThemeChanger />\r\n            </StyledThemeChangerDesktop>\r\n          </>\r\n        )}\r\n      </HeaderContainer>\r\n      <ToggleNavButton\r\n        aria-label=\"Navigation button\"\r\n        onClick={toggleNavMenu}\r\n        onFocus={() => setBtnFocued(true)}\r\n        onBlur={() => setBtnFocued(false)}\r\n        ref={btnRef}\r\n      >\r\n        <NavIcon opened={opened} focused={btnFocused} />\r\n      </ToggleNavButton>\r\n      <MobileLinksContainer opened={opened}>\r\n        <StyledThemeChanger>\r\n          <ThemeChanger />\r\n        </StyledThemeChanger>\r\n        <ul>{renderLinks(routes, false)}</ul>\r\n      </MobileLinksContainer>\r\n      <DesktopLinksContainer>{renderLinks(routes)}</DesktopLinksContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header1 = styled.h1<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 4rem;\r\n  font-weight: 400;\r\n  color: ${props =>\r\n    props.$color === 'black'\r\n      ? props.theme.text\r\n      : `var(--color-${props.$color})`};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nexport const Header2 = styled.h2<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 3.5rem;\r\n  font-weight: 400;\r\n  color: ${props =>\r\n    props.$color === 'black'\r\n      ? props.theme.text\r\n      : `var(--color-${props.$color})`};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const Header3 = styled.h3<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 3rem;\r\n  font-weight: 400;\r\n  color: ${props =>\r\n    props.$color === 'black'\r\n      ? props.theme.text\r\n      : `var(--color-${props.$color})`};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const Header4 = styled.h4<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 2.5rem;\r\n  font-weight: 500;\r\n  color: ${props =>\r\n    props.$color === 'black'\r\n      ? props.theme.text\r\n      : `var(--color-${props.$color})`};\r\n  text-align: center;\r\n  margin: 0.75rem 0;\r\n`;\r\n\r\nexport const Header5 = styled.h5<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 2.3rem;\r\n  font-weight: 500;\r\n  color: ${props =>\r\n    props.$color === 'black'\r\n      ? props.theme.text\r\n      : `var(--color-${props.$color})`};\r\n  text-align: center;\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nexport const Header6 = styled.h6<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n  color: ${props =>\r\n    props.$color === 'black'\r\n      ? props.theme.text\r\n      : `var(--color-${props.$color})`};\r\n  text-align: center;\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nexport const NoMessage = styled.h3`\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.text};\r\n  opacity: 0.5;\r\n`;\r\n","export const getMoneyColor = (amount: number): 'red' | 'green' | 'black' => {\r\n  if (amount > 0) return 'green';\r\n  else if (amount < 0) return 'red';\r\n  return 'black';\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const Background = styled.div<{ animating: boolean }>`\r\n  position: fixed;\r\n  z-index: 20;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  transition: var(--trans-default);\r\n  opacity: ${props => (props.animating ? '0' : '100%')};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  z-index: 21;\r\n  background-color: ${({ theme }) => theme.body};\r\n  width: 75%;\r\n  padding: 2rem 2rem;\r\n  border-radius: 1rem;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 50rem;\r\n  }\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n`;\r\n","import ReactDOM from 'react-dom';\r\nimport { FC, useRef } from 'react';\r\n\r\nimport { Background, Center, Container } from './Elements';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nconst modalRoot = document.getElementById('modal') as HTMLElement;\r\n\r\nexport const ModalContext = createContext({ handleClose: () => {} });\r\n\r\ninterface ModalProps {\r\n  children: JSX.Element;\r\n  closeModal: () => void;\r\n  closable?: boolean;\r\n  container?: boolean;\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({\r\n  children,\r\n  closeModal,\r\n  closable = true,\r\n  container = true,\r\n}): JSX.Element => {\r\n  const [animating, setAnimating] = useState(true);\r\n  const bgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setAnimating(false);\r\n  }, []);\r\n\r\n  const handleClose = (): void => {\r\n    setAnimating(true);\r\n    setTimeout(() => closeModal(), 200);\r\n  };\r\n\r\n  const handleBgClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ): void => {\r\n    if (e.target === bgRef.current && closable) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Background\r\n      animating={animating}\r\n      ref={bgRef}\r\n      onClick={e => handleBgClick(e)}\r\n    >\r\n      {container ? (\r\n        <Container>\r\n          <ModalContext.Provider value={{ handleClose }}>\r\n            {children}\r\n          </ModalContext.Provider>\r\n        </Container>\r\n      ) : (\r\n        <ModalContext.Provider value={{ handleClose }}>\r\n          <Center>{children}</Center>\r\n        </ModalContext.Provider>\r\n      )}\r\n    </Background>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { ButtonsContainer } from './Elements';\r\nimport { ModalContext } from '../Modal';\r\nimport { Button } from '../Button';\r\nimport { Header4 } from '../Header';\r\n\r\ninterface ModalConfirmProps {\r\n  handleAction: () => void;\r\n}\r\n\r\nconst ModalConfirm: FC<ModalConfirmProps> = ({ handleAction }): JSX.Element => {\r\n  const context = useContext(ModalContext);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleActionClicked = (): void => {\r\n    context.handleClose();\r\n\r\n    handleAction();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header4 style={{ marginBottom: '2rem' }}>Are you sure?</Header4>\r\n      <ButtonsContainer>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"gray-dark\"\r\n          secondary\r\n          style={{ width: '48%' }}\r\n          onClick={handleClose}\r\n          type=\"button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          style={{ width: '48%' }}\r\n          onClick={handleActionClicked}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ButtonsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import { BiX } from 'react-icons/bi';\r\nimport styled from 'styled-components';\r\nimport { ColorType } from '../../../../components/BudgetInfo/Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Money = styled.div<ColorType>`\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-size: 2.1rem;\r\n  margin: 0 1rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const MediumTitle = styled.h2`\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0.5rem;\r\n  width: max-content;\r\n`;\r\n\r\nexport const SmallTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  opacity: 0.9;\r\n`;\r\n\r\nexport const DateHeader = styled.h3`\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const DeleteBtn = styled(Button)`\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CloseIcon = styled(BiX)`\r\n  font-size: 3rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DeleteText = styled.p`\r\n  display: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: inline;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport { removeTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport { getMoneyColor } from '../../../../utils/ux';\r\nimport Modal from '../../../../components/Modal';\r\nimport ModalConfirm from '../../../../components/ModalConfirm';\r\nimport {\r\n  CloseIcon,\r\n  Container,\r\n  DateHeader,\r\n  DeleteBtn,\r\n  DeleteText,\r\n  MediumTitle,\r\n  Money,\r\n  SmallTitle,\r\n  Title,\r\n} from './Elements';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\ninterface TransactionProps extends TransactionType {\r\n  deletable?: boolean;\r\n}\r\n\r\nconst Transaction: FC<TransactionProps> = ({\r\n  _id,\r\n  budgetId,\r\n  title,\r\n  amount,\r\n  repeat,\r\n  date,\r\n  currency,\r\n  deletable = true,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  const [budget, setBudget] = useState<null | BudgetType>(null);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const dateN = new Date(date);\r\n\r\n  useEffect(() => {\r\n    const selectedBudget = budgets.filter(budget => budget._id === budgetId)[0];\r\n\r\n    if (selectedBudget) {\r\n      setBudget(selectedBudget);\r\n    }\r\n  }, [budgets, budgetId]);\r\n\r\n  const handleDeleteTransaction = (): void => {\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/transactions/${_id}`).then(() => {\r\n        dispatch(removeTransactionAction(_id));\r\n        dispatch(changeTransactions());\r\n        dispatch(unsetLoaderAction());\r\n      });\r\n    } else {\r\n      dispatch(removeTransactionAction(_id));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div style={{ flex: 1 }}>\r\n          <Title>{title}</Title>\r\n\r\n          {budget && <SmallTitle>{budget.title}</SmallTitle>}\r\n\r\n          <DateHeader>\r\n            {dateN.getFancyDate()} | {dateN.getFancyHours()}\r\n          </DateHeader>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          {repeat.repeat && (\r\n            <MediumTitle>\r\n              Every {repeat.every} {repeat.type}\r\n            </MediumTitle>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Money color={getMoneyColor(amount)}>\r\n              {amount} {currency}\r\n            </Money>\r\n\r\n            {deletable && (\r\n              <div>\r\n                <DeleteBtn\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={() => setModalOpened(true)}\r\n                >\r\n                  <CloseIcon />\r\n                  <DeleteText>Delete</DeleteText>\r\n                </DeleteBtn>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <ModalConfirm handleAction={handleDeleteTransaction} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import styled from 'styled-components';\r\n\r\nexport const Dash = styled.span`\r\n  border-radius: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1.8rem;\r\n  opacity: 0.5;\r\n  height: min-content;\r\n  display: inline-block;\r\n  background-color: var(--color-gray);\r\n  cursor: pointer;\r\n  color: black;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.ul`\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  list-style: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport Transaction from '../../../Payments/components/Transaction';\r\nimport { NoMessage } from '../../../../components/Header';\r\nimport { Dash } from '../../../../components/Dash';\r\nimport { Header4 } from '../../../../components/Header';\r\nimport { Container } from './Elements';\r\n\r\nconst FrequentTransactionsList: FC = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const transactions = useSelector((state: RootState) => state.transactions)\r\n    .filter(transaction => !transaction.repeat.repeat)\r\n    .sort((a, b) => {\r\n      return a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n    })\r\n    .slice(0, 3);\r\n\r\n  const transactionsRepeated = useSelector(\r\n    (state: RootState) => state.transactions\r\n  )\r\n    .filter(transaction => transaction.repeat.repeat)\r\n    .sort((a, b) => {\r\n      return a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n    })\r\n    .slice(0, 3);\r\n\r\n  const renderTransactions = (): JSX.Element[] => {\r\n    return transactions.map(transaction => {\r\n      return (\r\n        <li key={transaction._id}>\r\n          <Transaction {...transaction} deletable={false} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTransactionsRepeated = (): JSX.Element[] => {\r\n    return transactionsRepeated.map(transaction => {\r\n      return (\r\n        <li key={transaction._id}>\r\n          <Transaction {...transaction} deletable={false} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Header4 style={{ marginTop: '8rem' }}>\r\n          Repeat Payments{' '}\r\n          <Dash\r\n            tabIndex={0}\r\n            onClick={() => history.push('payments')}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => history.push('payments'))\r\n            }\r\n          >\r\n            See all\r\n          </Dash>\r\n        </Header4>\r\n        <Container>\r\n          {' '}\r\n          {transactionsRepeated.length ? (\r\n            renderTransactionsRepeated()\r\n          ) : (\r\n            <NoMessage style={{ marginTop: '1.5rem' }}>\r\n              There is no payments\r\n            </NoMessage>\r\n          )}\r\n        </Container>\r\n      </div>\r\n      <div>\r\n        <Header4 style={{ marginTop: '8rem' }}>\r\n          Frequent Payments{' '}\r\n          <Dash\r\n            tabIndex={0}\r\n            onClick={() => history.push('payments')}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => history.push('payments'))\r\n            }\r\n          >\r\n            See all\r\n          </Dash>\r\n        </Header4>\r\n\r\n        <Container>\r\n          {' '}\r\n          {transactions.length ? (\r\n            renderTransactions()\r\n          ) : (\r\n            <NoMessage style={{ marginTop: '1.5rem' }}>\r\n              There is no payments\r\n            </NoMessage>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrequentTransactionsList;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const SmContainer = styled.div`\r\n  padding: 0;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import { FC, useState, useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { Header4, Header5, Header6 } from '../../../../components/Header';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { getMultiplier } from '../../../../utils/utility';\r\nimport { getMoneyColor } from '../../../../utils/ux';\r\nimport { Container, SmContainer } from './Elements';\r\n\r\nconst nowDate = new Date();\r\n\r\nconst MoneyLastMonth: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const [moneyLastMonth, setMoneyLastMonth] = useState({\r\n    income: 0,\r\n    spent: 0,\r\n    total: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let money = { income: 0, spent: 0, total: 0 };\r\n\r\n    transactions.forEach(transaction => {\r\n      const transactionDate = new Date(transaction.date);\r\n\r\n      const multiplier =\r\n        transactionDate.getMonth() === nowDate.getMonth()\r\n          ? getMultiplier(transaction)\r\n          : getMultiplier(transaction, true);\r\n\r\n      if (\r\n        transactionDate.getMonth() === nowDate.getMonth() ||\r\n        transaction.repeat.repeat\r\n      )\r\n        if (transaction.amount > 0) {\r\n          let amountToAdd =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n\r\n          if (transaction.repeat.repeat)\r\n            amountToAdd = amountToAdd + amountToAdd * multiplier;\r\n\r\n          money.income += amountToAdd;\r\n        } else if (transaction.amount < 0) {\r\n          let amountToAdd =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n\r\n          if (transaction.repeat.repeat)\r\n            amountToAdd = amountToAdd + amountToAdd * multiplier;\r\n\r\n          money.spent += amountToAdd;\r\n        }\r\n      money.total = money.income + money.spent;\r\n    });\r\n\r\n    setMoneyLastMonth(money);\r\n  }, [transactions, currency.currencies, currency.primaryCurrency]);\r\n\r\n  return (\r\n    <>\r\n      <Header4 style={{ marginTop: '4rem' }}>Outgoings last month</Header4>\r\n      <Container>\r\n        <SmContainer>\r\n          <Header6>Income</Header6>\r\n          <Header5 $color=\"green\">\r\n            {moneyLastMonth.income.toFixed()} {currency.primaryCurrency}\r\n          </Header5>\r\n        </SmContainer>\r\n\r\n        <SmContainer>\r\n          <Header6>Total</Header6>\r\n          <Header5 $color={getMoneyColor(moneyLastMonth.total)}>\r\n            {moneyLastMonth.total.toFixed()} {currency.primaryCurrency}\r\n          </Header5>\r\n        </SmContainer>\r\n        <SmContainer>\r\n          <Header6>Spent</Header6>\r\n          <Header5 $color=\"red\">\r\n            {moneyLastMonth.spent.toFixed()} {currency.primaryCurrency}\r\n          </Header5>\r\n        </SmContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyLastMonth;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ColorType {\r\n  color: 'green' | 'red' | 'black';\r\n}\r\n\r\nexport const DiffSpan = styled.div<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props =>\r\n    props.color === 'black' ? props.theme.text : `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin-left: 0;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n  height: 5rem;\r\n`;\r\n\r\nexport const SmallMoneyHeader = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: max-content;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n\r\nexport const DiffIcon = styled.i<{ amount: number }>`\r\n  position: absolute;\r\n  top: ${props => (props.amount > 0 ? '25%' : '90%')};\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { SmallMoneyHeader, DiffSpan, DiffIcon } from './Elements';\r\nimport { BiCaretUp, BiCaretDown, BiMinus } from 'react-icons/bi';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport { BudgetType } from '../../store/budgets/types';\r\nimport { Header3, Header5 } from '../Header';\r\n\r\nconst BudgetInfo: FC<BudgetType> = (budget): JSX.Element => {\r\n  const { title, amount } = budget;\r\n\r\n  return (\r\n    <>\r\n      <Header3>{title}</Header3>\r\n      <div>\r\n        <Header5 $color={getMoneyColor(amount.actual)}>\r\n          {amount.actual.toFixed(2)} {amount.currency}\r\n        </Header5>\r\n        <DiffSpan color={getMoneyColor(amount.diff)}>\r\n          <SmallMoneyHeader>\r\n            {amount.diff.toFixed(2)} {amount.currency}\r\n          </SmallMoneyHeader>\r\n          <DiffIcon amount={amount.diff}>\r\n            {amount.diff > 0 ? (\r\n              <BiCaretUp />\r\n            ) : amount.diff < 0 ? (\r\n              <BiCaretDown />\r\n            ) : (\r\n              <BiMinus />\r\n            )}\r\n          </DiffIcon>\r\n        </DiffSpan>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetInfo;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const BudgetContainer = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  padding: 2rem;\r\n  border-radius: 1rem;\r\n  width: 20rem;\r\n  box-shadow: var(--shadow-default);\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { Header4 } from '../../../../components/Header';\r\nimport { RootState } from '../../../../store';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { NoMessage } from '../../../../components/Header';\r\nimport { Container } from '../FrequentTransactionsList/Elements';\r\nimport { Dash } from '../../../../components/Dash';\r\n\r\nimport { BudgetContainer } from './Elements';\r\n\r\nconst MostValuableBudget: FC = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const budget = useSelector(\r\n    (state: RootState) =>\r\n      state.budgets.sort((a, b) => {\r\n        return a.amount.actual > b.amount.actual\r\n          ? -1\r\n          : a.amount.actual < b.amount.actual\r\n          ? 1\r\n          : 0;\r\n      })[0]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Header4 style={{ marginTop: '6rem' }}>\r\n        Most valuable Budget{' '}\r\n        <Dash\r\n          tabIndex={0}\r\n          onClick={() => history.push('budgets')}\r\n          onKeyPress={e =>\r\n            handleEnterPressed(e, () => history.push('payments'))\r\n          }\r\n        >\r\n          See all\r\n        </Dash>\r\n      </Header4>\r\n\r\n      {budget ? (\r\n        <BudgetContainer>\r\n          <BudgetInfo {...budget} />\r\n        </BudgetContainer>\r\n      ) : (\r\n        <Container>\r\n          <NoMessage style={{ marginTop: '1.5rem' }}>\r\n            There is no budgets\r\n          </NoMessage>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MostValuableBudget;\r\n","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Header2 } from '../../components/Header';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\nimport FrequentTransactionsList from './components/FrequentTransactionsList';\r\nimport MoneyLastMonth from './components/MoneyLastMonth';\r\nimport MostValuableBudget from './components/MostValuableBudget';\r\n\r\nconst Container = styled.div`\r\n  display: block;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 75%;\r\n    margin-left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n`;\r\n\r\nconst Overview: FC = () => {\r\n  return (\r\n    <div>\r\n      <Header2>Overview</Header2>\r\n      <MoneyLastMonth />\r\n      <Container>\r\n        <MostValuableBudget />\r\n        <FrequentTransactionsList />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const StyledList = styled.ul`\r\n  list-style: none;\r\n  margin: 4rem auto;\r\n  padding: 0;\r\n  justify-content: center;\r\n  gap: 4rem;\r\n  grid-template-columns: repeat(auto-fit, 23rem);\r\n  padding: 0 4rem;\r\n  align-items: center;\r\n\r\n  display: grid;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 23rem;\r\n  height: max-content;\r\n  box-shadow: var(--shadow-default);\r\n  border-radius: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const IconSpan = styled.span`\r\n  font-size: 3rem;\r\n  height: 4rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border: solid 1px transparent;\r\n  border-radius: 1rem;\r\n\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\ninterface returnedObject {\r\n  [key: string]: { value: string; required: boolean; checked: boolean };\r\n}\r\n\r\nconst useForm = (initialState: {\r\n  [key: string]: { value: string; required: boolean };\r\n}): [\r\n  returnedObject,\r\n  Dispatch<SetStateAction<returnedObject>>,\r\n  (name: string, bool?: boolean) => void,\r\n  (e: React.ChangeEvent<HTMLInputElement>) => void\r\n] => {\r\n  let newState: returnedObject = {};\r\n\r\n  for (const [key, value] of Object.entries(initialState)) {\r\n    newState = { ...newState, [key]: { ...value, checked: true } };\r\n  }\r\n\r\n  const [formData, setFormData] = useState(newState);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = formData[e.target.name].required\r\n      ? e.target.value\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: {\r\n        ...formData[e.target.name],\r\n        value: e.target.value,\r\n        checked: checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  const toggleChecked = (name: string, bool: boolean = false): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: {\r\n        ...formData[name],\r\n        checked: bool,\r\n      },\r\n    });\r\n  };\r\n  return [formData, setFormData, toggleChecked, handleInputChange];\r\n};\r\n\r\nexport default useForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: ${({ theme }) => theme.background};\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 2.3rem;\r\n  display: block;\r\n  margin-bottom: 1rem;\r\n  font-weight: 500;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const StyledForm = styled.form`\r\n  margin: 5rem auto;\r\n  padding: 0 4rem;\r\n  margin-top: 0;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  :not(:first-child) {\r\n    margin: 4rem 0;\r\n  }\r\n`;\r\n\r\nexport const Warning = styled.p`\r\n  font-size: 1.3rem;\r\n  color: var(--color-red);\r\n  position: absolute;\r\n  margin-top: 0.7rem;\r\n`;\r\n\r\nexport const MinPlus = styled.div`\r\n  padding: 1.83rem 1.5rem;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 1rem;\r\n  font-size: 1.6rem;\r\n  width: min-content;\r\n  position: absolute;\r\n  background-color: ${({ theme }) => theme.background};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MinPlusIcon = styled.div<{ minus: boolean }>`\r\n  pointer-events: none;\r\n  width: 1.3rem;\r\n  height: 2px;\r\n  background-color: ${props =>\r\n    props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n\r\n  transform: ${props => (props.minus ? 'rotate(180deg)' : 'rotate(0)')};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: inherit;\r\n    height: inherit;\r\n    background-color: ${props =>\r\n      props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n    transition: var(--trans-default);\r\n    transform: ${props => (props.minus ? `rotate(270deg)` : `rotate(0)`)};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select<{ color: string }>`\r\n  padding: 0.2rem 0.2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 3rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  color: ${props =>\r\n    props.color === 'black'\r\n      ? props.theme.text\r\n      : `var(--color-${props.color})`} !important;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { Select } from './Elements';\r\n\r\ninterface CurrencySelectorProps {\r\n  color: string;\r\n  onChangeAction: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  style?: { [key: string]: string };\r\n  currency?: string;\r\n}\r\n\r\nconst CurrencySelector: FC<CurrencySelectorProps> = ({\r\n  color,\r\n  onChangeAction,\r\n  style,\r\n  currency,\r\n}): JSX.Element => {\r\n  const currencies = useSelector(\r\n    (state: RootState) => state.currency.currencies\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [currentCurrency, setCurrentCurrency] = useState(primaryCurrency);\r\n\r\n  useEffect(() => {\r\n    currency && setCurrentCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setCurrentCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  const renderCurrenciesOptions = (): JSX.Element[] => {\r\n    return Object.entries(currencies).map(currency => {\r\n      return (\r\n        <option value={currency[0]} key={currency[0]}>\r\n          {currency[0]}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setCurrentCurrency(e.target.value);\r\n    onChangeAction(e);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      color={color}\r\n      onChange={handleSelectChange}\r\n      value={currentCurrency}\r\n      style={style}\r\n    >\r\n      {renderCurrenciesOptions()}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { FC, useState, useEffect, useRef } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport useForm from '../../hooks/useForm';\r\nimport { Input } from '../Input';\r\nimport {\r\n  Container,\r\n  StyledForm,\r\n  Warning,\r\n  MinPlus,\r\n  MinPlusIcon,\r\n} from './Elements';\r\nimport { Label } from '../Input';\r\nimport { Button } from '../Button';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { RootState } from '../../store';\r\nimport { Header2 } from '../Header';\r\n\r\ninterface FormProps {\r\n  handleSubmit: (title: string, amount: number, currency: string) => void;\r\n  disabled?: boolean;\r\n  children?: JSX.Element;\r\n  childrenBefore?: JSX.Element;\r\n  button?: boolean;\r\n  data?: {\r\n    [key in 'title' | 'amount']: { value: string; required: boolean };\r\n  };\r\n  currency?: string;\r\n  style?: {};\r\n  pageTitle?: string;\r\n}\r\n\r\nconst Form: FC<FormProps> = ({\r\n  handleSubmit,\r\n  disabled = false,\r\n  children,\r\n  childrenBefore,\r\n  button = true,\r\n  data,\r\n  currency,\r\n  style,\r\n  pageTitle,\r\n}): JSX.Element => {\r\n  const [formData, setFormData, toggleChecked, handleInputChange] = useForm(\r\n    data\r\n      ? data\r\n      : {\r\n          title: { value: '', required: true },\r\n          amount: { value: '', required: true },\r\n        }\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [formCurrency, setFormCurrency] = useState(primaryCurrency);\r\n  const [minus, setMinus] = useState(false);\r\n  const clicked = useRef(false);\r\n\r\n  const { title, amount } = formData;\r\n\r\n  useEffect(() => {\r\n    currency && setFormCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setFormCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  useEffect(() => {\r\n    if (parseFloat(amount.value) < 0) {\r\n      setFormData({\r\n        title: { ...title },\r\n        amount: {\r\n          ...amount,\r\n          value: (parseFloat(amount.value) * -1).toFixed(),\r\n        },\r\n      });\r\n      setMinus(true);\r\n      clicked.current = true;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    if (!disabled) {\r\n      const amountCheck = amount.required && !amount.value;\r\n      const titleCheck = title.required && !title.value;\r\n\r\n      if (amountCheck && titleCheck) {\r\n        let newState = {};\r\n\r\n        for (const [key, value] of Object.entries(formData)) {\r\n          newState = { ...newState, [key]: { ...value, checked: false } };\r\n        }\r\n\r\n        setFormData(newState);\r\n      } else {\r\n        if (titleCheck) toggleChecked('title');\r\n\r\n        if (amountCheck) toggleChecked('amount');\r\n      }\r\n\r\n      if (amountCheck || titleCheck) return;\r\n      let amountNum = parseFloat(amount.value);\r\n\r\n      if (minus && amountNum > 0) amountNum = amountNum * -1;\r\n\r\n      handleSubmit(title.value, amountNum, formCurrency);\r\n\r\n      setFormData({\r\n        title: { ...title, value: '' },\r\n        amount: { ...amount, value: '' },\r\n      });\r\n\r\n      setMinus(false);\r\n      clicked.current = false;\r\n    }\r\n  };\r\n\r\n  const handleCurrencyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setFormCurrency(e.target.value);\r\n  };\r\n\r\n  const handleInputChangeNew = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (parseFloat(e.target.value) < 0) setMinus(true);\r\n    else if (parseFloat(e.target.value) >= 0 && !clicked.current)\r\n      setMinus(false);\r\n    handleInputChange(e);\r\n  };\r\n\r\n  const handleMinPlusClick = () => {\r\n    setMinus(!minus);\r\n    if (minus) clicked.current = false;\r\n    else clicked.current = true;\r\n  };\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={handleSubmitForm}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      style={style}\r\n    >\r\n      {pageTitle && (\r\n        <Container>\r\n          <Header2>{pageTitle}</Header2>\r\n        </Container>\r\n      )}\r\n      {childrenBefore && <Container>{childrenBefore}</Container>}\r\n      <Container>\r\n        <Label htmlFor=\"title\">Title</Label>\r\n        <Input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          value={title.value}\r\n          onChange={handleInputChange}\r\n        />\r\n        {!title.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container style={{ position: 'relative' }}>\r\n        <Label htmlFor=\"amount\">Amount</Label>\r\n        <MinPlus onClick={handleMinPlusClick}>\r\n          <MinPlusIcon minus={!minus}></MinPlusIcon>\r\n        </MinPlus>\r\n        <Input\r\n          id=\"amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          placeholder=\"Enter amount\"\r\n          value={amount.value}\r\n          onChange={handleInputChangeNew}\r\n          style={{ padding: '1rem 5rem' }}\r\n        />\r\n        <CurrencySelector\r\n          color=\"black\"\r\n          onChangeAction={handleCurrencyChange}\r\n          style={{ fontSize: '2.85rem', position: 'absolute', right: '0' }}\r\n          currency={formCurrency}\r\n        />\r\n        {!amount.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container>{children}</Container>\r\n      {button && (\r\n        <Button color=\"green\" textColor=\"white\">\r\n          Add\r\n        </Button>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { Top, IconSpan, ButtonsContainer } from './Elements';\r\nimport { BiEdit, BiX } from 'react-icons/bi';\r\nimport { ModalContext } from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { Button } from '../../../../components/Button';\r\nimport {\r\n  changeTransactions,\r\n  editBudgetAction,\r\n  removeBudgetAction,\r\n} from '../../../../store/budgets/actions';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { removeTransactionsByBudgetIdAction } from '../../../../store/transactions/actions';\r\nimport Form from '../../../../components/Form';\r\nimport { RootState } from '../../../../store';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\nimport { Header3 } from '../../../../components/Header';\r\n\r\nconst BudgetModal: FC<BudgetType> = ({ _id, title, amount }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const context = useContext(ModalContext);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleDelete = (): void => {\r\n    context.handleClose();\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/budgets/${_id}`).then(() => {\r\n        dispatch(removeBudgetAction(_id));\r\n\r\n        axios.delete(`${dbUrl}/transactions?budgetId=${_id}`).then(() => {\r\n          dispatch(removeTransactionsByBudgetIdAction(_id));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n      });\r\n    } else {\r\n      dispatch(removeBudgetAction(_id));\r\n      dispatch(removeTransactionsByBudgetIdAction(_id));\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (\r\n    newTitle: string,\r\n    newAmount: number,\r\n    newCurrency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id,\r\n      userId: googleUser?.googleId ? googleUser?.googleId : null,\r\n      title: newTitle,\r\n      amount: {\r\n        actual: newAmount,\r\n        currency: newCurrency,\r\n        diff: 0,\r\n        starting: newAmount,\r\n      },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .patch(`${dbUrl}/budgets/${_id}`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(editBudgetAction(budget.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(editBudgetAction(newBudget));\r\n      dispatch(changeTransactions());\r\n    }\r\n    context.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Top>\r\n        <IconSpan tabIndex={0}>\r\n          <BiEdit />\r\n        </IconSpan>\r\n        <Header3>Edit</Header3>\r\n        <IconSpan\r\n          tabIndex={0}\r\n          style={{ fontSize: '3.5rem', height: '4.5rem' }}\r\n          onClick={handleClose}\r\n          onKeyPress={e => handleEnterPressed(e, handleClose)}\r\n        >\r\n          <BiX />\r\n        </IconSpan>\r\n      </Top>\r\n      <div style={{ marginTop: '3.5rem' }}>\r\n        <Form\r\n          handleSubmit={handleSubmitForm}\r\n          button={false}\r\n          data={{\r\n            title: { value: title, required: true },\r\n            amount: { value: amount.starting.toFixed(2), required: true },\r\n          }}\r\n          style={{ padding: 0 }}\r\n          currency={amount.currency}\r\n        >\r\n          <ButtonsContainer>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"gray-dark\"\r\n              secondary\r\n              style={{ width: '48%' }}\r\n              onClick={handleDelete}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"white\"\r\n              style={{ width: '48%' }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ButtonsContainer>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetModal;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { Container } from './Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport BudgetModal from '../BudgetModal';\r\nimport Modal from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\n\r\nconst Budget: FC<BudgetType> = (budget): JSX.Element => {\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <BudgetInfo {...budget} />\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          onClick={() => setModalOpened(true)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <BudgetModal {...budget} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Budget;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 4rem;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 4rem;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    margin-left: 0;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: block;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: flex;\r\n\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  margin: 4rem 0;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80%;\r\n  height: 1px;\r\n  background-color: var(--color-gray-dark);\r\n  opacity: 0.3;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { Container, StyledList } from './Elements';\r\nimport Budget from '../Budget';\r\nimport { RootState } from '../../../../store';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Select } from '../../../Payments/components/TransactionList/Elements';\r\nimport { Label } from '../../../../components/Input';\r\n\r\nconst BudgetList: FC = (): JSX.Element => {\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderBudgets = (): JSX.Element[] => {\r\n    const sortedBudgets = [...budgets];\r\n    sortedBudgets.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare =\r\n            a.amount.actual > b.amount.actual\r\n              ? -1\r\n              : a.amount.actual < b.amount.actual\r\n              ? 1\r\n              : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') sortedBudgets.reverse();\r\n\r\n    return sortedBudgets.map(budget => (\r\n      <CSSTransition timeout={200} classNames=\"slide\" key={budget._id}>\r\n        <li>\r\n          <Budget {...budget} />\r\n        </li>\r\n      </CSSTransition>\r\n    ));\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Label htmlFor=\"sortBy\" style={{ marginTop: '3rem' }}>\r\n        Sort by\r\n      </Label>\r\n      <Select\r\n        id=\"sortBy\"\r\n        onChange={handleSelectSortChange}\r\n        value={selectedSort}\r\n      >\r\n        <option value=\"date\">Newest</option>\r\n        <option value=\"date_r\">Oldest</option>\r\n        <option value=\"title\">A...Z</option>\r\n        <option value=\"title_r\">Z...A</option>\r\n        <option value=\"amount\">Most money</option>\r\n        <option value=\"amount_r\">Least money</option>\r\n      </Select>\r\n      <StyledList>\r\n        <TransitionGroup component={null}>{renderBudgets()}</TransitionGroup>\r\n      </StyledList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BudgetList;\r\n","import { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addBudgetAction } from '../../../../store/budgets/actions';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport Form from '../../../../components/Form';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id: uuidv4(),\r\n      userId: googleUser ? googleUser?.googleId : null,\r\n      title: title,\r\n      amount: { actual: amount, currency, diff: 0, starting: amount },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .post(`${dbUrl}/budgets`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(addBudgetAction(budget.data));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(addBudgetAction(newBudget));\r\n  };\r\n\r\n  return <Form handleSubmit={handleSubmit} pageTitle=\"Budgets\" />;\r\n};\r\n\r\nexport default BudgetForm;\r\n","import { FC } from 'react';\r\n\r\nimport BudgetList from './components/BudgetList';\r\nimport BudgetForm from './components/BudgetForm';\r\n\r\nconst Budgets: FC = (): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <BudgetForm />\r\n      <BudgetList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Budgets;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 14rem;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledP = styled.p<{ checked: boolean }>`\r\n  font-size: 2rem;\r\n  margin-left: 1rem;\r\n  transition: var(--trans-default);\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.text};\r\n  opacity: ${({ checked }) => (checked ? 1 : 0.2)};\r\n`;\r\n\r\nexport const SmallContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  position: relative;\r\n\r\n  .calendar {\r\n    border-radius: 1.5rem;\r\n    border-color: var(--color-gray);\r\n    top: 4rem;\r\n    position: absolute;\r\n  }\r\n\r\n  button {\r\n    border-radius: 1rem;\r\n  }\r\n`;\r\n\r\nexport const AnimatedSmallContainer = styled(SmallContainer)<{\r\n  animate: boolean;\r\n}>`\r\n  transition: var(--trans-default);\r\n  margin-top: ${props => (props.animate ? '35rem' : '0')};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckBox = styled.div<{ checked: boolean }>`\r\n  width: 2.6rem;\r\n  height: 2.6rem;\r\n  border: 1px solid ${({ theme }) => theme.text};\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    background-color: ${({ theme }) => theme.text};\r\n    opacity: ${({ checked }) => (checked ? 1 : 0)};\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n","import React, { FC, useRef, useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport Form from '../../../../components/Form';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport {\r\n  Select,\r\n  Container,\r\n  StyledP,\r\n  SmallContainer,\r\n  AnimatedSmallContainer,\r\n} from './Elements';\r\nimport { Label } from '../../../../components/Input';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { Button } from '../../../../components/Button';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\nimport { CheckBox } from '../../../../components/Checkbox';\r\nimport { Input } from '../../../../components/Input';\r\nimport '../../../../constant/style/animations.css';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\n\r\nconst PaymentForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [repeatTransaction, setRepeatTransaction] = useState({\r\n    repeat: false,\r\n    every: '1',\r\n    type: 'hours',\r\n  });\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [dateCheck, setDateCheck] = useState(false);\r\n  const check = useRef(null);\r\n\r\n  let budgetsLength = useRef(-1);\r\n\r\n  useEffect(() => {\r\n    if (budgetsLength.current !== budgets.length) {\r\n      if (budgets[0]) setSelectedBudgetId(budgets[0]._id);\r\n      else setSelectedBudgetId('');\r\n    }\r\n    return () => {\r\n      budgetsLength.current = budgets.length;\r\n    };\r\n  }, [budgets]);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newTransaction: TransactionType = {\r\n      _id: uuidv4(),\r\n      currency,\r\n      budgetId: selectedBudgetId,\r\n      userId: googleUser ? googleUser.googleId : null,\r\n      title,\r\n      amount,\r\n      repeat: {\r\n        ...repeatTransaction,\r\n        every: parseInt(repeatTransaction.every),\r\n      },\r\n      date: dateCheck ? startDate : new Date(),\r\n    };\r\n\r\n    setRepeatTransaction({\r\n      repeat: false,\r\n      every: '1',\r\n      type: 'hours',\r\n    });\r\n\r\n    setDateCheck(false);\r\n    setStartDate(new Date());\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .post(`${dbUrl}/transactions`, {\r\n          ...newTransaction,\r\n        })\r\n        .then(transaction => {\r\n          dispatch(addTransactionAction(transaction.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(addTransactionAction(newTransaction));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => {\r\n      return (\r\n        <option key={budget._id} value={budget._id}>\r\n          {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n          {budget.amount.currency}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const selectedBudget = budgets.filter(\r\n    budget => budget._id === selectedBudgetId\r\n  )[0];\r\n\r\n  const handleCheckboxCheck = (e: React.SyntheticEvent): void => {\r\n    setRepeatTransaction({\r\n      ...repeatTransaction,\r\n      repeat: true,\r\n    });\r\n\r\n    if (e.target === check.current) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        repeat: !repeatTransaction.repeat,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputRepeatChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    if (\r\n      (!isNaN(parseInt(e.target.value)) && parseInt(e.target.value) > 0) ||\r\n      e.target.value === ''\r\n    ) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        every: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelectTypeChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setRepeatTransaction({ ...repeatTransaction, type: e.target.value });\r\n  };\r\n\r\n  const handleDateChange = (date: Date): void => {\r\n    const nowDate = new Date();\r\n\r\n    if (nowDate.getTime() - date.getTime() > 0) setStartDate(date);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      handleSubmit={handleSubmit}\r\n      disabled={!budgets.length}\r\n      button={false}\r\n      currency={selectedBudget && selectedBudget.amount.currency}\r\n      childrenBefore={\r\n        <>\r\n          <Label htmlFor=\"selectBudget\">Select a budget</Label>\r\n          <Select\r\n            id=\"selectBudget\"\r\n            onChange={handleSelectChange}\r\n            value={selectedBudgetId}\r\n          >\r\n            {renderOptions()}\r\n          </Select>\r\n        </>\r\n      }\r\n      pageTitle=\"Payments\"\r\n    >\r\n      <>\r\n        <SmallContainer>\r\n          <CheckBox\r\n            checked={dateCheck}\r\n            onClick={() => setDateCheck(!dateCheck)}\r\n            tabIndex={0}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => setDateCheck(!dateCheck))\r\n            }\r\n          />\r\n          <StyledP checked={dateCheck} onClick={() => setDateCheck(!dateCheck)}>\r\n            Select date\r\n          </StyledP>\r\n\r\n          <CSSTransition\r\n            in={dateCheck}\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            unmountOnExit\r\n          >\r\n            <Calendar\r\n              value={startDate}\r\n              onChange={handleDateChange}\r\n              className=\"calendar\"\r\n            />\r\n          </CSSTransition>\r\n        </SmallContainer>\r\n        <AnimatedSmallContainer\r\n          animate={dateCheck}\r\n          onClick={handleCheckboxCheck}\r\n        >\r\n          <CheckBox\r\n            checked={repeatTransaction.repeat}\r\n            tabIndex={0}\r\n            onKeyPress={e => handleEnterPressed(e, handleCheckboxCheck)}\r\n            ref={check}\r\n          />\r\n          <StyledP checked={repeatTransaction.repeat}>\r\n            Repeat every\r\n            <Input\r\n              style={{\r\n                width: '4rem',\r\n                padding: '.5rem',\r\n              }}\r\n              onChange={handleInputRepeatChange}\r\n              maxLength={3}\r\n              value={repeatTransaction.every}\r\n              disabled={!repeatTransaction.repeat}\r\n            />\r\n            <Select\r\n              style={{\r\n                width: '8rem',\r\n                padding: '.5rem',\r\n              }}\r\n              value={repeatTransaction.type}\r\n              onChange={handleSelectTypeChange}\r\n              disabled={!repeatTransaction.repeat}\r\n            >\r\n              <option value=\"hours\">hours</option>\r\n              <option value=\"days\">days</option>\r\n              <option value=\"month\">month</option>\r\n              <option value=\"year\">year</option>\r\n            </Select>\r\n          </StyledP>\r\n        </AnimatedSmallContainer>\r\n\r\n        {budgets[0] && (\r\n          <Container>\r\n            {selectedBudgetId && <BudgetInfo {...selectedBudget} />}\r\n          </Container>\r\n        )}\r\n        <Button\r\n          color=\"green\"\r\n          textColor=\"white\"\r\n          style={{ marginTop: '3rem', opacity: !budgets[0] ? 0.6 : 1 }}\r\n          onClick={e => !budgets[0] && e.preventDefault()}\r\n        >\r\n          {!budgets[0] ? 'Add a budget' : 'Add'}\r\n        </Button>\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { RootState } from '../../../../store';\r\nimport Transaction from '../Transaction';\r\nimport { Flex, Line, List, Select } from './Elements';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Label } from '../../../../components/Input';\r\nimport { Container } from './Elements';\r\nimport { NoMessage } from '../../../../components/Header';\r\n\r\nconst TransactionList: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderTransactions = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = selectedBudgetId\r\n      ? transactions.filter(\r\n          transaction =>\r\n            transaction.budgetId === selectedBudgetId &&\r\n            !transaction.repeat.repeat\r\n        )\r\n      : transactions.filter(transaction => !transaction.repeat.repeat);\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    selectedTransactions.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare = a.amount > b.amount ? -1 : a.amount < b.amount ? 1 : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') selectedTransactions.reverse();\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTransactionsRepeat = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = transactions.filter(\r\n      transaction => transaction.repeat.repeat\r\n    );\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => (\r\n      <option key={budget._id} value={budget._id}>\r\n        {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n        {budget.amount.currency}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const handleSelectFilterChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      <Container>\r\n        <Label>Repeated transactions</Label>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactionsRepeat()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n      <Line></Line>\r\n      <Container>\r\n        <Label htmlFor=\"selectbg\">Filter transactions</Label>\r\n        <Select\r\n          id=\"selectbg\"\r\n          onChange={handleSelectFilterChange}\r\n          value={selectedBudgetId}\r\n        >\r\n          <option value=\"\">All</option>\r\n          {renderOptions()}\r\n        </Select>\r\n        <Label htmlFor=\"sort\" style={{ marginTop: '3rem' }}>\r\n          Sort by\r\n        </Label>\r\n        <Select\r\n          id=\"sort\"\r\n          onChange={handleSelectSortChange}\r\n          value={selectedSort}\r\n        >\r\n          <option value=\"date\">Newest</option>\r\n          <option value=\"date_r\">Oldest</option>\r\n          <option value=\"title\">A...Z</option>\r\n          <option value=\"title_r\">Z...A</option>\r\n          <option value=\"amount\">Most money</option>\r\n          <option value=\"amount_r\">Least money</option>\r\n        </Select>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactions()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import { FC } from 'react';\r\n\r\nimport PaymentForm from './components/PaymentForm';\r\nimport TransactionList from './components/TransactionList';\r\n\r\nconst Payments: FC = () => {\r\n  return (\r\n    <div>\r\n      <PaymentForm />\r\n      <TransactionList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import { FC } from 'react';\r\n\r\nconst Statistics: FC = () => {\r\n  return <h2>Coming soon</h2>;\r\n};\r\n\r\nexport default Statistics;\r\n","import axios from 'axios';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dbUrl } from '../../constant/routes';\r\n\r\nimport { RootState } from '../../store';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../store/loader';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { Header2 } from '../Header';\r\n\r\nconst AllMoney: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n  const googleId = useSelector(\r\n    (state: RootState) => state.googleUser?.googleId\r\n  );\r\n\r\n  let money = 0;\r\n  budgets.forEach(\r\n    budget =>\r\n      (money +=\r\n        budget.amount.actual / currency.currencies[budget.amount.currency])\r\n  );\r\n\r\n  money =\r\n    (money / currency.currencies['USD']) * currency.currencies[primaryCurrency];\r\n\r\n  const handleCurrencyChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    if (googleId) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .patch(`${dbUrl}/users/${googleId}`, {\r\n          currency: e.target.value,\r\n        })\r\n        .then(() => {\r\n          dispatch(setPrimaryCurrency(e.target.value));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(setPrimaryCurrency(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header2 $color={getMoneyColor(money)}>\r\n      {money.toFixed(2)}{' '}\r\n      <CurrencySelector\r\n        color={getMoneyColor(money)}\r\n        onChangeAction={handleCurrencyChange}\r\n      />\r\n    </Header2>\r\n  );\r\n};\r\n\r\nexport default AllMoney;\r\n","import { FC } from 'react';\r\n\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport Overview from '../pages/Overview';\r\nimport Budgets from '../pages/Budgets';\r\nimport Payments from '../pages/Payments';\r\nimport Statistics from '../pages/Statistics';\r\n\r\nimport '../constant/style/animations.css';\r\nimport AllMoney from './AllMoney';\r\n\r\nconst AnimatedRouter: FC = (): JSX.Element => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <AllMoney />\r\n      <div style={{ position: 'relative' }}>\r\n        <TransitionGroup component={null}>\r\n          <CSSTransition\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            key={location.pathname}\r\n          >\r\n            <Switch location={location}>\r\n              <Route exact path=\"/overview\">\r\n                <Overview />\r\n              </Route>\r\n              <Route exact path=\"/budgets\">\r\n                <Budgets />\r\n              </Route>\r\n              <Route exact path=\"/payments\">\r\n                <Payments />\r\n              </Route>\r\n              <Route exact path=\"/statistics\">\r\n                <Statistics />\r\n              </Route>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedRouter;\r\n","import axios from 'axios';\r\nimport { CurrencyType } from '../store/currency/types';\r\n\r\nexport const currencyExchangeAPI = async (\r\n  currencyFromState: CurrencyType\r\n): Promise<CurrencyType> => {\r\n  const date = new Date();\r\n  const lastFetchedDate = new Date(currencyFromState.dateFetched);\r\n\r\n  const dayInMiliseconds = 1000 * 60 * 60 * 24;\r\n  const daysBetweenDates = Math.floor(\r\n    (date.getTime() - lastFetchedDate.getTime()) / dayInMiliseconds\r\n  );\r\n\r\n  if (daysBetweenDates >= 7) {\r\n    interface rate {\r\n      [key: string]: number;\r\n    }\r\n\r\n    interface dataFetchedType {\r\n      rates: rate;\r\n      source: string;\r\n      date: string;\r\n      timestamp: number;\r\n    }\r\n\r\n    const currencies: dataFetchedType = await (\r\n      await axios.get(\r\n        'https://v1.nocodeapi.com/kriziuu/cx/FPLWrEBmjQDFHLdf/rates'\r\n      )\r\n    ).data;\r\n\r\n    let rates: rate = {};\r\n    for (const [key, value] of Object.entries(currencies.rates)) {\r\n      const rate: rate = { [key]: value };\r\n      rates = { ...rates, ...rate };\r\n    }\r\n\r\n    const currency: CurrencyType = {\r\n      dateFetched: date,\r\n      source: currencies.source,\r\n      currencies: rates,\r\n      primaryCurrency: currencyFromState.primaryCurrency,\r\n    };\r\n\r\n    return currency;\r\n  } else return currencyFromState;\r\n};\r\n","import axios from 'axios';\r\nimport { GoogleLoginResponse } from 'react-google-login';\r\nimport { dbUrl } from '../constant/routes';\r\nimport { BudgetType } from '../store/budgets/types';\r\nimport { TransactionType } from '../store/transactions/types';\r\n\r\ninterface ReturnResponseType {\r\n  budgets: BudgetType[];\r\n  transactions: TransactionType[];\r\n  userCurrency: string;\r\n}\r\n\r\nexport const dbAPI = async (\r\n  googleUser: GoogleLoginResponse['profileObj'],\r\n  setLoading: () => void,\r\n  unsetLoading: () => void\r\n): Promise<ReturnResponseType> => {\r\n  setLoading();\r\n\r\n  let budgets: BudgetType[] = await (\r\n    await axios.get(`${dbUrl}/budgets`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let transactions: TransactionType[] = await (\r\n    await axios.get(`${dbUrl}/transactions`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let userCurrency: string = '';\r\n\r\n  await axios\r\n    .get(`${dbUrl}/users/${googleUser?.googleId}`)\r\n    .then(res => {\r\n      userCurrency = res.data.currency;\r\n    })\r\n    .catch(() => {\r\n      axios.post(`${dbUrl}/users`, {\r\n        _id: googleUser?.googleId,\r\n        currency: 'USD',\r\n      });\r\n    });\r\n\r\n  budgets = budgets.map(budget => {\r\n    budget.date = new Date(budget.date);\r\n    return budget;\r\n  });\r\n\r\n  transactions.map(transaction => {\r\n    transaction.date = new Date(transaction.date);\r\n    return transaction;\r\n  });\r\n\r\n  unsetLoading();\r\n  return { budgets, transactions, userCurrency };\r\n};\r\n","export const lightTheme = {\r\n  body: '#FFF',\r\n  text: '#222',\r\n  border: '#CBD5E0',\r\n  background: '#FFF',\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: '#131313',\r\n  text: '#eAeAeA',\r\n  border: '#303030',\r\n  background: '#2a2a2a',\r\n};\r\n","import { FC, useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\n\r\nimport GlobalStyle from './GlobalStyles';\r\nimport NavBar from './NavBar';\r\nimport { breakpoints } from '../constant/style/breakpoints';\r\nimport AnimatedRouter from './AnimatedRouter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n  removeAllBudgetsAction,\r\n} from '../store/budgets/actions';\r\nimport { RootState } from '../store';\r\nimport {\r\n  addTransactionAction,\r\n  removeAllTransactionsAction,\r\n} from '../store/transactions/actions';\r\nimport { setPrimaryCurrency, updateCurrency } from '../store/currency/actions';\r\nimport { currencyExchangeAPI } from '../api/currencyExchange';\r\nimport { dbAPI } from '../api/db';\r\nimport Modal from './Modal';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport { setLoaderAction, unsetLoaderAction } from '../store/loader';\r\nimport { darkTheme, lightTheme } from './Theme';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 75vw;\r\n  }\r\n`;\r\n\r\nconst App: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const currencyFromState = useSelector((state: RootState) => state.currency);\r\n  const firstRender = useRef(true);\r\n  const loader = useSelector((state: RootState) => state.loader);\r\n  const theme =\r\n    useSelector((state: RootState) => state.theme) === 'light'\r\n      ? lightTheme\r\n      : darkTheme;\r\n\r\n  const setLoader = useCallback(() => dispatch(setLoaderAction()), [dispatch]);\r\n  const unsetLoader = useCallback(\r\n    () => dispatch(unsetLoaderAction()),\r\n    [dispatch]\r\n  );\r\n\r\n  // DATABASE\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n      dispatch(removeAllTransactionsAction());\r\n      dispatch(removeAllBudgetsAction());\r\n      dispatch(changeTransactions());\r\n    }\r\n\r\n    if (googleUser) {\r\n      dbAPI(googleUser, setLoader, unsetLoader).then(response => {\r\n        response.budgets.forEach(budget => {\r\n          dispatch(addBudgetAction(budget));\r\n        });\r\n        response.transactions.forEach(transaction => {\r\n          dispatch(addTransactionAction(transaction));\r\n        });\r\n\r\n        dispatch(setPrimaryCurrency(response.userCurrency));\r\n\r\n        dispatch(changeTransactions());\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      firstRender.current = false;\r\n    };\r\n  }, [googleUser, dispatch, setLoader, unsetLoader]);\r\n\r\n  // CURRENCY\r\n  useEffect(() => {\r\n    currencyExchangeAPI(currencyFromState).then(currency => {\r\n      dispatch(updateCurrency(currency));\r\n    });\r\n  }, [currencyFromState, dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <Container>\r\n        <Router>\r\n          <NavBar />\r\n          <main style={{ position: 'relative' }}>\r\n            <AnimatedRouter />\r\n          </main>\r\n        </Router>\r\n      </Container>\r\n      {loader && (\r\n        <Modal closeModal={() => {}} container={false} closable={false}>\r\n          <ClipLoader size=\"8rem\" color=\"silver\" />\r\n        </Modal>\r\n      )}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n"],"sourceRoot":""}