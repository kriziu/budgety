{"version":3,"sources":["store/googleUser/constants.ts","components/GlobalStyles.ts","constant/style/breakpoints.ts","components/Button/index.ts","components/NavBar/Elements.ts","constant/routes.ts","store/googleUser/actions.ts","store/localstorage.ts","utils/utility.ts","store/budgets/constants.ts","store/budgets/reducer.ts","store/currency/constants.ts","store/currency/reducer.ts","store/loader.ts","store/transactions/constants.ts","store/transactions/reducer.ts","store/index.ts","store/googleUser/reducer.ts","store/budgets/actions.ts","store/transactions/actions.ts","store/currency/actions.ts","components/NavBar/index.tsx","components/Header/index.ts","utils/ux.ts","components/Modal/Elements.ts","components/Modal/index.tsx","components/ModalConfirm/Elements.ts","components/ModalConfirm/index.tsx","pages/Payments/components/Transaction/Elements.ts","pages/Payments/components/Transaction/index.tsx","pages/Overview/components/MoneyLastMonth/Elements.ts","pages/Overview/components/FrequentTransactionsList/Elements.ts","pages/Overview/components/FrequentTransactionsList/index.tsx","pages/Overview/components/MoneyLastMonth/index.tsx","components/BudgetInfo/Elements.ts","components/BudgetInfo/index.tsx","pages/Overview/components/MostValuableBudget/Elements.ts","pages/Overview/components/MostValuableBudget/index.tsx","pages/Overview/index.tsx","pages/Budgets/components/BudgetList/Elements.ts","pages/Budgets/components/Budget/Elements.ts","pages/Budgets/components/BudgetModal/Elements.ts","hooks/useForm.ts","components/Input/index.ts","components/Form/Elements.ts","components/CurrencySelector/Elements.ts","components/CurrencySelector/index.tsx","components/Form/index.tsx","pages/Budgets/components/BudgetModal/index.tsx","pages/Budgets/components/Budget/index.tsx","pages/Payments/components/TransactionList/Elements.ts","pages/Budgets/components/BudgetList/index.tsx","pages/Budgets/components/BudgetForm/index.tsx","pages/Budgets/index.tsx","pages/Payments/components/PaymentForm/Elements.ts","components/Checkbox/index.ts","pages/Payments/components/PaymentForm/index.tsx","pages/Payments/components/TransactionList/index.tsx","pages/Payments/index.tsx","pages/Statistics/index.tsx","components/AllMoney/index.tsx","components/AnimatedRouter.tsx","api/currencyExchange.ts","api/db.ts","components/App.tsx","index.tsx"],"names":["Constants","GlobalStyle","createGlobalStyle","breakpoints","Button","styled","button","props","secondary","color","textColor","Navigation","nav","HeaderContainer","div","ToggleNavButton","NavIcon","opened","focused","MobileLinksContainer","DesktopLinksContainer","ul","StyledLink","Link","$isactive","Avatar","url","GoogleButton","routes","dbUrl","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","Date","prototype","getFancyDate","day","this","getDate","toString","month","getMonth","parseInt","getFullYear","getFancyHours","hours","getHours","minutes","getMinutes","handleEnterPressed","e","action","key","timeout","ms","Promise","resolve","setTimeout","getMultiplier","transaction","monthly","hour","repeat","every","now","nowDate","getTime","transactionDate","date","multiplier","type","Math","floor","setLoaderAction","SET_LOADING","unsetLoaderAction","UNSET_LOADING","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","store","createStore","combineReducers","budgets","state","ADD_BUDGET","payload","budget","REMOVE_BUDGET","filter","_id","budgetId","EDIT_BUDGET","map","CHANGE_TRANSACTIONS","amount","actual","starting","currency","transactions","forEach","money","currencies","diff","REMOVE_BUDGET_ALL","ADD_TRANSACTION","REMOVE_TRANSACTION","transactionId","REMOVE_TRANSACTIONS_BUDGET","EDIT_TRANSACTION","REMOVE_TRANSACTION_ALL","googleUser","LOGIN","userInfo","LOGOUT","dateFetched","source","primaryCurrency","UPDATE_CURRENCY","SET_PRIMARY_CURRENCY","currencyString","loader","subscribe","getState","userId","stringify","setItem","saveState","addBudgetAction","removeBudgetAction","editBudgetAction","changeTransactions","addTransactionAction","removeTransactionAction","removeTransactionsByBudgetIdAction","setPrimaryCurrency","NavBar","useState","setOpened","btnFocused","setBtnFocued","btnRef","useRef","dispatch","useDispatch","useSelector","location","useLocation","toggleNavMenu","target","current","scrollTo","renderLinks","focusableByDefault","route","i","isActive","pathname","tabIndex","onClick","preventDefault","to","handleResponseGoogle","response","profileObj","handleLogout","a","style","marginRight","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","render","renderProps","disabled","imageUrl","onLogoutSuccess","aria-label","onFocus","onBlur","ref","Header2","h1","$color","h2","Header3","h3","Header4","h4","Header5","h5","Header6","h6","NoMessage","getMoneyColor","Background","animating","Container","Center","modalRoot","document","getElementById","ModalContext","createContext","handleClose","Modal","children","closeModal","closable","container","setAnimating","bgRef","useEffect","ReactDOM","createPortal","handleBgClick","Provider","value","ButtonsContainer","ModalConfirm","handleAction","context","useContext","marginBottom","width","Money","Title","MediumTitle","SmallTitle","DateHeader","DeleteBtn","CloseIcon","BiX","DeleteText","p","Transaction","title","deletable","modalOpened","setModalOpened","setBudget","dateN","selectedBudget","flex","display","flexDirection","alignItems","axios","delete","then","SmContainer","Dash","span","FrequentTransactionsList","history","useHistory","sort","b","slice","transactionsRepeated","marginTop","push","onKeyPress","length","MoneyLastMonth","income","spent","total","moneyLastMonth","setMoneyLastMonth","amountToAdd","toFixed","DiffSpan","SmallMoneyHeader","DiffIcon","BudgetInfo","BudgetContainer","MostValuableBudget","Overview","StyledList","Top","IconSpan","useForm","initialState","newState","Object","entries","checked","formData","setFormData","name","bool","required","Input","input","Label","label","StyledForm","form","Warning","MinPlus","MinPlusIcon","minus","Select","select","CurrencySelector","onChangeAction","currentCurrency","setCurrentCurrency","onChange","Form","handleSubmit","childrenBefore","data","pageTitle","toggleChecked","handleInputChange","formCurrency","setFormCurrency","setMinus","clicked","parseFloat","onSubmit","amountCheck","titleCheck","amountNum","noValidate","autoComplete","htmlFor","id","placeholder","position","padding","fontSize","right","BudgetModal","height","newTitle","newAmount","newCurrency","newBudget","googleId","patch","Budget","List","Flex","Line","BudgetList","selectedSort","setSelectedSort","TransitionGroup","component","sortedBudgets","compare","split","localeCompare","reverse","CSSTransition","classNames","renderBudgets","BudgetForm","uuidv4","post","Budgets","StyledP","SmallContainer","AnimatedSmallContainer","animate","CheckBox","PaymentForm","selectedBudgetId","setSelectedBudgetId","repeatTransaction","setRepeatTransaction","startDate","setStartDate","dateCheck","setDateCheck","check","budgetsLength","handleCheckboxCheck","newTransaction","in","unmountOnExit","className","isNaN","maxLength","opacity","TransactionList","selectedTransactions","renderTransactionsRepeat","renderTransactions","Payments","Statistics","AllMoney","AnimatedRouter","exact","path","currencyExchangeAPI","currencyFromState","lastFetchedDate","get","rates","rate","dbAPI","setLoading","unsetLoading","params","userCurrency","res","catch","App","firstRender","setLoader","useCallback","unsetLoader","updateCurrency","size"],"mappings":"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","file":"static/js/main.8e6da276.chunk.js","sourcesContent":["export enum Constants {\r\n  LOGIN = 'LOGIN',\r\n  LOGOUT = 'LOGOUT',\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-family: Roboto;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--color-black)\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n\r\n  :root {\r\n    // COLORS\r\n    --color-red: #E53E3E;\r\n    --color-gray: #CBD5E0;\r\n    --color-gray-dark: #1A202C;\r\n    --color-green: #48BB78;\r\n    --color-black: #222;\r\n    --color-white: #fff;\r\n    --color-blue-light: #90CDF4;\r\n\r\n    // TRANSITIONS\r\n    --trans-default: all .2s ease;\r\n    \r\n    // SHADOWS\r\n    --shadow-default: 0px 5px 30px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const breakpoints = {\r\n  mobile: '36rem', // 576px\r\n  tablet: '48rem', // 768px\r\n  laptop: '62rem', // 992px\r\n  desktop: '75rem', // 1200px\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  color: string;\r\n  textColor: string;\r\n  secondary?: boolean;\r\n}\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  border-radius: 1rem;\r\n  border: ${props =>\r\n    props.secondary ? `2px solid var(--color-${props.color})` : 'none'};\r\n  width: 100%;\r\n  font-size: 1.8rem;\r\n  padding: 1.1rem;\r\n  color: ${props => `var(--color-${props.textColor})`};\r\n  background-color: ${props =>\r\n    props.secondary ? 'var(--color-white)' : `var(--color-${props.color})`};\r\n  font-family: inherit;\r\n  transition: var(--trans-default);\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n    transform: translateY(-5%);\r\n    cursor: pointer;\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.3);\r\n    ${props =>\r\n      props.secondary &&\r\n      `background-color: var(--color-${props.color}); color: var(--color-white)`};\r\n  }\r\n\r\n  :active {\r\n    transform: translateY(2%);\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\nimport { Button } from '../Button';\r\n\r\ninterface NavProps {\r\n  opened?: boolean;\r\n  focused?: boolean;\r\n}\r\n\r\nexport const Navigation = styled.nav`\r\n  color: #111;\r\n  letter-spacing: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 3.5rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    font-weight: 500;\r\n    font-size: 3rem;\r\n    margin-right: 2rem;\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ToggleNavButton = styled.button`\r\n  width: 4.5rem;\r\n  height: 4.5rem;\r\n  border-radius: 35%;\r\n  background-color: #111;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 11;\r\n  position: fixed;\r\n  right: 3.5rem;\r\n  transition: var(--trans-default);\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavIcon = styled.div<NavProps>`\r\n  pointer-events: none;\r\n  width: 2.2rem;\r\n  height: 3px;\r\n  background-color: #fff;\r\n\r\n  transform: ${props =>\r\n    props.opened ? 'rotate(225deg) scale(1.3)' : 'rotate(0) scale(1)'};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.opened\r\n        ? `rotate(90deg) translateY(0)`\r\n        : `rotate(0) translateY(${props.focused ? '250%' : '125%'})`};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.focused ? 'translateY(-350%)' : 'translateY(-225%)'};\r\n\r\n    display: ${props => (props.opened ? 'none' : 'block')};\r\n  }\r\n`;\r\n\r\nexport const MobileLinksContainer = styled.div<NavProps>`\r\n  background-color: #111;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  transition: var(--trans-default);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  transform: ${props => (props.opened ? 'translateX(0)' : 'translateX(-100%)')};\r\n\r\n  ul {\r\n    transition: var(--trans-default);\r\n    transition-delay: 0.1s;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n    margin-bottom: 25%;\r\n\r\n    transform: ${props =>\r\n      props.opened ? 'translateX(0)' : 'translateX(-100%)'};\r\n\r\n    li {\r\n      :not(:last-child) {\r\n        margin-bottom: 4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopLinksContainer = styled.ul`\r\n  width: 47rem;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n    :not(:last-child) {\r\n    }\r\n  }\r\n\r\n  display: none;\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)<{ $isactive: boolean }>`\r\n  font-size: 2.5rem;\r\n  text-decoration: none;\r\n  text-transform: capitalize;\r\n  ${props => props.$isactive && 'text-decoration: underline; cursor: default;'}\r\n\r\n  color: #fff;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    color: #222;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\ntype url = { url: string };\r\n\r\nexport const Avatar = styled.div<url>`\r\n  border-radius: 50%;\r\n  background-image: ${props => `url('${props.url}')`};\r\n  background-size: cover;\r\n  padding: 2rem;\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nexport const GoogleButton = styled(Button)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0.9rem;\r\n\r\n  svg {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n","export const routes = ['overview', 'budgets', 'payments', 'statistics'];\r\n\r\nexport const dbUrl = 'https://budgety-server.herokuapp.com';\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { action } from 'typesafe-actions';\r\nimport { Constants } from './constants';\r\n\r\nexport const loginAction = (userInfo: GoogleLoginResponse['profileObj']) => {\r\n  return action(Constants.LOGIN, { userInfo });\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  return action(Constants.LOGOUT);\r\n};\r\n","import { RootState } from '.';\r\n\r\nexport const loadState = (): RootState | undefined => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    const state: RootState = JSON.parse(serializedState);\r\n    return state;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: RootState): void => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { TransactionType } from '../store/transactions/types';\r\n\r\n// PROTOTYPES\r\ndeclare global {\r\n  interface Date {\r\n    getFancyDate(): string;\r\n    getFancyHours(): string;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyDate = function (): string {\r\n  let day = this.getDate().toString();\r\n  let month = (this.getMonth() + 1).toString();\r\n\r\n  if (parseInt(day) < 10) day = `0${day}`;\r\n  if (parseInt(month) < 10) month = `0${month}`;\r\n\r\n  return `${day}/${month}/${this.getFullYear()}`;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyHours = function (): string {\r\n  let hours = this.getHours().toString();\r\n  let minutes = this.getMinutes().toString();\r\n\r\n  if (parseInt(minutes) < 10) minutes = `0${minutes}`;\r\n  if (parseInt(hours) < 10) hours = `0${hours}`;\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const handleEnterPressed = (\r\n  e: React.KeyboardEvent,\r\n  action: (e: React.SyntheticEvent) => void\r\n): void => {\r\n  if (e.key === 'Enter') action(e);\r\n};\r\n\r\nexport const timeout = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n\r\nexport const getMultiplier = (\r\n  transaction: TransactionType,\r\n  monthly: boolean = false\r\n): number => {\r\n  const hour = 1000 * 60 * 60 * transaction.repeat.every;\r\n  const now = new Date();\r\n  const nowDate = now.getTime();\r\n  const transactionDate = monthly\r\n    ? new Date(now.getFullYear(), now.getMonth(), 1).getTime()\r\n    : new Date(transaction.date).getTime();\r\n  let multiplier = 1;\r\n\r\n  if (!transaction.repeat.repeat) return 1;\r\n\r\n  switch (transaction.repeat.type) {\r\n    case 'hours':\r\n      multiplier = Math.floor((nowDate - transactionDate) / hour);\r\n      break;\r\n    case 'days':\r\n      multiplier = Math.floor((nowDate - transactionDate) / (hour * 24));\r\n      break;\r\n    case 'month':\r\n      multiplier = Math.floor((nowDate - transactionDate) / (hour * 24 * 31));\r\n      break;\r\n    case 'year':\r\n      multiplier = Math.floor((nowDate - transactionDate) / (hour * 24 * 365));\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n  }\r\n\r\n  return multiplier;\r\n};\r\n","export enum Constants {\r\n  ADD_BUDGET = 'ADD_BUDGET',\r\n  REMOVE_BUDGET = 'REMOVE_BUDGET',\r\n  EDIT_BUDGET = 'EDIT_BUDGET',\r\n  CHANGE_TRANSACTIONS = 'CHANGE_TRANSACTIONS',\r\n  REMOVE_BUDGET_ALL = 'REMOVE_BUDGET_ALL',\r\n}\r\n","import { getMultiplier } from '../../utils/utility';\r\nimport { Constants } from './constants';\r\nimport { BudgetsActions, BudgetsState } from './types';\r\n\r\nexport const budgetsReducer = (\r\n  state: BudgetsState = [],\r\n  action: BudgetsActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_BUDGET:\r\n      return [...state, action.payload.budget];\r\n\r\n    case Constants.REMOVE_BUDGET:\r\n      newState = state.filter(budget => budget._id !== action.payload.budgetId);\r\n      return newState;\r\n\r\n    case Constants.EDIT_BUDGET:\r\n      newState = state.map(budget => {\r\n        if (budget._id === action.payload.budget._id) {\r\n          return action.payload.budget;\r\n        }\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.CHANGE_TRANSACTIONS:\r\n      newState = state.map(budget => {\r\n        budget.amount.actual = budget.amount.starting;\r\n        const currency = action.payload.currency;\r\n\r\n        action.payload.transactions.forEach(transaction => {\r\n          let money =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[budget.amount.currency];\r\n\r\n          const multiplier = getMultiplier(transaction);\r\n\r\n          if (transaction.repeat.repeat) money = money + money * multiplier;\r\n\r\n          if (transaction.budgetId === budget._id) {\r\n            budget = {\r\n              ...budget,\r\n              amount: {\r\n                ...budget.amount,\r\n                actual: budget.amount.actual + money,\r\n              },\r\n            };\r\n          }\r\n        });\r\n\r\n        budget = {\r\n          ...budget,\r\n          amount: {\r\n            ...budget.amount,\r\n            diff: budget.amount.actual - budget.amount.starting,\r\n          },\r\n        };\r\n\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_BUDGET_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  UPDATE_CURRENCY = 'UPDATE_CURRENCY',\r\n  SET_PRIMARY_CURRENCY = 'SET_PRIMARY_CURRENCY',\r\n}\r\n","import { Constants } from './constants';\r\nimport { CurrencyActions, CurrencyType } from './types';\r\n\r\nexport const currencyReducer = (\r\n  state: CurrencyType = {\r\n    dateFetched: new Date(0),\r\n    source: 'USD',\r\n    currencies: {},\r\n    primaryCurrency: 'USD',\r\n  },\r\n  action: CurrencyActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_CURRENCY:\r\n      return action.payload.currency;\r\n\r\n    case Constants.SET_PRIMARY_CURRENCY:\r\n      return { ...state, primaryCurrency: action.payload.currencyString };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionType } from 'typesafe-actions';\r\nimport { action } from 'typesafe-actions';\r\n\r\nexport enum Constants {\r\n  SET_LOADING = 'SET_LOADING',\r\n  UNSET_LOADING = 'UNSET_LOADING',\r\n}\r\n\r\nexport const setLoaderAction = () => {\r\n  return action(Constants.SET_LOADING);\r\n};\r\n\r\nexport const unsetLoaderAction = () => {\r\n  return action(Constants.UNSET_LOADING);\r\n};\r\n\r\nconst actions = {\r\n  setLoaderAction,\r\n  unsetLoaderAction,\r\n};\r\n\r\nexport type LoaderActions = ActionType<typeof actions>;\r\n\r\nexport const loaderReducer = (\r\n  state: boolean = false,\r\n  action: LoaderActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.SET_LOADING:\r\n      return true;\r\n\r\n    case Constants.UNSET_LOADING:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  ADD_TRANSACTION = 'ADD_TRANSACTION',\r\n  REMOVE_TRANSACTION = 'REMOVE_TRANSACTION',\r\n  REMOVE_TRANSACTIONS_BUDGET = 'REMOVE_TRANSACTIONS_BUDGET',\r\n  EDIT_TRANSACTION = 'EDIT_TRANSACTION',\r\n  REMOVE_TRANSACTION_ALL = 'REMOVE_TRANSACTION_ALL',\r\n}\r\n","import { Constants } from './constants';\r\nimport { TransactionActions, TransactionState } from './types';\r\n\r\nexport const transactionReducer = (\r\n  state: TransactionState = [],\r\n  action: TransactionActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_TRANSACTION:\r\n      return [...state, action.payload.transaction];\r\n\r\n    case Constants.REMOVE_TRANSACTION:\r\n      newState = state.filter(\r\n        transaction => transaction._id !== action.payload.transactionId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTIONS_BUDGET:\r\n      newState = state.filter(\r\n        transaction => transaction.budgetId !== action.payload.budgetId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.EDIT_TRANSACTION:\r\n      newState = state.map(transaction => {\r\n        if (transaction._id === action.payload.transaction._id) {\r\n          return action.payload.transaction;\r\n        }\r\n        return transaction;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTION_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { combineReducers, createStore, compose } from 'redux';\r\n\r\nimport { budgetsReducer } from './budgets/reducer';\r\nimport { BudgetsState } from './budgets/types';\r\nimport { currencyReducer } from './currency/reducer';\r\nimport { CurrencyType } from './currency/types';\r\nimport { googleUserReducer } from './googleUser/reducer';\r\nimport { loaderReducer } from './loader';\r\nimport { loadState, saveState } from './localstorage';\r\nimport { transactionReducer } from './transactions/reducer';\r\nimport { TransactionState } from './transactions/types';\r\n\r\nexport interface RootState {\r\n  budgets: BudgetsState;\r\n  transactions: TransactionState;\r\n  googleUser: GoogleLoginResponse['profileObj'] | null;\r\n  currency: CurrencyType;\r\n  loader: boolean;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  combineReducers<RootState>({\r\n    budgets: budgetsReducer,\r\n    transactions: transactionReducer,\r\n    googleUser: googleUserReducer,\r\n    currency: currencyReducer,\r\n    loader: loaderReducer,\r\n  }),\r\n  persistedState,\r\n  composeEnhancers()\r\n);\r\n\r\nstore.subscribe((): void => {\r\n  const state = store.getState();\r\n  // const persState = loadState() as RootState;\r\n\r\n  const budgets = state.budgets.filter(budget => budget.userId === null);\r\n  const transactions = state.transactions.filter(\r\n    transaction => transaction.userId === null\r\n  );\r\n  const currency = state.currency;\r\n  const loader = state.loader;\r\n\r\n  if (state.googleUser === null)\r\n    saveState({ budgets, transactions, currency, loader, googleUser: null });\r\n});\r\n\r\nexport default store;\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { Constants } from './constants';\r\nimport { GoogleUserActions } from './types';\r\n\r\nexport const googleUserReducer = (\r\n  state: GoogleLoginResponse['profileObj'] | null = null,\r\n  action: GoogleUserActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.LOGIN:\r\n      return { ...action.payload.userInfo };\r\n\r\n    case Constants.LOGOUT:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport store from '..';\r\nimport { BudgetType } from './types';\r\nimport { TransactionType } from '../transactions/types';\r\nimport { Constants } from './constants';\r\nimport { CurrencyType } from '../currency/types';\r\n\r\nexport const addBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.ADD_BUDGET, { budget });\r\n};\r\n\r\nexport const removeBudgetAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.EDIT_BUDGET, { budget });\r\n};\r\n\r\nexport const changeTransactions = () => {\r\n  const transactions: TransactionType[] = store.getState().transactions;\r\n  const currency: CurrencyType = store.getState().currency;\r\n  return action(Constants.CHANGE_TRANSACTIONS, { transactions, currency });\r\n};\r\n\r\nexport const removeAllBudgetsAction = () => {\r\n  return action(Constants.REMOVE_BUDGET_ALL);\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { TransactionType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const addTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.ADD_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeTransactionAction = (transactionId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTION, { transactionId });\r\n};\r\n\r\nexport const removeTransactionsByBudgetIdAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTIONS_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.EDIT_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeAllTransactionsAction = () => {\r\n  return action(Constants.REMOVE_TRANSACTION_ALL);\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { CurrencyType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const updateCurrency = (currency: CurrencyType) => {\r\n  return action(Constants.UPDATE_CURRENCY, { currency });\r\n};\r\n\r\nexport const setPrimaryCurrency = (currencyString: string) => {\r\n  return action(Constants.SET_PRIMARY_CURRENCY, { currencyString });\r\n};\r\n","import React, { FC, useState, useRef } from 'react';\r\n\r\nimport GoogleLogin, {\r\n  GoogleLoginResponse,\r\n  GoogleLoginResponseOffline,\r\n  GoogleLogout,\r\n} from 'react-google-login';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  Navigation,\r\n  HeaderContainer,\r\n  ToggleNavButton,\r\n  NavIcon,\r\n  MobileLinksContainer,\r\n  StyledLink,\r\n  DesktopLinksContainer,\r\n  Avatar,\r\n  GoogleButton,\r\n} from './Elements';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport { routes } from '../../constant/routes';\r\nimport { loginAction, logoutAction } from '../../store/googleUser/actions';\r\nimport { RootState } from '../../store';\r\nimport { loadState } from '../../store/localstorage';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n} from '../../store/budgets/actions';\r\nimport { timeout } from '../../utils/utility';\r\nimport { addTransactionAction } from '../../store/transactions/actions';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst NavBar: FC = (): JSX.Element => {\r\n  const [opened, setOpened] = useState(false);\r\n  const [btnFocused, setBtnFocued] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const location = useLocation();\r\n\r\n  const toggleNavMenu = (e: React.MouseEvent) => {\r\n    setOpened(!opened);\r\n    if (!(e.target === btnRef.current)) window.scrollTo(0, 0);\r\n  };\r\n\r\n  const renderLinks = (\r\n    routes: string[],\r\n    focusableByDefault = true\r\n  ): JSX.Element[] => {\r\n    return routes.map((route, i) => {\r\n      const isActive = `/${route}` === location.pathname ? true : false;\r\n\r\n      return (\r\n        <li key={i}>\r\n          <StyledLink\r\n            tabIndex={focusableByDefault ? 0 : opened ? 0 : -1}\r\n            onClick={e => (!isActive ? toggleNavMenu(e) : e.preventDefault())}\r\n            to={route}\r\n            $isactive={isActive}\r\n          >\r\n            {route}\r\n          </StyledLink>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleResponseGoogle = (\r\n    response: GoogleLoginResponse | GoogleLoginResponseOffline\r\n  ) => {\r\n    if ((response as GoogleLoginResponse).profileObj) {\r\n      dispatch(loginAction((response as GoogleLoginResponse).profileObj));\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    const state = loadState();\r\n    dispatch(logoutAction());\r\n\r\n    if (state) {\r\n      await timeout(100);\r\n      state.budgets.forEach(budget => dispatch(addBudgetAction(budget)));\r\n      state.transactions.forEach(transaction =>\r\n        dispatch(addTransactionAction(transaction))\r\n      );\r\n\r\n      dispatch(setPrimaryCurrency(state.currency.primaryCurrency));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navigation>\r\n      <HeaderContainer>\r\n        <h1 style={{ marginRight: '1rem' }}>Budgety</h1>\r\n        {googleUser === null ? (\r\n          <GoogleLogin\r\n            clientId=\"118372615416-g77a8gaf92slnb4f50jr6o9cmh0f4ho1.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={handleResponseGoogle}\r\n            onFailure={handleResponseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn\r\n            render={renderProps => (\r\n              <GoogleButton\r\n                color=\"red\"\r\n                textColor=\"white\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <FaGoogle />\r\n                Login\r\n              </GoogleButton>\r\n            )}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Avatar url={googleUser.imageUrl} />\r\n            <GoogleLogout\r\n              clientId=\"118372615416-cjlib17tonjdhn4tqtpnetm7mif08ah9.apps.googleusercontent.com\"\r\n              buttonText=\"Logout\"\r\n              onLogoutSuccess={handleLogout}\r\n              render={renderProps => (\r\n                <GoogleButton\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={renderProps.onClick}\r\n                  disabled={renderProps.disabled}\r\n                >\r\n                  <FaGoogle />\r\n                  Logout\r\n                </GoogleButton>\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n      </HeaderContainer>\r\n      <ToggleNavButton\r\n        aria-label=\"Navigation button\"\r\n        onClick={toggleNavMenu}\r\n        onFocus={() => setBtnFocued(true)}\r\n        onBlur={() => setBtnFocued(false)}\r\n        ref={btnRef}\r\n      >\r\n        <NavIcon opened={opened} focused={btnFocused} />\r\n      </ToggleNavButton>\r\n      <MobileLinksContainer opened={opened}>\r\n        <ul>{renderLinks(routes, false)}</ul>\r\n      </MobileLinksContainer>\r\n      <DesktopLinksContainer>{renderLinks(routes)}</DesktopLinksContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header1 = styled.h1<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 4rem;\r\n  font-weight: 400;\r\n  color: ${props =>\r\n    props.$color ? `var(--color-${props.$color})` : 'var(--color-black)'};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nexport const Header2 = styled.h2<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 3.5rem;\r\n  font-weight: 400;\r\n  color: ${props =>\r\n    props.$color ? `var(--color-${props.$color})` : 'var(--color-black)'};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const Header3 = styled.h3<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 3rem;\r\n  font-weight: 400;\r\n  color: ${props =>\r\n    props.$color ? `var(--color-${props.$color})` : 'var(--color-black)'};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const Header4 = styled.h4<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 2.5rem;\r\n  font-weight: 500;\r\n  color: ${props =>\r\n    props.$color ? `var(--color-${props.$color})` : 'var(--color-black)'};\r\n  text-align: center;\r\n  margin: 0.75rem 0;\r\n`;\r\n\r\nexport const Header5 = styled.h5<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 2.3rem;\r\n  font-weight: 500;\r\n  color: ${props =>\r\n    props.$color ? `var(--color-${props.$color})` : 'var(--color-black)'};\r\n  text-align: center;\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nexport const Header6 = styled.h6<{ $color?: string }>`\r\n  transition: var(--trans-default);\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n  color: ${props =>\r\n    props.$color ? `var(--color-${props.$color})` : 'var(--color-black)'};\r\n  text-align: center;\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nexport const NoMessage = styled.h3`\r\n  font-weight: 600;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.3;\r\n`;\r\n","export const getMoneyColor = (amount: number): 'red' | 'green' | 'black' => {\r\n  if (amount > 0) return 'green';\r\n  else if (amount < 0) return 'red';\r\n  return 'black';\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const Background = styled.div<{ animating: boolean }>`\r\n  position: fixed;\r\n  z-index: 20;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  transition: var(--trans-default);\r\n  opacity: ${props => (props.animating ? '0' : '100%')};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  z-index: 21;\r\n  background-color: var(--color-white);\r\n  width: 75%;\r\n  padding: 2rem 2rem;\r\n  border-radius: 1rem;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 50rem;\r\n  }\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n`;\r\n","import ReactDOM from 'react-dom';\r\nimport { FC, useRef } from 'react';\r\n\r\nimport { Background, Center, Container } from './Elements';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nconst modalRoot = document.getElementById('modal') as HTMLElement;\r\n\r\nexport const ModalContext = createContext({ handleClose: () => {} });\r\n\r\ninterface ModalProps {\r\n  children: JSX.Element;\r\n  closeModal: () => void;\r\n  closable?: boolean;\r\n  container?: boolean;\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({\r\n  children,\r\n  closeModal,\r\n  closable = true,\r\n  container = true,\r\n}): JSX.Element => {\r\n  const [animating, setAnimating] = useState(true);\r\n  const bgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setAnimating(false);\r\n  }, []);\r\n\r\n  const handleClose = (): void => {\r\n    setAnimating(true);\r\n    setTimeout(() => closeModal(), 200);\r\n  };\r\n\r\n  const handleBgClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ): void => {\r\n    if (e.target === bgRef.current && closable) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Background\r\n      animating={animating}\r\n      ref={bgRef}\r\n      onClick={e => handleBgClick(e)}\r\n    >\r\n      {container ? (\r\n        <Container>\r\n          <ModalContext.Provider value={{ handleClose }}>\r\n            {children}\r\n          </ModalContext.Provider>\r\n        </Container>\r\n      ) : (\r\n        <ModalContext.Provider value={{ handleClose }}>\r\n          <Center>{children}</Center>\r\n        </ModalContext.Provider>\r\n      )}\r\n    </Background>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { ButtonsContainer } from './Elements';\r\nimport { ModalContext } from '../Modal';\r\nimport { Button } from '../Button';\r\nimport { Header4 } from '../Header';\r\n\r\ninterface ModalConfirmProps {\r\n  handleAction: () => void;\r\n}\r\n\r\nconst ModalConfirm: FC<ModalConfirmProps> = ({ handleAction }): JSX.Element => {\r\n  const context = useContext(ModalContext);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleActionClicked = (): void => {\r\n    context.handleClose();\r\n\r\n    handleAction();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header4 style={{ marginBottom: '2rem' }}>Are you sure?</Header4>\r\n      <ButtonsContainer>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"gray-dark\"\r\n          secondary\r\n          style={{ width: '48%' }}\r\n          onClick={handleClose}\r\n          type=\"button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          style={{ width: '48%' }}\r\n          onClick={handleActionClicked}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ButtonsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import { BiX } from 'react-icons/bi';\r\nimport styled from 'styled-components';\r\nimport { ColorType } from '../../../../components/BudgetInfo/Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Money = styled.div<ColorType>`\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-size: 2.1rem;\r\n  margin: 0 1rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const MediumTitle = styled.h2`\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0.5rem;\r\n  width: max-content;\r\n`;\r\n\r\nexport const SmallTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.9;\r\n`;\r\n\r\nexport const DateHeader = styled.h3`\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const DeleteBtn = styled(Button)`\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CloseIcon = styled(BiX)`\r\n  font-size: 3rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DeleteText = styled.p`\r\n  display: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: inline;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport { removeTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport { getMoneyColor } from '../../../../utils/ux';\r\nimport Modal from '../../../../components/Modal';\r\nimport ModalConfirm from '../../../../components/ModalConfirm';\r\nimport {\r\n  CloseIcon,\r\n  Container,\r\n  DateHeader,\r\n  DeleteBtn,\r\n  DeleteText,\r\n  MediumTitle,\r\n  Money,\r\n  SmallTitle,\r\n  Title,\r\n} from './Elements';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\ninterface TransactionProps extends TransactionType {\r\n  deletable?: boolean;\r\n}\r\n\r\nconst Transaction: FC<TransactionProps> = ({\r\n  _id,\r\n  budgetId,\r\n  title,\r\n  amount,\r\n  repeat,\r\n  date,\r\n  currency,\r\n  deletable = true,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  const [budget, setBudget] = useState<null | BudgetType>(null);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const dateN = new Date(date);\r\n\r\n  useEffect(() => {\r\n    const selectedBudget = budgets.filter(budget => budget._id === budgetId)[0];\r\n\r\n    if (selectedBudget) {\r\n      setBudget(selectedBudget);\r\n    }\r\n  }, [budgets, budgetId]);\r\n\r\n  const handleDeleteTransaction = (): void => {\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/transactions/${_id}`).then(() => {\r\n        dispatch(removeTransactionAction(_id));\r\n        dispatch(changeTransactions());\r\n        dispatch(unsetLoaderAction());\r\n      });\r\n    } else {\r\n      dispatch(removeTransactionAction(_id));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div style={{ flex: 1 }}>\r\n          <Title>{title}</Title>\r\n\r\n          {budget && <SmallTitle>{budget.title}</SmallTitle>}\r\n\r\n          <DateHeader>\r\n            {dateN.getFancyDate()} | {dateN.getFancyHours()}\r\n          </DateHeader>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          {repeat.repeat && (\r\n            <MediumTitle>\r\n              Every {repeat.every} {repeat.type}\r\n            </MediumTitle>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Money color={getMoneyColor(amount)}>\r\n              {amount} {currency}\r\n            </Money>\r\n\r\n            {deletable && (\r\n              <div>\r\n                <DeleteBtn\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={() => setModalOpened(true)}\r\n                >\r\n                  <CloseIcon />\r\n                  <DeleteText>Delete</DeleteText>\r\n                </DeleteBtn>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <ModalConfirm handleAction={handleDeleteTransaction} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const SmContainer = styled.div`\r\n  padding: 0;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Dash = styled.span`\r\n  border-radius: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1.8rem;\r\n  opacity: 0.5;\r\n  height: min-content;\r\n  display: inline-block;\r\n  background-color: var(--color-gray);\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.ul`\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  list-style: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 40%;\r\n  }\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport Transaction from '../../../Payments/components/Transaction';\r\nimport { NoMessage } from '../../../../components/Header';\r\nimport { Dash } from '../MoneyLastMonth/Elements';\r\nimport { Header4 } from '../../../../components/Header';\r\nimport { Container } from './Elements';\r\n\r\nconst FrequentTransactionsList: FC = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const transactions = useSelector((state: RootState) => state.transactions)\r\n    .filter(transaction => !transaction.repeat.repeat)\r\n    .sort((a, b) => {\r\n      return a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n    })\r\n    .slice(0, 3);\r\n\r\n  const transactionsRepeated = useSelector(\r\n    (state: RootState) => state.transactions\r\n  )\r\n    .filter(transaction => transaction.repeat.repeat)\r\n    .sort((a, b) => {\r\n      return a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n    })\r\n    .slice(0, 3);\r\n\r\n  const renderTransactions = (): JSX.Element[] => {\r\n    return transactions.map(transaction => {\r\n      return (\r\n        <li key={transaction._id}>\r\n          <Transaction {...transaction} deletable={false} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTransactionsRepeated = (): JSX.Element[] => {\r\n    return transactionsRepeated.map(transaction => {\r\n      return (\r\n        <li key={transaction._id}>\r\n          <Transaction {...transaction} deletable={false} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Header4 style={{ marginTop: '8rem' }}>\r\n          Repeat Payments{' '}\r\n          <Dash\r\n            tabIndex={0}\r\n            onClick={() => history.push('payments')}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => history.push('payments'))\r\n            }\r\n          >\r\n            See all\r\n          </Dash>\r\n        </Header4>\r\n        <Container>\r\n          {' '}\r\n          {transactionsRepeated.length ? (\r\n            renderTransactionsRepeated()\r\n          ) : (\r\n            <NoMessage style={{ marginTop: '1.5rem' }}>\r\n              There is no payments\r\n            </NoMessage>\r\n          )}\r\n        </Container>\r\n      </div>\r\n      <div>\r\n        <Header4 style={{ marginTop: '8rem' }}>\r\n          Frequent Payments{' '}\r\n          <Dash\r\n            tabIndex={0}\r\n            onClick={() => history.push('payments')}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => history.push('payments'))\r\n            }\r\n          >\r\n            See all\r\n          </Dash>\r\n        </Header4>\r\n\r\n        <Container>\r\n          {' '}\r\n          {transactions.length ? (\r\n            renderTransactions()\r\n          ) : (\r\n            <NoMessage style={{ marginTop: '1.5rem' }}>\r\n              There is no payments\r\n            </NoMessage>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrequentTransactionsList;\r\n","import { FC, useState, useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { Header4, Header5, Header6 } from '../../../../components/Header';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { getMultiplier } from '../../../../utils/utility';\r\nimport { getMoneyColor } from '../../../../utils/ux';\r\nimport { Container, SmContainer } from './Elements';\r\n\r\nconst nowDate = new Date();\r\n\r\nconst MoneyLastMonth: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const [moneyLastMonth, setMoneyLastMonth] = useState({\r\n    income: 0,\r\n    spent: 0,\r\n    total: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let money = { income: 0, spent: 0, total: 0 };\r\n\r\n    transactions.forEach(transaction => {\r\n      const transactionDate = new Date(transaction.date);\r\n\r\n      const multiplier =\r\n        transactionDate.getMonth() === nowDate.getMonth()\r\n          ? getMultiplier(transaction)\r\n          : getMultiplier(transaction, true);\r\n\r\n      if (\r\n        transactionDate.getMonth() === nowDate.getMonth() ||\r\n        transaction.repeat.repeat\r\n      )\r\n        if (transaction.amount > 0) {\r\n          let amountToAdd =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n\r\n          if (transaction.repeat.repeat)\r\n            amountToAdd = amountToAdd + amountToAdd * multiplier;\r\n\r\n          money.income += amountToAdd;\r\n        } else if (transaction.amount < 0) {\r\n          let amountToAdd =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n\r\n          if (transaction.repeat.repeat)\r\n            amountToAdd = amountToAdd + amountToAdd * multiplier;\r\n\r\n          money.spent += amountToAdd;\r\n        }\r\n      money.total = money.income + money.spent;\r\n    });\r\n\r\n    setMoneyLastMonth(money);\r\n  }, [transactions, currency.currencies, currency.primaryCurrency]);\r\n\r\n  return (\r\n    <>\r\n      <Header4 style={{ marginTop: '4rem' }}>Outgoings last month</Header4>\r\n      <Container>\r\n        <SmContainer>\r\n          <Header6>Income</Header6>\r\n          <Header5 $color=\"green\">\r\n            {moneyLastMonth.income.toFixed()} {currency.primaryCurrency}\r\n          </Header5>\r\n        </SmContainer>\r\n\r\n        <SmContainer>\r\n          <Header6>Total</Header6>\r\n          <Header5 $color={getMoneyColor(moneyLastMonth.total)}>\r\n            {moneyLastMonth.total.toFixed()} {currency.primaryCurrency}\r\n          </Header5>\r\n        </SmContainer>\r\n        <SmContainer>\r\n          <Header6>Spent</Header6>\r\n          <Header5 $color=\"red\">\r\n            {moneyLastMonth.spent.toFixed()} {currency.primaryCurrency}\r\n          </Header5>\r\n        </SmContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyLastMonth;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ColorType {\r\n  color: 'green' | 'red' | 'black';\r\n}\r\n\r\nexport const DiffSpan = styled.div<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin-left: 0;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n  height: 5rem;\r\n`;\r\n\r\nexport const SmallMoneyHeader = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: max-content;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n\r\nexport const DiffIcon = styled.i<{ amount: number }>`\r\n  position: absolute;\r\n  top: ${props => (props.amount > 0 ? '25%' : '90%')};\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { SmallMoneyHeader, DiffSpan, DiffIcon } from './Elements';\r\nimport { BiCaretUp, BiCaretDown, BiMinus } from 'react-icons/bi';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport { BudgetType } from '../../store/budgets/types';\r\nimport { Header3, Header5 } from '../Header';\r\n\r\nconst BudgetInfo: FC<BudgetType> = (budget): JSX.Element => {\r\n  const { title, amount } = budget;\r\n\r\n  return (\r\n    <>\r\n      <Header3>{title}</Header3>\r\n      <div>\r\n        <Header5 $color={getMoneyColor(amount.actual)}>\r\n          {amount.actual.toFixed(2)} {amount.currency}\r\n        </Header5>\r\n        <DiffSpan color={getMoneyColor(amount.diff)}>\r\n          <SmallMoneyHeader>\r\n            {amount.diff.toFixed(2)} {amount.currency}\r\n          </SmallMoneyHeader>\r\n          <DiffIcon amount={amount.diff}>\r\n            {amount.diff > 0 ? (\r\n              <BiCaretUp />\r\n            ) : amount.diff < 0 ? (\r\n              <BiCaretDown />\r\n            ) : (\r\n              <BiMinus />\r\n            )}\r\n          </DiffIcon>\r\n        </DiffSpan>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const BudgetContainer = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  padding: 2rem;\r\n  border-radius: 1rem;\r\n  width: 20rem;\r\n  box-shadow: var(--shadow-default);\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { Header4 } from '../../../../components/Header';\r\nimport { RootState } from '../../../../store';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { NoMessage } from '../../../../components/Header';\r\nimport { Container } from '../FrequentTransactionsList/Elements';\r\nimport { Dash } from '../MoneyLastMonth/Elements';\r\n\r\nimport { BudgetContainer } from './Elements';\r\n\r\nconst MostValuableBudget: FC = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const budget = useSelector(\r\n    (state: RootState) =>\r\n      state.budgets.sort((a, b) => {\r\n        return a.amount.actual > b.amount.actual\r\n          ? -1\r\n          : a.amount.actual < b.amount.actual\r\n          ? 1\r\n          : 0;\r\n      })[0]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Header4 style={{ marginTop: '6rem' }}>\r\n        Most valuable Budget{' '}\r\n        <Dash\r\n          tabIndex={0}\r\n          onClick={() => history.push('budgets')}\r\n          onKeyPress={e =>\r\n            handleEnterPressed(e, () => history.push('payments'))\r\n          }\r\n        >\r\n          See all\r\n        </Dash>\r\n      </Header4>\r\n\r\n      {budget ? (\r\n        <BudgetContainer>\r\n          <BudgetInfo {...budget} />\r\n        </BudgetContainer>\r\n      ) : (\r\n        <Container>\r\n          <NoMessage style={{ marginTop: '1.5rem' }}>\r\n            There is no budgets\r\n          </NoMessage>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MostValuableBudget;\r\n","import { FC } from 'react';\r\n\r\nimport { Header2 } from '../../components/Header';\r\nimport FrequentTransactionsList from './components/FrequentTransactionsList';\r\nimport MoneyLastMonth from './components/MoneyLastMonth';\r\nimport MostValuableBudget from './components/MostValuableBudget';\r\n\r\nconst Overview: FC = () => {\r\n  return (\r\n    <div>\r\n      <Header2>Overview</Header2>\r\n      <MoneyLastMonth />\r\n      <MostValuableBudget />\r\n      <FrequentTransactionsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const StyledList = styled.ul`\r\n  list-style: none;\r\n  margin: 4rem auto;\r\n  padding: 0;\r\n  justify-content: center;\r\n  gap: 4rem;\r\n  grid-template-columns: repeat(auto-fit, 23rem);\r\n  padding: 0 4rem;\r\n  align-items: center;\r\n\r\n  display: grid;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 23rem;\r\n  height: max-content;\r\n  box-shadow: var(--shadow-default);\r\n  border-radius: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const IconSpan = styled.span`\r\n  font-size: 3rem;\r\n  height: 4rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border: solid 1px transparent;\r\n  border-radius: 1rem;\r\n\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\ninterface returnedObject {\r\n  [key: string]: { value: string; required: boolean; checked: boolean };\r\n}\r\n\r\nconst useForm = (initialState: {\r\n  [key: string]: { value: string; required: boolean };\r\n}): [\r\n  returnedObject,\r\n  Dispatch<SetStateAction<returnedObject>>,\r\n  (name: string, bool?: boolean) => void,\r\n  (e: React.ChangeEvent<HTMLInputElement>) => void\r\n] => {\r\n  let newState: returnedObject = {};\r\n\r\n  for (const [key, value] of Object.entries(initialState)) {\r\n    newState = { ...newState, [key]: { ...value, checked: true } };\r\n  }\r\n\r\n  const [formData, setFormData] = useState(newState);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = formData[e.target.name].required\r\n      ? e.target.value\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: {\r\n        ...formData[e.target.name],\r\n        value: e.target.value,\r\n        checked: checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  const toggleChecked = (name: string, bool: boolean = false): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: {\r\n        ...formData[name],\r\n        checked: bool,\r\n      },\r\n    });\r\n  };\r\n  return [formData, setFormData, toggleChecked, handleInputChange];\r\n};\r\n\r\nexport default useForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 2.5rem;\r\n  display: block;\r\n  margin-bottom: 1rem;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const StyledForm = styled.form`\r\n  margin: 5rem auto;\r\n  padding: 0 4rem;\r\n  margin-top: 0;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  :not(:first-child) {\r\n    margin: 4rem 0;\r\n  }\r\n`;\r\n\r\nexport const Warning = styled.p`\r\n  font-size: 1.3rem;\r\n  color: var(--color-red);\r\n  position: absolute;\r\n  margin-top: 0.7rem;\r\n`;\r\n\r\nexport const MinPlus = styled.div`\r\n  padding: 1.83rem 1.5rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  font-size: 1.6rem;\r\n  width: min-content;\r\n  position: absolute;\r\n  background-color: var(--color-white);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MinPlusIcon = styled.div<{ minus: boolean }>`\r\n  pointer-events: none;\r\n  width: 1.3rem;\r\n  height: 2px;\r\n  background-color: ${props =>\r\n    props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n\r\n  transform: ${props => (props.minus ? 'rotate(180deg)' : 'rotate(0)')};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: inherit;\r\n    height: inherit;\r\n    background-color: ${props =>\r\n      props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n    transition: var(--trans-default);\r\n    transform: ${props => (props.minus ? `rotate(270deg)` : `rotate(0)`)};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select<{ color: string }>`\r\n  padding: 0.2rem 0.2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 3rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  color: ${props => `var(--color-${props.color})`};\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { Select } from './Elements';\r\n\r\ninterface CurrencySelectorProps {\r\n  color: string;\r\n  onChangeAction: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  style?: { [key: string]: string };\r\n  currency?: string;\r\n}\r\n\r\nconst CurrencySelector: FC<CurrencySelectorProps> = ({\r\n  color,\r\n  onChangeAction,\r\n  style,\r\n  currency,\r\n}): JSX.Element => {\r\n  const currencies = useSelector(\r\n    (state: RootState) => state.currency.currencies\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [currentCurrency, setCurrentCurrency] = useState(primaryCurrency);\r\n\r\n  useEffect(() => {\r\n    currency && setCurrentCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setCurrentCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  const renderCurrenciesOptions = (): JSX.Element[] => {\r\n    return Object.entries(currencies).map(currency => {\r\n      return (\r\n        <option value={currency[0]} key={currency[0]}>\r\n          {currency[0]}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setCurrentCurrency(e.target.value);\r\n    onChangeAction(e);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      color={color}\r\n      onChange={handleSelectChange}\r\n      value={currentCurrency}\r\n      style={style}\r\n    >\r\n      {renderCurrenciesOptions()}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { FC, useState, useEffect, useRef } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport useForm from '../../hooks/useForm';\r\nimport { Input } from '../Input';\r\nimport {\r\n  Container,\r\n  StyledForm,\r\n  Warning,\r\n  MinPlus,\r\n  MinPlusIcon,\r\n} from './Elements';\r\nimport { Label } from '../Input';\r\nimport { Button } from '../Button';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { RootState } from '../../store';\r\nimport { Header2 } from '../Header';\r\n\r\ninterface FormProps {\r\n  handleSubmit: (title: string, amount: number, currency: string) => void;\r\n  disabled?: boolean;\r\n  children?: JSX.Element;\r\n  childrenBefore?: JSX.Element;\r\n  button?: boolean;\r\n  data?: {\r\n    [key in 'title' | 'amount']: { value: string; required: boolean };\r\n  };\r\n  currency?: string;\r\n  style?: {};\r\n  pageTitle?: string;\r\n}\r\n\r\nconst Form: FC<FormProps> = ({\r\n  handleSubmit,\r\n  disabled = false,\r\n  children,\r\n  childrenBefore,\r\n  button = true,\r\n  data,\r\n  currency,\r\n  style,\r\n  pageTitle,\r\n}): JSX.Element => {\r\n  const [formData, setFormData, toggleChecked, handleInputChange] = useForm(\r\n    data\r\n      ? data\r\n      : {\r\n          title: { value: '', required: true },\r\n          amount: { value: '', required: true },\r\n        }\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [formCurrency, setFormCurrency] = useState(primaryCurrency);\r\n  const [minus, setMinus] = useState(false);\r\n  const clicked = useRef(false);\r\n\r\n  const { title, amount } = formData;\r\n\r\n  useEffect(() => {\r\n    currency && setFormCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setFormCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  useEffect(() => {\r\n    if (parseFloat(amount.value) < 0) {\r\n      setFormData({\r\n        title: { ...title },\r\n        amount: {\r\n          ...amount,\r\n          value: (parseFloat(amount.value) * -1).toFixed(),\r\n        },\r\n      });\r\n      setMinus(true);\r\n      clicked.current = true;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    if (!disabled) {\r\n      const amountCheck = amount.required && !amount.value;\r\n      const titleCheck = title.required && !title.value;\r\n\r\n      if (amountCheck && titleCheck) {\r\n        let newState = {};\r\n\r\n        for (const [key, value] of Object.entries(formData)) {\r\n          newState = { ...newState, [key]: { ...value, checked: false } };\r\n        }\r\n\r\n        setFormData(newState);\r\n      } else {\r\n        if (titleCheck) toggleChecked('title');\r\n\r\n        if (amountCheck) toggleChecked('amount');\r\n      }\r\n\r\n      if (amountCheck || titleCheck) return;\r\n      let amountNum = parseFloat(amount.value);\r\n\r\n      if (minus && amountNum > 0) amountNum = amountNum * -1;\r\n\r\n      handleSubmit(title.value, amountNum, formCurrency);\r\n\r\n      setFormData({\r\n        title: { ...title, value: '' },\r\n        amount: { ...amount, value: '' },\r\n      });\r\n\r\n      setMinus(false);\r\n      clicked.current = false;\r\n    }\r\n  };\r\n\r\n  const handleCurrencyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setFormCurrency(e.target.value);\r\n  };\r\n\r\n  const handleInputChangeNew = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (parseFloat(e.target.value) < 0) setMinus(true);\r\n    else if (parseFloat(e.target.value) >= 0 && !clicked.current)\r\n      setMinus(false);\r\n    handleInputChange(e);\r\n  };\r\n\r\n  const handleMinPlusClick = () => {\r\n    setMinus(!minus);\r\n    if (minus) clicked.current = false;\r\n    else clicked.current = true;\r\n  };\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={handleSubmitForm}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      style={style}\r\n    >\r\n      {pageTitle && (\r\n        <Container>\r\n          <Header2>{pageTitle}</Header2>\r\n        </Container>\r\n      )}\r\n      {childrenBefore && <Container>{childrenBefore}</Container>}\r\n      <Container>\r\n        <Label htmlFor=\"title\">Title</Label>\r\n        <Input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          value={title.value}\r\n          onChange={handleInputChange}\r\n        />\r\n        {!title.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container style={{ position: 'relative' }}>\r\n        <Label htmlFor=\"amount\">Amount</Label>\r\n        <MinPlus onClick={handleMinPlusClick}>\r\n          <MinPlusIcon minus={!minus}></MinPlusIcon>\r\n        </MinPlus>\r\n        <Input\r\n          id=\"amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          placeholder=\"Enter amount\"\r\n          value={amount.value}\r\n          onChange={handleInputChangeNew}\r\n          style={{ padding: '1rem 5rem' }}\r\n        />\r\n        <CurrencySelector\r\n          color=\"black\"\r\n          onChangeAction={handleCurrencyChange}\r\n          style={{ fontSize: '2.85rem', position: 'absolute', right: '0' }}\r\n          currency={formCurrency}\r\n        />\r\n        {!amount.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container>{children}</Container>\r\n      {button && (\r\n        <Button color=\"green\" textColor=\"white\">\r\n          Add\r\n        </Button>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { Top, IconSpan, ButtonsContainer } from './Elements';\r\nimport { BiEdit, BiX } from 'react-icons/bi';\r\nimport { ModalContext } from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { Button } from '../../../../components/Button';\r\nimport {\r\n  changeTransactions,\r\n  editBudgetAction,\r\n  removeBudgetAction,\r\n} from '../../../../store/budgets/actions';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { removeTransactionsByBudgetIdAction } from '../../../../store/transactions/actions';\r\nimport Form from '../../../../components/Form';\r\nimport { RootState } from '../../../../store';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\nimport { Header3 } from '../../../../components/Header';\r\n\r\nconst BudgetModal: FC<BudgetType> = ({ _id, title, amount }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const context = useContext(ModalContext);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleDelete = (): void => {\r\n    context.handleClose();\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/budgets/${_id}`).then(() => {\r\n        dispatch(removeBudgetAction(_id));\r\n\r\n        axios.delete(`${dbUrl}/transactions?budgetId=${_id}`).then(() => {\r\n          dispatch(removeTransactionsByBudgetIdAction(_id));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n      });\r\n    } else {\r\n      dispatch(removeBudgetAction(_id));\r\n      dispatch(removeTransactionsByBudgetIdAction(_id));\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (\r\n    newTitle: string,\r\n    newAmount: number,\r\n    newCurrency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id,\r\n      userId: googleUser?.googleId ? googleUser?.googleId : null,\r\n      title: newTitle,\r\n      amount: {\r\n        actual: newAmount,\r\n        currency: newCurrency,\r\n        diff: 0,\r\n        starting: newAmount,\r\n      },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .patch(`${dbUrl}/budgets/${_id}`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(editBudgetAction(budget.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(editBudgetAction(newBudget));\r\n      dispatch(changeTransactions());\r\n    }\r\n    context.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Top>\r\n        <IconSpan tabIndex={0}>\r\n          <BiEdit />\r\n        </IconSpan>\r\n        <Header3>Edit</Header3>\r\n        <IconSpan\r\n          tabIndex={0}\r\n          style={{ fontSize: '3.5rem', height: '4.5rem' }}\r\n          onClick={handleClose}\r\n          onKeyPress={e => handleEnterPressed(e, handleClose)}\r\n        >\r\n          <BiX />\r\n        </IconSpan>\r\n      </Top>\r\n      <div style={{ marginTop: '3.5rem' }}>\r\n        <Form\r\n          handleSubmit={handleSubmitForm}\r\n          button={false}\r\n          data={{\r\n            title: { value: title, required: true },\r\n            amount: { value: amount.starting.toFixed(2), required: true },\r\n          }}\r\n          style={{ padding: 0 }}\r\n          currency={amount.currency}\r\n        >\r\n          <ButtonsContainer>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"gray-dark\"\r\n              secondary\r\n              style={{ width: '48%' }}\r\n              onClick={handleDelete}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"white\"\r\n              style={{ width: '48%' }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ButtonsContainer>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetModal;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { Container } from './Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport BudgetModal from '../BudgetModal';\r\nimport Modal from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\n\r\nconst Budget: FC<BudgetType> = (budget): JSX.Element => {\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <BudgetInfo {...budget} />\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          onClick={() => setModalOpened(true)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <BudgetModal {...budget} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Budget;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 4rem;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: block;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: flex;\r\n\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  margin: 4rem 0;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80%;\r\n  height: 1px;\r\n  background-color: var(--color-gray-dark);\r\n  opacity: 0.3;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { Container, StyledList } from './Elements';\r\nimport Budget from '../Budget';\r\nimport { RootState } from '../../../../store';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Select } from '../../../Payments/components/TransactionList/Elements';\r\nimport { Label } from '../../../../components/Input';\r\n\r\nconst BudgetList: FC = (): JSX.Element => {\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderBudgets = (): JSX.Element[] => {\r\n    const sortedBudgets = [...budgets];\r\n    sortedBudgets.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare =\r\n            a.amount.actual > b.amount.actual\r\n              ? -1\r\n              : a.amount.actual < b.amount.actual\r\n              ? 1\r\n              : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') sortedBudgets.reverse();\r\n\r\n    return sortedBudgets.map(budget => (\r\n      <CSSTransition timeout={200} classNames=\"slide\" key={budget._id}>\r\n        <li>\r\n          <Budget {...budget} />\r\n        </li>\r\n      </CSSTransition>\r\n    ));\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Label htmlFor=\"sortBy\" style={{ marginTop: '3rem' }}>\r\n        Sort by\r\n      </Label>\r\n      <Select\r\n        id=\"sortBy\"\r\n        onChange={handleSelectSortChange}\r\n        value={selectedSort}\r\n      >\r\n        <option value=\"date\">Newest</option>\r\n        <option value=\"date_r\">Oldest</option>\r\n        <option value=\"title\">A...Z</option>\r\n        <option value=\"title_r\">Z...A</option>\r\n        <option value=\"amount\">Most money</option>\r\n        <option value=\"amount_r\">Least money</option>\r\n      </Select>\r\n      <StyledList>\r\n        <TransitionGroup component={null}>{renderBudgets()}</TransitionGroup>\r\n      </StyledList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BudgetList;\r\n","import { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addBudgetAction } from '../../../../store/budgets/actions';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport Form from '../../../../components/Form';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id: uuidv4(),\r\n      userId: googleUser ? googleUser?.googleId : null,\r\n      title: title,\r\n      amount: { actual: amount, currency, diff: 0, starting: amount },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .post(`${dbUrl}/budgets`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(addBudgetAction(budget.data));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(addBudgetAction(newBudget));\r\n  };\r\n\r\n  return <Form handleSubmit={handleSubmit} pageTitle=\"Budgets\" />;\r\n};\r\n\r\nexport default BudgetForm;\r\n","import { FC } from 'react';\r\n\r\nimport BudgetList from './components/BudgetList';\r\nimport BudgetForm from './components/BudgetForm';\r\n\r\nconst Budgets: FC = (): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <BudgetForm />\r\n      <BudgetList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Budgets;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 14rem;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledP = styled.p<{ checked: boolean }>`\r\n  font-size: 2rem;\r\n  margin-left: 1rem;\r\n  transition: var(--trans-default);\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${props => `var(--color-gray${props.checked ? '-dark)' : ')'}`};\r\n`;\r\n\r\nexport const SmallContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  position: relative;\r\n\r\n  .calendar {\r\n    border-radius: 1.5rem;\r\n    border-color: var(--color-gray);\r\n    top: 4rem;\r\n    position: absolute;\r\n  }\r\n\r\n  button {\r\n    border-radius: 1rem;\r\n  }\r\n`;\r\n\r\nexport const AnimatedSmallContainer = styled(SmallContainer)<{\r\n  animate: boolean;\r\n}>`\r\n  transition: var(--trans-default);\r\n  margin-top: ${props => (props.animate ? '35rem' : '0')};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckBox = styled.div<{ checked: boolean }>`\r\n  width: 2.6rem;\r\n  height: 2.6rem;\r\n  border: 1px solid var(--color-gray-dark);\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    background-color: ${props =>\r\n      `var(--color-${props.checked ? 'gray-dark)' : 'white)'}`};\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n","import React, { FC, useRef, useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport Form from '../../../../components/Form';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport {\r\n  Select,\r\n  Container,\r\n  StyledP,\r\n  SmallContainer,\r\n  AnimatedSmallContainer,\r\n} from './Elements';\r\nimport { Label } from '../../../../components/Input';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { Button } from '../../../../components/Button';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\nimport { CheckBox } from '../../../../components/Checkbox';\r\nimport { Input } from '../../../../components/Input';\r\nimport '../../../../constant/style/animations.css';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\n\r\nconst PaymentForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [repeatTransaction, setRepeatTransaction] = useState({\r\n    repeat: false,\r\n    every: '1',\r\n    type: 'hours',\r\n  });\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [dateCheck, setDateCheck] = useState(false);\r\n  const check = useRef(null);\r\n\r\n  let budgetsLength = useRef(-1);\r\n\r\n  useEffect(() => {\r\n    if (budgetsLength.current !== budgets.length) {\r\n      if (budgets[0]) setSelectedBudgetId(budgets[0]._id);\r\n      else setSelectedBudgetId('');\r\n    }\r\n    return () => {\r\n      budgetsLength.current = budgets.length;\r\n    };\r\n  }, [budgets]);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newTransaction: TransactionType = {\r\n      _id: uuidv4(),\r\n      currency,\r\n      budgetId: selectedBudgetId,\r\n      userId: googleUser ? googleUser.googleId : null,\r\n      title,\r\n      amount,\r\n      repeat: {\r\n        ...repeatTransaction,\r\n        every: parseInt(repeatTransaction.every),\r\n      },\r\n      date: dateCheck ? startDate : new Date(),\r\n    };\r\n\r\n    setRepeatTransaction({\r\n      repeat: false,\r\n      every: '1',\r\n      type: 'hours',\r\n    });\r\n\r\n    setDateCheck(false);\r\n    setStartDate(new Date());\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .post(`${dbUrl}/transactions`, {\r\n          ...newTransaction,\r\n        })\r\n        .then(transaction => {\r\n          dispatch(addTransactionAction(transaction.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(addTransactionAction(newTransaction));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => {\r\n      return (\r\n        <option key={budget._id} value={budget._id}>\r\n          {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n          {budget.amount.currency}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const selectedBudget = budgets.filter(\r\n    budget => budget._id === selectedBudgetId\r\n  )[0];\r\n\r\n  const handleCheckboxCheck = (e: React.SyntheticEvent): void => {\r\n    setRepeatTransaction({\r\n      ...repeatTransaction,\r\n      repeat: true,\r\n    });\r\n\r\n    if (e.target === check.current) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        repeat: !repeatTransaction.repeat,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputRepeatChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    if (\r\n      (!isNaN(parseInt(e.target.value)) && parseInt(e.target.value) > 0) ||\r\n      e.target.value === ''\r\n    ) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        every: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelectTypeChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setRepeatTransaction({ ...repeatTransaction, type: e.target.value });\r\n  };\r\n\r\n  const handleDateChange = (date: Date): void => {\r\n    const nowDate = new Date();\r\n\r\n    if (nowDate.getTime() - date.getTime() > 0) setStartDate(date);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      handleSubmit={handleSubmit}\r\n      disabled={!budgets.length}\r\n      button={false}\r\n      currency={selectedBudget && selectedBudget.amount.currency}\r\n      childrenBefore={\r\n        <>\r\n          <Label htmlFor=\"selectBudget\">Select a budget</Label>\r\n          <Select\r\n            id=\"selectBudget\"\r\n            onChange={handleSelectChange}\r\n            value={selectedBudgetId}\r\n          >\r\n            {renderOptions()}\r\n          </Select>\r\n        </>\r\n      }\r\n      pageTitle=\"Payments\"\r\n    >\r\n      <>\r\n        <SmallContainer>\r\n          <CheckBox\r\n            checked={dateCheck}\r\n            onClick={() => setDateCheck(!dateCheck)}\r\n            tabIndex={0}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => setDateCheck(!dateCheck))\r\n            }\r\n          />\r\n          <StyledP checked={dateCheck} onClick={() => setDateCheck(!dateCheck)}>\r\n            Select date\r\n          </StyledP>\r\n\r\n          <CSSTransition\r\n            in={dateCheck}\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            unmountOnExit\r\n          >\r\n            <Calendar\r\n              value={startDate}\r\n              onChange={handleDateChange}\r\n              className=\"calendar\"\r\n            />\r\n          </CSSTransition>\r\n        </SmallContainer>\r\n        <AnimatedSmallContainer\r\n          animate={dateCheck}\r\n          onClick={handleCheckboxCheck}\r\n        >\r\n          <CheckBox\r\n            checked={repeatTransaction.repeat}\r\n            tabIndex={0}\r\n            onKeyPress={e => handleEnterPressed(e, handleCheckboxCheck)}\r\n            ref={check}\r\n          />\r\n          <StyledP checked={repeatTransaction.repeat}>\r\n            Repeat every\r\n            <Input\r\n              style={{\r\n                width: '4rem',\r\n                padding: '.5rem',\r\n                color: !repeatTransaction.repeat ? 'lightgray' : 'black',\r\n              }}\r\n              onChange={handleInputRepeatChange}\r\n              maxLength={3}\r\n              value={repeatTransaction.every}\r\n              disabled={!repeatTransaction.repeat}\r\n            />\r\n            <Select\r\n              style={{\r\n                width: '8rem',\r\n                padding: '.5rem',\r\n              }}\r\n              value={repeatTransaction.type}\r\n              onChange={handleSelectTypeChange}\r\n              disabled={!repeatTransaction.repeat}\r\n            >\r\n              <option value=\"hours\">hours</option>\r\n              <option value=\"days\">days</option>\r\n              <option value=\"month\">month</option>\r\n              <option value=\"year\">year</option>\r\n            </Select>\r\n          </StyledP>\r\n        </AnimatedSmallContainer>\r\n\r\n        {budgets[0] && (\r\n          <Container>\r\n            {selectedBudgetId && <BudgetInfo {...selectedBudget} />}\r\n          </Container>\r\n        )}\r\n        <Button\r\n          color=\"green\"\r\n          textColor=\"white\"\r\n          style={{ marginTop: '3rem', opacity: !budgets[0] ? 0.6 : 1 }}\r\n          onClick={e => !budgets[0] && e.preventDefault()}\r\n        >\r\n          {!budgets[0] ? 'Add a budget' : 'Add'}\r\n        </Button>\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { RootState } from '../../../../store';\r\nimport Transaction from '../Transaction';\r\nimport { Flex, Line, List, Select } from './Elements';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Label } from '../../../../components/Input';\r\nimport { Container } from './Elements';\r\nimport { NoMessage } from '../../../../components/Header';\r\n\r\nconst TransactionList: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderTransactions = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = selectedBudgetId\r\n      ? transactions.filter(\r\n          transaction =>\r\n            transaction.budgetId === selectedBudgetId &&\r\n            !transaction.repeat.repeat\r\n        )\r\n      : transactions.filter(transaction => !transaction.repeat.repeat);\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    selectedTransactions.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare = a.amount > b.amount ? -1 : a.amount < b.amount ? 1 : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') selectedTransactions.reverse();\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTransactionsRepeat = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = transactions.filter(\r\n      transaction => transaction.repeat.repeat\r\n    );\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => (\r\n      <option key={budget._id} value={budget._id}>\r\n        {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n        {budget.amount.currency}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const handleSelectFilterChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      <Container>\r\n        <Label>Repeated transactions</Label>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactionsRepeat()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n      <Line></Line>\r\n      <Container>\r\n        <Label htmlFor=\"selectbg\">Filter transactions</Label>\r\n        <Select\r\n          id=\"selectbg\"\r\n          onChange={handleSelectFilterChange}\r\n          value={selectedBudgetId}\r\n        >\r\n          <option value=\"\">All</option>\r\n          {renderOptions()}\r\n        </Select>\r\n        <Label htmlFor=\"sort\" style={{ marginTop: '3rem' }}>\r\n          Sort by\r\n        </Label>\r\n        <Select\r\n          id=\"sort\"\r\n          onChange={handleSelectSortChange}\r\n          value={selectedSort}\r\n        >\r\n          <option value=\"date\">Newest</option>\r\n          <option value=\"date_r\">Oldest</option>\r\n          <option value=\"title\">A...Z</option>\r\n          <option value=\"title_r\">Z...A</option>\r\n          <option value=\"amount\">Most money</option>\r\n          <option value=\"amount_r\">Least money</option>\r\n        </Select>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactions()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import { FC } from 'react';\r\n\r\nimport PaymentForm from './components/PaymentForm';\r\nimport TransactionList from './components/TransactionList';\r\n\r\nconst Payments: FC = () => {\r\n  return (\r\n    <div>\r\n      <PaymentForm />\r\n      <TransactionList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import { FC } from 'react';\r\n\r\nconst Statistics: FC = () => {\r\n  return <h2>Coming soon</h2>;\r\n};\r\n\r\nexport default Statistics;\r\n","import axios from 'axios';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dbUrl } from '../../constant/routes';\r\n\r\nimport { RootState } from '../../store';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../store/loader';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { Header2 } from '../Header';\r\n\r\nconst AllMoney: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n  const googleId = useSelector(\r\n    (state: RootState) => state.googleUser?.googleId\r\n  );\r\n\r\n  let money = 0;\r\n  budgets.forEach(\r\n    budget =>\r\n      (money +=\r\n        budget.amount.actual / currency.currencies[budget.amount.currency])\r\n  );\r\n\r\n  money =\r\n    (money / currency.currencies['USD']) * currency.currencies[primaryCurrency];\r\n\r\n  const handleCurrencyChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    if (googleId) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .patch(`${dbUrl}/users/${googleId}`, {\r\n          currency: e.target.value,\r\n        })\r\n        .then(() => {\r\n          dispatch(setPrimaryCurrency(e.target.value));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(setPrimaryCurrency(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header2 $color={getMoneyColor(money)}>\r\n      {money.toFixed(2)}{' '}\r\n      <CurrencySelector\r\n        color={getMoneyColor(money)}\r\n        onChangeAction={handleCurrencyChange}\r\n      />\r\n    </Header2>\r\n  );\r\n};\r\n\r\nexport default AllMoney;\r\n","import { FC } from 'react';\r\n\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport Overview from '../pages/Overview';\r\nimport Budgets from '../pages/Budgets';\r\nimport Payments from '../pages/Payments';\r\nimport Statistics from '../pages/Statistics';\r\n\r\nimport '../constant/style/animations.css';\r\nimport AllMoney from './AllMoney';\r\n\r\nconst AnimatedRouter: FC = (): JSX.Element => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <AllMoney />\r\n      <div style={{ position: 'relative' }}>\r\n        <TransitionGroup component={null}>\r\n          <CSSTransition\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            key={location.pathname}\r\n          >\r\n            <Switch location={location}>\r\n              <Route exact path=\"/overview\">\r\n                <Overview />\r\n              </Route>\r\n              <Route exact path=\"/budgets\">\r\n                <Budgets />\r\n              </Route>\r\n              <Route exact path=\"/payments\">\r\n                <Payments />\r\n              </Route>\r\n              <Route exact path=\"/statistics\">\r\n                <Statistics />\r\n              </Route>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedRouter;\r\n","import axios from 'axios';\r\nimport { CurrencyType } from '../store/currency/types';\r\n\r\nexport const currencyExchangeAPI = async (\r\n  currencyFromState: CurrencyType\r\n): Promise<CurrencyType> => {\r\n  const date = new Date();\r\n  const lastFetchedDate = new Date(currencyFromState.dateFetched);\r\n\r\n  const dayInMiliseconds = 1000 * 60 * 60 * 24;\r\n  const daysBetweenDates = Math.floor(\r\n    (date.getTime() - lastFetchedDate.getTime()) / dayInMiliseconds\r\n  );\r\n\r\n  if (daysBetweenDates >= 7) {\r\n    interface rate {\r\n      [key: string]: number;\r\n    }\r\n\r\n    interface dataFetchedType {\r\n      rates: rate;\r\n      source: string;\r\n      date: string;\r\n      timestamp: number;\r\n    }\r\n\r\n    const currencies: dataFetchedType = await (\r\n      await axios.get(\r\n        'https://v1.nocodeapi.com/kriziuu/cx/FPLWrEBmjQDFHLdf/rates'\r\n      )\r\n    ).data;\r\n\r\n    let rates: rate = {};\r\n    for (const [key, value] of Object.entries(currencies.rates)) {\r\n      const rate: rate = { [key]: value };\r\n      rates = { ...rates, ...rate };\r\n    }\r\n\r\n    const currency: CurrencyType = {\r\n      dateFetched: date,\r\n      source: currencies.source,\r\n      currencies: rates,\r\n      primaryCurrency: currencyFromState.primaryCurrency,\r\n    };\r\n\r\n    return currency;\r\n  } else return currencyFromState;\r\n};\r\n","import axios from 'axios';\r\nimport { GoogleLoginResponse } from 'react-google-login';\r\nimport { dbUrl } from '../constant/routes';\r\nimport { BudgetType } from '../store/budgets/types';\r\nimport { TransactionType } from '../store/transactions/types';\r\n\r\ninterface ReturnResponseType {\r\n  budgets: BudgetType[];\r\n  transactions: TransactionType[];\r\n  userCurrency: string;\r\n}\r\n\r\nexport const dbAPI = async (\r\n  googleUser: GoogleLoginResponse['profileObj'],\r\n  setLoading: () => void,\r\n  unsetLoading: () => void\r\n): Promise<ReturnResponseType> => {\r\n  setLoading();\r\n\r\n  let budgets: BudgetType[] = await (\r\n    await axios.get(`${dbUrl}/budgets`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let transactions: TransactionType[] = await (\r\n    await axios.get(`${dbUrl}/transactions`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let userCurrency: string = '';\r\n\r\n  await axios\r\n    .get(`${dbUrl}/users/${googleUser?.googleId}`)\r\n    .then(res => {\r\n      userCurrency = res.data.currency;\r\n    })\r\n    .catch(() => {\r\n      axios.post(`${dbUrl}/users`, {\r\n        _id: googleUser?.googleId,\r\n        currency: 'USD',\r\n      });\r\n    });\r\n\r\n  budgets = budgets.map(budget => {\r\n    budget.date = new Date(budget.date);\r\n    return budget;\r\n  });\r\n\r\n  transactions.map(transaction => {\r\n    transaction.date = new Date(transaction.date);\r\n    return transaction;\r\n  });\r\n\r\n  unsetLoading();\r\n  return { budgets, transactions, userCurrency };\r\n};\r\n","import { FC, useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport GlobalStyle from './GlobalStyles';\r\nimport NavBar from './NavBar';\r\nimport { breakpoints } from '../constant/style/breakpoints';\r\nimport AnimatedRouter from './AnimatedRouter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n  removeAllBudgetsAction,\r\n} from '../store/budgets/actions';\r\nimport { RootState } from '../store';\r\nimport {\r\n  addTransactionAction,\r\n  removeAllTransactionsAction,\r\n} from '../store/transactions/actions';\r\nimport { setPrimaryCurrency, updateCurrency } from '../store/currency/actions';\r\nimport { currencyExchangeAPI } from '../api/currencyExchange';\r\nimport { dbAPI } from '../api/db';\r\nimport Modal from './Modal';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport { setLoaderAction, unsetLoaderAction } from '../store/loader';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 75vw;\r\n  }\r\n`;\r\n\r\nconst App: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const currencyFromState = useSelector((state: RootState) => state.currency);\r\n  const firstRender = useRef(true);\r\n  const loader = useSelector((state: RootState) => state.loader);\r\n\r\n  const setLoader = useCallback(() => dispatch(setLoaderAction()), [dispatch]);\r\n  const unsetLoader = useCallback(\r\n    () => dispatch(unsetLoaderAction()),\r\n    [dispatch]\r\n  );\r\n\r\n  // DATABASE\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n      dispatch(removeAllTransactionsAction());\r\n      dispatch(removeAllBudgetsAction());\r\n      dispatch(changeTransactions());\r\n    }\r\n\r\n    if (googleUser) {\r\n      dbAPI(googleUser, setLoader, unsetLoader).then(response => {\r\n        response.budgets.forEach(budget => {\r\n          dispatch(addBudgetAction(budget));\r\n        });\r\n        response.transactions.forEach(transaction => {\r\n          dispatch(addTransactionAction(transaction));\r\n        });\r\n\r\n        dispatch(setPrimaryCurrency(response.userCurrency));\r\n\r\n        dispatch(changeTransactions());\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      firstRender.current = false;\r\n    };\r\n  }, [googleUser, dispatch, setLoader, unsetLoader]);\r\n\r\n  // CURRENCY\r\n  useEffect(() => {\r\n    currencyExchangeAPI(currencyFromState).then(currency => {\r\n      dispatch(updateCurrency(currency));\r\n    });\r\n  }, [currencyFromState, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Container>\r\n        <Router>\r\n          <NavBar />\r\n          <main style={{ position: 'relative' }}>\r\n            <AnimatedRouter />\r\n          </main>\r\n        </Router>\r\n      </Container>\r\n      {loader && (\r\n        <Modal closeModal={() => {}} container={false} closable={false}>\r\n          <ClipLoader size=\"8rem\" color=\"silver\" />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n"],"sourceRoot":""}