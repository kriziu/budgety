{"version":3,"sources":["store/googleUser/constants.ts","components/GlobalStyles.ts","constant/style/breakpoints.ts","components/Button/index.ts","components/NavBar/Elements.ts","constant/routes.ts","store/googleUser/actions.ts","store/budgets/constants.ts","store/localstorage.ts","store/budgets/reducer.ts","store/currency/constants.ts","store/currency/reducer.ts","store/loader.ts","store/transactions/constants.ts","store/transactions/reducer.ts","store/index.ts","store/googleUser/reducer.ts","store/budgets/actions.ts","utils/utility.ts","store/transactions/actions.ts","store/currency/actions.ts","components/NavBar/index.tsx","components/Form/Elements.ts","utils/ux.ts","components/Modal/Elements.ts","components/Modal/index.tsx","components/ModalConfirm/Elements.ts","components/ModalConfirm/index.tsx","pages/Payments/components/Transaction/Elements.ts","pages/Payments/components/Transaction/index.tsx","pages/Payments/components/TransactionList/Elements.ts","pages/Overview/components/MoneyLastMonth/Elements.ts","pages/Overview/components/FrequentTransactionsList/Elements.ts","pages/Overview/components/FrequentTransactionsList/index.tsx","pages/Overview/components/MoneyLastMonth/index.tsx","components/BudgetInfo/Elements.ts","components/BudgetInfo/index.tsx","pages/Overview/components/MostValuableBudget/Elements.ts","pages/Overview/components/MostValuableBudget/index.tsx","pages/Overview/index.tsx","pages/Budgets/components/BudgetList/Elements.ts","pages/Budgets/components/Budget/Elements.ts","pages/Budgets/components/BudgetModal/Elements.ts","hooks/useForm.ts","components/Input/index.ts","components/CurrencySelector/Elements.ts","components/CurrencySelector/index.tsx","components/Form/index.tsx","pages/Budgets/components/BudgetModal/index.tsx","pages/Budgets/components/Budget/index.tsx","pages/Budgets/components/BudgetList/index.tsx","pages/Budgets/components/BudgetForm/index.tsx","pages/Budgets/index.tsx","pages/Payments/components/PaymentForm/Elements.ts","components/Checkbox/index.ts","pages/Payments/components/PaymentForm/index.tsx","pages/Payments/components/TransactionList/index.tsx","pages/Payments/index.tsx","pages/Statistics/index.tsx","components/AllMoney/Elements.ts","components/AllMoney/index.tsx","components/AnimatedRouter.tsx","api/currencyExchange.ts","api/db.ts","components/App.tsx","index.tsx"],"names":["Constants","GlobalStyle","createGlobalStyle","breakpoints","Button","styled","button","props","secondary","color","textColor","Navigation","nav","Header","div","ToggleNavButton","NavIcon","opened","focused","MobileLinksContainer","DesktopLinksContainer","ul","StyledLink","Link","$isactive","Avatar","url","GoogleButton","routes","dbUrl","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","setLoaderAction","action","SET_LOADING","unsetLoaderAction","UNSET_LOADING","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","store","createStore","combineReducers","budgets","state","type","ADD_BUDGET","payload","budget","REMOVE_BUDGET","filter","_id","budgetId","EDIT_BUDGET","map","CHANGE_TRANSACTIONS","amount","actual","starting","currency","transactions","forEach","transaction","money","currencies","repeat","hour","every","nowDate","Date","getTime","transactionDate","date","multiplier","Math","floor","REMOVE_BUDGET_ALL","ADD_TRANSACTION","REMOVE_TRANSACTION","transactionId","REMOVE_TRANSACTIONS_BUDGET","EDIT_TRANSACTION","REMOVE_TRANSACTION_ALL","googleUser","LOGIN","userInfo","LOGOUT","dateFetched","source","primaryCurrency","UPDATE_CURRENCY","SET_PRIMARY_CURRENCY","currencyString","loader","subscribe","getState","userId","stringify","setItem","saveState","addBudgetAction","removeBudgetAction","editBudgetAction","changeTransactions","prototype","getFancyDate","day","this","getDate","toString","month","getMonth","parseInt","getFullYear","getFancyHours","hours","getHours","minutes","getMinutes","handleEnterPressed","e","key","timeout","ms","Promise","resolve","setTimeout","addTransactionAction","removeTransactionAction","removeTransactionsByBudgetIdAction","setPrimaryCurrency","NavBar","useState","setOpened","btnFocused","setBtnFocued","btnRef","useRef","dispatch","useDispatch","useSelector","location","useLocation","toggleNavMenu","target","current","scrollTo","renderLinks","focusableByDefault","route","i","isActive","pathname","tabIndex","onClick","preventDefault","to","handleResponseGoogle","response","profileObj","handleLogout","a","style","marginRight","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","render","renderProps","disabled","imageUrl","onLogoutSuccess","aria-label","onFocus","onBlur","ref","StyledForm","form","Label","label","Container","Warning","p","MinPlus","MinPlusIcon","minus","h1","getMoneyColor","Background","animating","Center","modalRoot","document","getElementById","ModalContext","createContext","handleClose","Modal","children","closeModal","closable","container","setAnimating","bgRef","useEffect","ReactDOM","createPortal","handleBgClick","Provider","value","ButtonsContainer","ModalConfirm","handleAction","context","useContext","width","Money","Title","MediumTitle","h2","SmallTitle","DateHeader","h3","DeleteBtn","CloseIcon","BiX","DeleteText","Transaction","title","deletable","modalOpened","setModalOpened","setBudget","dateN","selectedBudget","flex","display","flexDirection","alignItems","axios","delete","then","List","Select","select","Flex","NoMessage","Line","SmContainer","BigHeader","Dash","span","FrequentTransactionsList","history","useHistory","sort","b","slice","push","onKeyPress","length","marginTop","MoneyLastMonth","income","spent","total","moneyLastMonth","setMoneyLastMonth","toFixed","TitleHeader","MoneyHeader","DiffSpan","SmallMoneyHeader","DiffIcon","BudgetInfo","diff","BudgetContainer","MostValuableBudget","Overview","StyledList","Top","IconSpan","useForm","initialState","newState","Object","entries","checked","formData","setFormData","name","bool","required","Input","input","CurrencySelector","onChangeAction","currentCurrency","setCurrentCurrency","onChange","Form","handleSubmit","childrenBefore","data","pageTitle","toggleChecked","handleInputChange","formCurrency","setFormCurrency","setMinus","clicked","parseFloat","onSubmit","amountCheck","titleCheck","amountNum","noValidate","autoComplete","htmlFor","id","placeholder","position","padding","fontSize","right","BudgetModal","height","newTitle","newAmount","newCurrency","newBudget","googleId","patch","Budget","BudgetList","selectedSort","setSelectedSort","TransitionGroup","component","sortedBudgets","compare","split","localeCompare","reverse","CSSTransition","classNames","renderBudgets","BudgetForm","uuidv4","post","Budgets","StyledP","SmallContainer","AnimatedSmallContainer","animate","CheckBox","PaymentForm","selectedBudgetId","setSelectedBudgetId","repeatTransaction","setRepeatTransaction","startDate","setStartDate","dateCheck","setDateCheck","check","budgetsLength","handleCheckboxCheck","newTransaction","in","unmountOnExit","className","isNaN","maxLength","opacity","TransactionList","selectedTransactions","renderTransactionsRepeat","renderTransactions","Payments","Statistics","AllMoney","AnimatedRouter","exact","path","currencyExchangeAPI","currencyFromState","lastFetchedDate","get","rates","rate","dbAPI","setLoading","unsetLoading","params","userCurrency","res","catch","App","firstRender","setLoader","useCallback","unsetLoader","updateCurrency","size"],"mappings":"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","file":"static/js/main.7e955620.chunk.js","sourcesContent":["export enum Constants {\r\n  LOGIN = 'LOGIN',\r\n  LOGOUT = 'LOGOUT',\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-family: Roboto;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--color-black)\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n\r\n  :root {\r\n    // COLORS\r\n    --color-red: #E53E3E;\r\n    --color-gray: #CBD5E0;\r\n    --color-gray-dark: #1A202C;\r\n    --color-green: #48BB78;\r\n    --color-black: #222;\r\n    --color-white: #fff;\r\n    --color-blue-light: #90CDF4;\r\n\r\n    // TRANSITIONS\r\n    --trans-default: all .2s ease;\r\n    \r\n    // SHADOWS\r\n    --shadow-default: 0px 5px 30px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const breakpoints = {\r\n  mobile: '36rem', // 576px\r\n  tablet: '48rem', // 768px\r\n  laptop: '62rem', // 992px\r\n  desktop: '75rem', // 1200px\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  color: string;\r\n  textColor: string;\r\n  secondary?: boolean;\r\n}\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  border-radius: 1rem;\r\n  border: ${props =>\r\n    props.secondary ? `2px solid var(--color-${props.color})` : 'none'};\r\n  width: 100%;\r\n  font-size: 1.8rem;\r\n  padding: 1.1rem;\r\n  color: ${props => `var(--color-${props.textColor})`};\r\n  background-color: ${props =>\r\n    props.secondary ? 'var(--color-white)' : `var(--color-${props.color})`};\r\n  font-family: inherit;\r\n  transition: var(--trans-default);\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n    transform: translateY(-5%);\r\n    cursor: pointer;\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.3);\r\n    ${props =>\r\n      props.secondary &&\r\n      `background-color: var(--color-${props.color}); color: var(--color-white)`};\r\n  }\r\n\r\n  :active {\r\n    transform: translateY(2%);\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\nimport { Button } from '../Button';\r\n\r\ninterface NavProps {\r\n  opened?: boolean;\r\n  focused?: boolean;\r\n}\r\n\r\nexport const Navigation = styled.nav`\r\n  color: #111;\r\n  letter-spacing: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 3.5rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    font-weight: 400;\r\n    font-size: 3rem;\r\n    margin-right: 2rem;\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ToggleNavButton = styled.button`\r\n  width: 4.5rem;\r\n  height: 4.5rem;\r\n  border-radius: 35%;\r\n  background-color: #111;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 11;\r\n  position: fixed;\r\n  right: 3.5rem;\r\n  transition: var(--trans-default);\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavIcon = styled.div<NavProps>`\r\n  pointer-events: none;\r\n  width: 2.2rem;\r\n  height: 3px;\r\n  background-color: #fff;\r\n\r\n  transform: ${props =>\r\n    props.opened ? 'rotate(225deg) scale(1.3)' : 'rotate(0) scale(1)'};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.opened\r\n        ? `rotate(90deg) translateY(0)`\r\n        : `rotate(0) translateY(${props.focused ? '250%' : '125%'})`};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.focused ? 'translateY(-350%)' : 'translateY(-225%)'};\r\n\r\n    display: ${props => (props.opened ? 'none' : 'block')};\r\n  }\r\n`;\r\n\r\nexport const MobileLinksContainer = styled.div<NavProps>`\r\n  background-color: #111;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  transition: var(--trans-default);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  transform: ${props => (props.opened ? 'translateX(0)' : 'translateX(-100%)')};\r\n\r\n  ul {\r\n    transition: var(--trans-default);\r\n    transition-delay: 0.1s;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n    margin-bottom: 25%;\r\n\r\n    transform: ${props =>\r\n      props.opened ? 'translateX(0)' : 'translateX(-100%)'};\r\n\r\n    li {\r\n      :not(:last-child) {\r\n        margin-bottom: 4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopLinksContainer = styled.ul`\r\n  width: 47rem;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n    :not(:last-child) {\r\n    }\r\n  }\r\n\r\n  display: none;\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)<{ $isactive: boolean }>`\r\n  font-size: 2.5rem;\r\n  text-decoration: none;\r\n  text-transform: capitalize;\r\n  ${props => props.$isactive && 'text-decoration: underline; cursor: default;'}\r\n\r\n  color: #fff;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    color: #222;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\ntype url = { url: string };\r\n\r\nexport const Avatar = styled.div<url>`\r\n  border-radius: 50%;\r\n  background-image: ${props => `url('${props.url}')`};\r\n  background-size: cover;\r\n  padding: 2rem;\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nexport const GoogleButton = styled(Button)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0.9rem;\r\n\r\n  svg {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n","export const routes = ['overview', 'budgets', 'payments', 'statistics'];\r\n\r\nexport const dbUrl = 'https://budgety-server.herokuapp.com';\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { action } from 'typesafe-actions';\r\nimport { Constants } from './constants';\r\n\r\nexport const loginAction = (userInfo: GoogleLoginResponse['profileObj']) => {\r\n  return action(Constants.LOGIN, { userInfo });\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  return action(Constants.LOGOUT);\r\n};\r\n","export enum Constants {\r\n  ADD_BUDGET = 'ADD_BUDGET',\r\n  REMOVE_BUDGET = 'REMOVE_BUDGET',\r\n  EDIT_BUDGET = 'EDIT_BUDGET',\r\n  CHANGE_TRANSACTIONS = 'CHANGE_TRANSACTIONS',\r\n  REMOVE_BUDGET_ALL = 'REMOVE_BUDGET_ALL',\r\n}\r\n","import { RootState } from '.';\r\n\r\nexport const loadState = (): RootState | undefined => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    const state: RootState = JSON.parse(serializedState);\r\n    return state;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: RootState): void => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","import { Constants } from './constants';\r\nimport { BudgetsActions, BudgetsState } from './types';\r\n\r\nexport const budgetsReducer = (\r\n  state: BudgetsState = [],\r\n  action: BudgetsActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_BUDGET:\r\n      return [...state, action.payload.budget];\r\n\r\n    case Constants.REMOVE_BUDGET:\r\n      newState = state.filter(budget => budget._id !== action.payload.budgetId);\r\n      return newState;\r\n\r\n    case Constants.EDIT_BUDGET:\r\n      newState = state.map(budget => {\r\n        if (budget._id === action.payload.budget._id) {\r\n          return action.payload.budget;\r\n        }\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.CHANGE_TRANSACTIONS:\r\n      newState = state.map(budget => {\r\n        budget.amount.actual = budget.amount.starting;\r\n        const currency = action.payload.currency;\r\n\r\n        action.payload.transactions.forEach(transaction => {\r\n          let money =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[budget.amount.currency];\r\n\r\n          if (transaction.repeat.repeat) {\r\n            const hour = 1000 * 60 * 60 * transaction.repeat.every;\r\n            const nowDate = new Date().getTime();\r\n            const transactionDate = new Date(transaction.date).getTime();\r\n            let multiplier = 1;\r\n\r\n            switch (transaction.repeat.type) {\r\n              case 'hours':\r\n                multiplier = Math.floor((nowDate - transactionDate) / hour);\r\n                break;\r\n              case 'days':\r\n                multiplier = Math.floor(\r\n                  (nowDate - transactionDate) / (hour * 24)\r\n                );\r\n                break;\r\n              case 'month':\r\n                multiplier = Math.floor(\r\n                  (nowDate - transactionDate) / (hour * 24 * 31)\r\n                );\r\n                break;\r\n              case 'year':\r\n                multiplier = Math.floor(\r\n                  (nowDate - transactionDate) / (hour * 24 * 365)\r\n                );\r\n                break;\r\n              default:\r\n                multiplier = 1;\r\n            }\r\n\r\n            money = money + money * multiplier;\r\n          }\r\n\r\n          if (transaction.budgetId === budget._id) {\r\n            budget = {\r\n              ...budget,\r\n              amount: {\r\n                ...budget.amount,\r\n                actual: budget.amount.actual + money,\r\n              },\r\n            };\r\n          }\r\n        });\r\n\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_BUDGET_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  UPDATE_CURRENCY = 'UPDATE_CURRENCY',\r\n  SET_PRIMARY_CURRENCY = 'SET_PRIMARY_CURRENCY',\r\n}\r\n","import { Constants } from './constants';\r\nimport { CurrencyActions, CurrencyType } from './types';\r\n\r\nexport const currencyReducer = (\r\n  state: CurrencyType = {\r\n    dateFetched: new Date(0),\r\n    source: 'USD',\r\n    currencies: {},\r\n    primaryCurrency: 'USD',\r\n  },\r\n  action: CurrencyActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_CURRENCY:\r\n      return action.payload.currency;\r\n\r\n    case Constants.SET_PRIMARY_CURRENCY:\r\n      return { ...state, primaryCurrency: action.payload.currencyString };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionType } from 'typesafe-actions';\r\nimport { action } from 'typesafe-actions';\r\n\r\nexport enum Constants {\r\n  SET_LOADING = 'SET_LOADING',\r\n  UNSET_LOADING = 'UNSET_LOADING',\r\n}\r\n\r\nexport const setLoaderAction = () => {\r\n  return action(Constants.SET_LOADING);\r\n};\r\n\r\nexport const unsetLoaderAction = () => {\r\n  return action(Constants.UNSET_LOADING);\r\n};\r\n\r\nconst actions = {\r\n  setLoaderAction,\r\n  unsetLoaderAction,\r\n};\r\n\r\nexport type LoaderActions = ActionType<typeof actions>;\r\n\r\nexport const loaderReducer = (\r\n  state: boolean = false,\r\n  action: LoaderActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.SET_LOADING:\r\n      return true;\r\n\r\n    case Constants.UNSET_LOADING:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  ADD_TRANSACTION = 'ADD_TRANSACTION',\r\n  REMOVE_TRANSACTION = 'REMOVE_TRANSACTION',\r\n  REMOVE_TRANSACTIONS_BUDGET = 'REMOVE_TRANSACTIONS_BUDGET',\r\n  EDIT_TRANSACTION = 'EDIT_TRANSACTION',\r\n  REMOVE_TRANSACTION_ALL = 'REMOVE_TRANSACTION_ALL',\r\n}\r\n","import { Constants } from './constants';\r\nimport { TransactionActions, TransactionState } from './types';\r\n\r\nexport const transactionReducer = (\r\n  state: TransactionState = [],\r\n  action: TransactionActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_TRANSACTION:\r\n      return [...state, action.payload.transaction];\r\n\r\n    case Constants.REMOVE_TRANSACTION:\r\n      newState = state.filter(\r\n        transaction => transaction._id !== action.payload.transactionId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTIONS_BUDGET:\r\n      newState = state.filter(\r\n        transaction => transaction.budgetId !== action.payload.budgetId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.EDIT_TRANSACTION:\r\n      newState = state.map(transaction => {\r\n        if (transaction._id === action.payload.transaction._id) {\r\n          return action.payload.transaction;\r\n        }\r\n        return transaction;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTION_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { combineReducers, createStore, compose } from 'redux';\r\n\r\nimport { budgetsReducer } from './budgets/reducer';\r\nimport { BudgetsState } from './budgets/types';\r\nimport { currencyReducer } from './currency/reducer';\r\nimport { CurrencyType } from './currency/types';\r\nimport { googleUserReducer } from './googleUser/reducer';\r\nimport { loaderReducer } from './loader';\r\nimport { loadState, saveState } from './localstorage';\r\nimport { transactionReducer } from './transactions/reducer';\r\nimport { TransactionState } from './transactions/types';\r\n\r\nexport interface RootState {\r\n  budgets: BudgetsState;\r\n  transactions: TransactionState;\r\n  googleUser: GoogleLoginResponse['profileObj'] | null;\r\n  currency: CurrencyType;\r\n  loader: boolean;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  combineReducers<RootState>({\r\n    budgets: budgetsReducer,\r\n    transactions: transactionReducer,\r\n    googleUser: googleUserReducer,\r\n    currency: currencyReducer,\r\n    loader: loaderReducer,\r\n  }),\r\n  persistedState,\r\n  composeEnhancers()\r\n);\r\n\r\nstore.subscribe((): void => {\r\n  const state = store.getState();\r\n  // const persState = loadState() as RootState;\r\n\r\n  const budgets = state.budgets.filter(budget => budget.userId === null);\r\n  const transactions = state.transactions.filter(\r\n    transaction => transaction.userId === null\r\n  );\r\n  const currency = state.currency;\r\n  const loader = state.loader;\r\n\r\n  if (state.googleUser === null)\r\n    saveState({ budgets, transactions, currency, loader, googleUser: null });\r\n});\r\n\r\nexport default store;\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { Constants } from './constants';\r\nimport { GoogleUserActions } from './types';\r\n\r\nexport const googleUserReducer = (\r\n  state: GoogleLoginResponse['profileObj'] | null = null,\r\n  action: GoogleUserActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.LOGIN:\r\n      return { ...action.payload.userInfo };\r\n\r\n    case Constants.LOGOUT:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport store from '..';\r\nimport { BudgetType } from './types';\r\nimport { TransactionType } from '../transactions/types';\r\nimport { Constants } from './constants';\r\nimport { CurrencyType } from '../currency/types';\r\n\r\nexport const addBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.ADD_BUDGET, { budget });\r\n};\r\n\r\nexport const removeBudgetAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.EDIT_BUDGET, { budget });\r\n};\r\n\r\nexport const changeTransactions = () => {\r\n  const transactions: TransactionType[] = store.getState().transactions;\r\n  const currency: CurrencyType = store.getState().currency;\r\n  return action(Constants.CHANGE_TRANSACTIONS, { transactions, currency });\r\n};\r\n\r\nexport const removeAllBudgetsAction = () => {\r\n  return action(Constants.REMOVE_BUDGET_ALL);\r\n};\r\n","import React from 'react';\r\n\r\n// PROTOTYPES\r\ndeclare global {\r\n  interface Date {\r\n    getFancyDate(): string;\r\n    getFancyHours(): string;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyDate = function (): string {\r\n  let day = this.getDate().toString();\r\n  let month = (this.getMonth() + 1).toString();\r\n\r\n  if (parseInt(day) < 10) day = `0${day}`;\r\n  if (parseInt(month) < 10) month = `0${month}`;\r\n\r\n  return `${day}/${month}/${this.getFullYear()}`;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyHours = function (): string {\r\n  let hours = this.getHours().toString();\r\n  let minutes = this.getMinutes().toString();\r\n\r\n  if (parseInt(minutes) < 10) minutes = `0${minutes}`;\r\n  if (parseInt(hours) < 10) hours = `0${hours}`;\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const handleEnterPressed = (\r\n  e: React.KeyboardEvent,\r\n  action: (e: React.SyntheticEvent) => void\r\n): void => {\r\n  if (e.key === 'Enter') action(e);\r\n};\r\n\r\nexport const timeout = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { TransactionType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const addTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.ADD_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeTransactionAction = (transactionId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTION, { transactionId });\r\n};\r\n\r\nexport const removeTransactionsByBudgetIdAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTIONS_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.EDIT_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeAllTransactionsAction = () => {\r\n  return action(Constants.REMOVE_TRANSACTION_ALL);\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { CurrencyType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const updateCurrency = (currency: CurrencyType) => {\r\n  return action(Constants.UPDATE_CURRENCY, { currency });\r\n};\r\n\r\nexport const setPrimaryCurrency = (currencyString: string) => {\r\n  return action(Constants.SET_PRIMARY_CURRENCY, { currencyString });\r\n};\r\n","import React, { FC, useState, useRef } from 'react';\r\n\r\nimport GoogleLogin, {\r\n  GoogleLoginResponse,\r\n  GoogleLoginResponseOffline,\r\n  GoogleLogout,\r\n} from 'react-google-login';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  Navigation,\r\n  Header,\r\n  ToggleNavButton,\r\n  NavIcon,\r\n  MobileLinksContainer,\r\n  StyledLink,\r\n  DesktopLinksContainer,\r\n  Avatar,\r\n  GoogleButton,\r\n} from './Elements';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport { routes } from '../../constant/routes';\r\nimport { loginAction, logoutAction } from '../../store/googleUser/actions';\r\nimport { RootState } from '../../store';\r\nimport { loadState } from '../../store/localstorage';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n} from '../../store/budgets/actions';\r\nimport { timeout } from '../../utils/utility';\r\nimport { addTransactionAction } from '../../store/transactions/actions';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst NavBar: FC = (): JSX.Element => {\r\n  const [opened, setOpened] = useState(false);\r\n  const [btnFocused, setBtnFocued] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const location = useLocation();\r\n\r\n  const toggleNavMenu = (e: React.MouseEvent) => {\r\n    setOpened(!opened);\r\n    if (!(e.target === btnRef.current)) window.scrollTo(0, 0);\r\n  };\r\n\r\n  const renderLinks = (\r\n    routes: string[],\r\n    focusableByDefault = true\r\n  ): JSX.Element[] => {\r\n    return routes.map((route, i) => {\r\n      const isActive = `/${route}` === location.pathname ? true : false;\r\n\r\n      return (\r\n        <li key={i}>\r\n          <StyledLink\r\n            tabIndex={focusableByDefault ? 0 : opened ? 0 : -1}\r\n            onClick={e => (!isActive ? toggleNavMenu(e) : e.preventDefault())}\r\n            to={route}\r\n            $isactive={isActive}\r\n          >\r\n            {route}\r\n          </StyledLink>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleResponseGoogle = (\r\n    response: GoogleLoginResponse | GoogleLoginResponseOffline\r\n  ) => {\r\n    if ((response as GoogleLoginResponse).profileObj) {\r\n      dispatch(loginAction((response as GoogleLoginResponse).profileObj));\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    const state = loadState();\r\n    dispatch(logoutAction());\r\n\r\n    if (state) {\r\n      await timeout(100);\r\n      state.budgets.forEach(budget => dispatch(addBudgetAction(budget)));\r\n      state.transactions.forEach(transaction =>\r\n        dispatch(addTransactionAction(transaction))\r\n      );\r\n\r\n      dispatch(setPrimaryCurrency(state.currency.primaryCurrency));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navigation>\r\n      <Header>\r\n        <h1 style={{ marginRight: '1rem' }}>Budgety</h1>\r\n        {googleUser === null ? (\r\n          <GoogleLogin\r\n            clientId=\"118372615416-g77a8gaf92slnb4f50jr6o9cmh0f4ho1.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={handleResponseGoogle}\r\n            onFailure={handleResponseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn\r\n            render={renderProps => (\r\n              <GoogleButton\r\n                color=\"red\"\r\n                textColor=\"white\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <FaGoogle />\r\n                Login\r\n              </GoogleButton>\r\n            )}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Avatar url={googleUser.imageUrl} />\r\n            <GoogleLogout\r\n              clientId=\"118372615416-cjlib17tonjdhn4tqtpnetm7mif08ah9.apps.googleusercontent.com\"\r\n              buttonText=\"Logout\"\r\n              onLogoutSuccess={handleLogout}\r\n              render={renderProps => (\r\n                <GoogleButton\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={renderProps.onClick}\r\n                  disabled={renderProps.disabled}\r\n                >\r\n                  <FaGoogle />\r\n                  Logout\r\n                </GoogleButton>\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n      </Header>\r\n      <ToggleNavButton\r\n        aria-label=\"Navigation button\"\r\n        onClick={toggleNavMenu}\r\n        onFocus={() => setBtnFocued(true)}\r\n        onBlur={() => setBtnFocued(false)}\r\n        ref={btnRef}\r\n      >\r\n        <NavIcon opened={opened} focused={btnFocused} />\r\n      </ToggleNavButton>\r\n      <MobileLinksContainer opened={opened}>\r\n        <ul>{renderLinks(routes, false)}</ul>\r\n      </MobileLinksContainer>\r\n      <DesktopLinksContainer>{renderLinks(routes)}</DesktopLinksContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const StyledForm = styled.form`\r\n  margin: 5rem auto;\r\n  padding: 0 4rem;\r\n  margin-top: 0;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 2.5rem;\r\n  display: block;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  :not(:first-child) {\r\n    margin: 4rem 0;\r\n  }\r\n`;\r\n\r\nexport const Warning = styled.p`\r\n  font-size: 1.3rem;\r\n  color: var(--color-red);\r\n  position: absolute;\r\n  margin-top: 0.7rem;\r\n`;\r\n\r\nexport const MinPlus = styled.div`\r\n  padding: 1.83rem 1.5rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  font-size: 1.6rem;\r\n  width: min-content;\r\n  position: absolute;\r\n  background-color: var(--color-white);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MinPlusIcon = styled.div<{ minus: boolean }>`\r\n  pointer-events: none;\r\n  width: 1.3rem;\r\n  height: 2px;\r\n  background-color: ${props =>\r\n    props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n\r\n  transform: ${props => (props.minus ? 'rotate(180deg)' : 'rotate(0)')};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: inherit;\r\n    height: inherit;\r\n    background-color: ${props =>\r\n      props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n    transition: var(--trans-default);\r\n    transform: ${props => (props.minus ? `rotate(270deg)` : `rotate(0)`)};\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-weight: normal;\r\n  text-align: center;\r\n`;\r\n","export const getMoneyColor = (amount: number): 'red' | 'green' | 'black' => {\r\n  if (amount > 0) return 'green';\r\n  else if (amount < 0) return 'red';\r\n  return 'black';\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const Background = styled.div<{ animating: boolean }>`\r\n  position: fixed;\r\n  z-index: 20;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  transition: var(--trans-default);\r\n  opacity: ${props => (props.animating ? '0' : '100%')};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  z-index: 21;\r\n  background-color: var(--color-white);\r\n  width: 75%;\r\n  padding: 2rem 2rem;\r\n  border-radius: 1rem;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 50rem;\r\n  }\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n`;\r\n","import ReactDOM from 'react-dom';\r\nimport { FC, useRef } from 'react';\r\n\r\nimport { Background, Center, Container } from './Elements';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nconst modalRoot = document.getElementById('modal') as HTMLElement;\r\n\r\nexport const ModalContext = createContext({ handleClose: () => {} });\r\n\r\ninterface ModalProps {\r\n  children: JSX.Element;\r\n  closeModal: () => void;\r\n  closable?: boolean;\r\n  container?: boolean;\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({\r\n  children,\r\n  closeModal,\r\n  closable = true,\r\n  container = true,\r\n}): JSX.Element => {\r\n  const [animating, setAnimating] = useState(true);\r\n  const bgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setAnimating(false);\r\n  }, []);\r\n\r\n  const handleClose = (): void => {\r\n    setAnimating(true);\r\n    setTimeout(() => closeModal(), 200);\r\n  };\r\n\r\n  const handleBgClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ): void => {\r\n    if (e.target === bgRef.current && closable) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Background\r\n      animating={animating}\r\n      ref={bgRef}\r\n      onClick={e => handleBgClick(e)}\r\n    >\r\n      {container ? (\r\n        <Container>\r\n          <ModalContext.Provider value={{ handleClose }}>\r\n            {children}\r\n          </ModalContext.Provider>\r\n        </Container>\r\n      ) : (\r\n        <ModalContext.Provider value={{ handleClose }}>\r\n          <Center>{children}</Center>\r\n        </ModalContext.Provider>\r\n      )}\r\n    </Background>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h1`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { ButtonsContainer, Header } from './Elements';\r\nimport { ModalContext } from '../Modal';\r\nimport { Button } from '../Button';\r\n\r\ninterface ModalConfirmProps {\r\n  handleAction: () => void;\r\n}\r\n\r\nconst ModalConfirm: FC<ModalConfirmProps> = ({ handleAction }): JSX.Element => {\r\n  const context = useContext(ModalContext);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleActionClicked = (): void => {\r\n    context.handleClose();\r\n\r\n    handleAction();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>Are you sure?</Header>\r\n      <ButtonsContainer>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"gray-dark\"\r\n          secondary\r\n          style={{ width: '48%' }}\r\n          onClick={handleClose}\r\n          type=\"button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          style={{ width: '48%' }}\r\n          onClick={handleActionClicked}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ButtonsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import { BiX } from 'react-icons/bi';\r\nimport styled from 'styled-components';\r\nimport { ColorType } from '../../../../components/BudgetInfo/Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Money = styled.div<ColorType>`\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-size: 2.1rem;\r\n  margin: 0 1rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const MediumTitle = styled.h2`\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0.5rem;\r\n  width: max-content;\r\n`;\r\n\r\nexport const SmallTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.9;\r\n`;\r\n\r\nexport const DateHeader = styled.h3`\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const DeleteBtn = styled(Button)`\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CloseIcon = styled(BiX)`\r\n  font-size: 3rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DeleteText = styled.p`\r\n  display: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: inline;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport { removeTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport { getMoneyColor } from '../../../../utils/ux';\r\nimport Modal from '../../../../components/Modal';\r\nimport ModalConfirm from '../../../../components/ModalConfirm';\r\nimport {\r\n  CloseIcon,\r\n  Container,\r\n  DateHeader,\r\n  DeleteBtn,\r\n  DeleteText,\r\n  MediumTitle,\r\n  Money,\r\n  SmallTitle,\r\n  Title,\r\n} from './Elements';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\ninterface TransactionProps extends TransactionType {\r\n  deletable?: boolean;\r\n}\r\n\r\nconst Transaction: FC<TransactionProps> = ({\r\n  _id,\r\n  budgetId,\r\n  title,\r\n  amount,\r\n  repeat,\r\n  date,\r\n  currency,\r\n  deletable = true,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  const [budget, setBudget] = useState<null | BudgetType>(null);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const dateN = new Date(date);\r\n\r\n  useEffect(() => {\r\n    const selectedBudget = budgets.filter(budget => budget._id === budgetId)[0];\r\n\r\n    if (selectedBudget) {\r\n      setBudget(selectedBudget);\r\n    }\r\n  }, [budgets, budgetId]);\r\n\r\n  const handleDeleteTransaction = (): void => {\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/transactions/${_id}`).then(() => {\r\n        dispatch(removeTransactionAction(_id));\r\n        dispatch(changeTransactions());\r\n        dispatch(unsetLoaderAction());\r\n      });\r\n    } else {\r\n      dispatch(removeTransactionAction(_id));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div style={{ flex: 1 }}>\r\n          <Title>{title}</Title>\r\n\r\n          {budget && <SmallTitle>{budget.title}</SmallTitle>}\r\n\r\n          <DateHeader>\r\n            {dateN.getFancyDate()} | {dateN.getFancyHours()}\r\n          </DateHeader>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          {repeat.repeat && (\r\n            <MediumTitle>\r\n              Every {repeat.every} {repeat.type}\r\n            </MediumTitle>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Money color={getMoneyColor(amount)}>\r\n              {amount} {currency}\r\n            </Money>\r\n\r\n            {deletable && (\r\n              <div>\r\n                <DeleteBtn\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={() => setModalOpened(true)}\r\n                >\r\n                  <CloseIcon />\r\n                  <DeleteText>Delete</DeleteText>\r\n                </DeleteBtn>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <ModalConfirm handleAction={handleDeleteTransaction} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 4rem;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: block;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: flex;\r\n\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const NoMessage = styled.h3`\r\n  font-weight: 600;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.3;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  margin: 4rem 0;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80%;\r\n  height: 1px;\r\n  background-color: var(--color-gray-dark);\r\n  opacity: 0.3;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const SmContainer = styled.div`\r\n  padding: 0;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BigHeader = styled.h2`\r\n  font-size: 2.2rem;\r\n  margin-top: 2rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Header = styled.h3`\r\n  font-size: 1.6rem;\r\n  font-weight: 400;\r\n  margin-top: 2rem;\r\n  width: min-content;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Money = styled.h2<{ color: string }>`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  width: min-content;\r\n`;\r\n\r\nexport const Dash = styled.span`\r\n  border-radius: 1rem;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1.8rem;\r\n  opacity: 0.5;\r\n  height: min-content;\r\n  display: inline-block;\r\n  background-color: var(--color-gray);\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.ul`\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  list-style: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h3`\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  margin-top: 4rem;\r\n  text-align: center;\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport Transaction from '../../../Payments/components/Transaction';\r\nimport { NoMessage } from '../../../Payments/components/TransactionList/Elements';\r\nimport { Dash } from '../MoneyLastMonth/Elements';\r\n\r\nimport { Container, Header } from './Elements';\r\n\r\nconst FrequentTransactionsList: FC = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const transactions = useSelector((state: RootState) => state.transactions)\r\n    .filter(transaction => !transaction.repeat.repeat)\r\n    .sort((a, b) => {\r\n      return a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n    })\r\n    .slice(0, 3);\r\n\r\n  const renderTransactions = (): JSX.Element[] => {\r\n    return transactions.map(transaction => {\r\n      return (\r\n        <li key={transaction._id}>\r\n          <Transaction {...transaction} deletable={false} />\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        Frequent Payments{' '}\r\n        <Dash\r\n          tabIndex={0}\r\n          onClick={() => history.push('payments')}\r\n          onKeyPress={e =>\r\n            handleEnterPressed(e, () => history.push('payments'))\r\n          }\r\n        >\r\n          See all\r\n        </Dash>\r\n      </Header>\r\n\r\n      <Container>\r\n        {' '}\r\n        {transactions.length ? (\r\n          renderTransactions()\r\n        ) : (\r\n          <NoMessage style={{ marginTop: '1.5rem' }}>\r\n            There is no payments\r\n          </NoMessage>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrequentTransactionsList;\r\n","import { FC, useState, useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { BigHeader, Container, Header, Money, SmContainer } from './Elements';\r\n\r\nconst nowDate = new Date();\r\n\r\nconst MoneyLastMonth: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const [moneyLastMonth, setMoneyLastMonth] = useState({\r\n    income: 0,\r\n    spent: 0,\r\n    total: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let money = { income: 0, spent: 0, total: 0 };\r\n\r\n    transactions.forEach(transaction => {\r\n      const transactionDate = new Date(transaction.date);\r\n      if (transactionDate.getMonth() === nowDate.getMonth())\r\n        if (transaction.amount > 0) {\r\n          money.income +=\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n        } else if (transaction.amount < 0) {\r\n          money.spent +=\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n        }\r\n      money.total = money.income + money.spent;\r\n    });\r\n\r\n    setMoneyLastMonth(money);\r\n  }, [transactions, currency.currencies, currency.primaryCurrency]);\r\n\r\n  return (\r\n    <>\r\n      <BigHeader>Outgoings last month</BigHeader>\r\n      <Container>\r\n        <SmContainer>\r\n          <Header>Income</Header>\r\n          <Money color=\"green\">\r\n            {moneyLastMonth.income.toFixed()} {currency.primaryCurrency}\r\n          </Money>\r\n        </SmContainer>\r\n\r\n        <SmContainer>\r\n          <Header>Total</Header>\r\n          <Money color=\"green\">\r\n            {moneyLastMonth.total.toFixed()} {currency.primaryCurrency}\r\n          </Money>\r\n        </SmContainer>\r\n        <SmContainer>\r\n          <Header>Spent</Header>\r\n          <Money color=\"red\">\r\n            {moneyLastMonth.spent.toFixed()} {currency.primaryCurrency}\r\n          </Money>\r\n        </SmContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyLastMonth;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ColorType {\r\n  color: 'green' | 'red' | 'black';\r\n}\r\n\r\nexport const TitleHeader = styled.h1`\r\n  font-size: 3rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  text-align: center;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport const MoneyHeader = styled.h2<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin: 0;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const DiffSpan = styled.div<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin-left: 0;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n  height: 5rem;\r\n`;\r\n\r\nexport const SmallMoneyHeader = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: max-content;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n\r\nexport const DiffIcon = styled.i<{ amount: number }>`\r\n  position: absolute;\r\n  top: ${props => (props.amount > 0 ? '25%' : '90%')};\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport {\r\n  TitleHeader,\r\n  MoneyHeader,\r\n  SmallMoneyHeader,\r\n  DiffSpan,\r\n  DiffIcon,\r\n} from './Elements';\r\nimport { BiCaretUp, BiCaretDown, BiMinus } from 'react-icons/bi';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport { BudgetType } from '../../store/budgets/types';\r\n\r\nconst BudgetInfo: FC<BudgetType> = (budget): JSX.Element => {\r\n  const { title, amount } = budget;\r\n\r\n  return (\r\n    <>\r\n      <TitleHeader>{title}</TitleHeader>\r\n      <div>\r\n        <MoneyHeader color={getMoneyColor(amount.actual)}>\r\n          {amount.actual.toFixed(2)} {amount.currency}\r\n        </MoneyHeader>\r\n        <DiffSpan color={getMoneyColor(amount.diff)}>\r\n          <SmallMoneyHeader>\r\n            {amount.diff.toFixed(2)} {amount.currency}\r\n          </SmallMoneyHeader>\r\n          <DiffIcon amount={amount.diff}>\r\n            {amount.diff > 0 ? (\r\n              <BiCaretUp />\r\n            ) : amount.diff < 0 ? (\r\n              <BiCaretDown />\r\n            ) : (\r\n              <BiMinus />\r\n            )}\r\n          </DiffIcon>\r\n        </DiffSpan>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h2`\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  margin-top: 4rem;\r\n`;\r\n\r\nexport const BudgetContainer = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  padding: 2rem;\r\n  border-radius: 1rem;\r\n  width: 20rem;\r\n  box-shadow: var(--shadow-default);\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { RootState } from '../../../../store';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { NoMessage } from '../../../Payments/components/TransactionList/Elements';\r\nimport { Container } from '../FrequentTransactionsList/Elements';\r\nimport { Dash } from '../MoneyLastMonth/Elements';\r\n\r\nimport { BudgetContainer, Header } from './Elements';\r\n\r\nconst MostValuableBudget: FC = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const budget = useSelector(\r\n    (state: RootState) =>\r\n      state.budgets.sort((a, b) => {\r\n        return a.amount.actual > b.amount.actual\r\n          ? -1\r\n          : a.amount.actual < b.amount.actual\r\n          ? 1\r\n          : 0;\r\n      })[0]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        Most valuable Budget{' '}\r\n        <Dash\r\n          tabIndex={0}\r\n          onClick={() => history.push('budgets')}\r\n          onKeyPress={e =>\r\n            handleEnterPressed(e, () => history.push('payments'))\r\n          }\r\n        >\r\n          See all\r\n        </Dash>\r\n      </Header>\r\n\r\n      {budget ? (\r\n        <BudgetContainer>\r\n          <BudgetInfo {...budget} />\r\n        </BudgetContainer>\r\n      ) : (\r\n        <Container>\r\n          <NoMessage style={{ marginTop: '1.5rem' }}>\r\n            There is no payments\r\n          </NoMessage>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MostValuableBudget;\r\n","import { FC } from 'react';\r\nimport { Header } from '../../components/Form/Elements';\r\nimport FrequentTransactionsList from './components/FrequentTransactionsList';\r\nimport MoneyLastMonth from './components/MoneyLastMonth';\r\nimport MostValuableBudget from './components/MostValuableBudget';\r\n\r\nconst Overview: FC = () => {\r\n  return (\r\n    <div>\r\n      <Header>Overview</Header>\r\n      <MoneyLastMonth />\r\n      <MostValuableBudget />\r\n      <FrequentTransactionsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const StyledList = styled.ul`\r\n  list-style: none;\r\n  margin: 4rem auto;\r\n  padding: 0;\r\n  justify-content: center;\r\n  gap: 4rem;\r\n  grid-template-columns: repeat(auto-fit, 23rem);\r\n  padding: 0 4rem;\r\n  align-items: center;\r\n\r\n  display: grid;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 23rem;\r\n  height: max-content;\r\n  box-shadow: var(--shadow-default);\r\n  border-radius: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-weight: 400;\r\n  font-size: 2.8rem;\r\n`;\r\n\r\nexport const IconSpan = styled.span`\r\n  font-size: 3rem;\r\n  height: 4rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border: solid 1px transparent;\r\n  border-radius: 1rem;\r\n\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\ninterface returnedObject {\r\n  [key: string]: { value: string; required: boolean; checked: boolean };\r\n}\r\n\r\nconst useForm = (initialState: {\r\n  [key: string]: { value: string; required: boolean };\r\n}): [\r\n  returnedObject,\r\n  Dispatch<SetStateAction<returnedObject>>,\r\n  (name: string, bool?: boolean) => void,\r\n  (e: React.ChangeEvent<HTMLInputElement>) => void\r\n] => {\r\n  let newState: returnedObject = {};\r\n\r\n  for (const [key, value] of Object.entries(initialState)) {\r\n    newState = { ...newState, [key]: { ...value, checked: true } };\r\n  }\r\n\r\n  const [formData, setFormData] = useState(newState);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = formData[e.target.name].required\r\n      ? e.target.value\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: {\r\n        ...formData[e.target.name],\r\n        value: e.target.value,\r\n        checked: checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  const toggleChecked = (name: string, bool: boolean = false): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: {\r\n        ...formData[name],\r\n        checked: bool,\r\n      },\r\n    });\r\n  };\r\n  return [formData, setFormData, toggleChecked, handleInputChange];\r\n};\r\n\r\nexport default useForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select<{ color: string }>`\r\n  padding: 0.2rem 0.2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 3rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  color: ${props => `var(--color-${props.color})`};\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { Select } from './Elements';\r\n\r\ninterface CurrencySelectorProps {\r\n  color: string;\r\n  onChangeAction: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  style?: { [key: string]: string };\r\n  currency?: string;\r\n}\r\n\r\nconst CurrencySelector: FC<CurrencySelectorProps> = ({\r\n  color,\r\n  onChangeAction,\r\n  style,\r\n  currency,\r\n}): JSX.Element => {\r\n  const currencies = useSelector(\r\n    (state: RootState) => state.currency.currencies\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [currentCurrency, setCurrentCurrency] = useState(primaryCurrency);\r\n\r\n  useEffect(() => {\r\n    currency && setCurrentCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setCurrentCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  const renderCurrenciesOptions = (): JSX.Element[] => {\r\n    return Object.entries(currencies).map(currency => {\r\n      return (\r\n        <option value={currency[0]} key={currency[0]}>\r\n          {currency[0]}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setCurrentCurrency(e.target.value);\r\n    onChangeAction(e);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      color={color}\r\n      onChange={handleSelectChange}\r\n      value={currentCurrency}\r\n      style={style}\r\n    >\r\n      {renderCurrenciesOptions()}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { FC, useState, useEffect, useRef } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport useForm from '../../hooks/useForm';\r\nimport { Input } from '../Input';\r\nimport {\r\n  Container,\r\n  StyledForm,\r\n  Label,\r\n  Warning,\r\n  MinPlus,\r\n  MinPlusIcon,\r\n  Header,\r\n} from './Elements';\r\nimport { Button } from '../Button';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { RootState } from '../../store';\r\n\r\ninterface FormProps {\r\n  handleSubmit: (title: string, amount: number, currency: string) => void;\r\n  disabled?: boolean;\r\n  children?: JSX.Element;\r\n  childrenBefore?: JSX.Element;\r\n  button?: boolean;\r\n  data?: {\r\n    [key in 'title' | 'amount']: { value: string; required: boolean };\r\n  };\r\n  currency?: string;\r\n  style?: {};\r\n  pageTitle?: string;\r\n}\r\n\r\nconst Form: FC<FormProps> = ({\r\n  handleSubmit,\r\n  disabled = false,\r\n  children,\r\n  childrenBefore,\r\n  button = true,\r\n  data,\r\n  currency,\r\n  style,\r\n  pageTitle,\r\n}): JSX.Element => {\r\n  const [formData, setFormData, toggleChecked, handleInputChange] = useForm(\r\n    data\r\n      ? data\r\n      : {\r\n          title: { value: '', required: true },\r\n          amount: { value: '', required: true },\r\n        }\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [formCurrency, setFormCurrency] = useState(primaryCurrency);\r\n  const [minus, setMinus] = useState(false);\r\n  const clicked = useRef(false);\r\n\r\n  const { title, amount } = formData;\r\n\r\n  useEffect(() => {\r\n    currency && setFormCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setFormCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  useEffect(() => {\r\n    if (parseFloat(amount.value) < 0) {\r\n      setFormData({\r\n        title: { ...title },\r\n        amount: {\r\n          ...amount,\r\n          value: (parseFloat(amount.value) * -1).toFixed(),\r\n        },\r\n      });\r\n      setMinus(true);\r\n      clicked.current = true;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    if (!disabled) {\r\n      const amountCheck = amount.required && !amount.value;\r\n      const titleCheck = title.required && !title.value;\r\n\r\n      if (amountCheck && titleCheck) {\r\n        let newState = {};\r\n\r\n        for (const [key, value] of Object.entries(formData)) {\r\n          newState = { ...newState, [key]: { ...value, checked: false } };\r\n        }\r\n\r\n        setFormData(newState);\r\n      } else {\r\n        if (titleCheck) toggleChecked('title');\r\n\r\n        if (amountCheck) toggleChecked('amount');\r\n      }\r\n\r\n      if (amountCheck || titleCheck) return;\r\n      let amountNum = parseFloat(amount.value);\r\n\r\n      if (minus && amountNum > 0) amountNum = amountNum * -1;\r\n\r\n      handleSubmit(title.value, amountNum, formCurrency);\r\n\r\n      setFormData({\r\n        title: { ...title, value: '' },\r\n        amount: { ...amount, value: '' },\r\n      });\r\n\r\n      setMinus(false);\r\n      clicked.current = false;\r\n    }\r\n  };\r\n\r\n  const handleCurrencyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setFormCurrency(e.target.value);\r\n  };\r\n\r\n  const handleInputChangeNew = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (parseFloat(e.target.value) < 0) setMinus(true);\r\n    else if (parseFloat(e.target.value) >= 0 && !clicked.current)\r\n      setMinus(false);\r\n    handleInputChange(e);\r\n  };\r\n\r\n  const handleMinPlusClick = () => {\r\n    setMinus(!minus);\r\n    if (minus) clicked.current = false;\r\n    else clicked.current = true;\r\n  };\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={handleSubmitForm}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      style={style}\r\n    >\r\n      {pageTitle && (\r\n        <Container>\r\n          <Header>{pageTitle}</Header>\r\n        </Container>\r\n      )}\r\n      {childrenBefore && <Container>{childrenBefore}</Container>}\r\n      <Container>\r\n        <Label htmlFor=\"title\">Title</Label>\r\n        <Input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          value={title.value}\r\n          onChange={handleInputChange}\r\n        />\r\n        {!title.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container style={{ position: 'relative' }}>\r\n        <Label htmlFor=\"amount\">Amount</Label>\r\n        <MinPlus onClick={handleMinPlusClick}>\r\n          <MinPlusIcon minus={!minus}></MinPlusIcon>\r\n        </MinPlus>\r\n        <Input\r\n          id=\"amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          placeholder=\"Enter amount\"\r\n          value={amount.value}\r\n          onChange={handleInputChangeNew}\r\n          style={{ padding: '1rem 5rem' }}\r\n        />\r\n        <CurrencySelector\r\n          color=\"black\"\r\n          onChangeAction={handleCurrencyChange}\r\n          style={{ fontSize: '2.85rem', position: 'absolute', right: '0' }}\r\n          currency={formCurrency}\r\n        />\r\n        {!amount.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container>{children}</Container>\r\n      {button && (\r\n        <Button color=\"green\" textColor=\"white\">\r\n          Add\r\n        </Button>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { Top, Header, IconSpan, ButtonsContainer } from './Elements';\r\nimport { BiEdit, BiX } from 'react-icons/bi';\r\nimport { ModalContext } from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { Button } from '../../../../components/Button';\r\nimport {\r\n  changeTransactions,\r\n  editBudgetAction,\r\n  removeBudgetAction,\r\n} from '../../../../store/budgets/actions';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { removeTransactionsByBudgetIdAction } from '../../../../store/transactions/actions';\r\nimport Form from '../../../../components/Form';\r\nimport { RootState } from '../../../../store';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetModal: FC<BudgetType> = ({ _id, title, amount }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const context = useContext(ModalContext);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleDelete = (): void => {\r\n    context.handleClose();\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/budgets/${_id}`).then(() => {\r\n        dispatch(removeBudgetAction(_id));\r\n\r\n        axios.delete(`${dbUrl}/transactions?budgetId=${_id}`).then(() => {\r\n          dispatch(removeTransactionsByBudgetIdAction(_id));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n      });\r\n    } else {\r\n      dispatch(removeBudgetAction(_id));\r\n      dispatch(removeTransactionsByBudgetIdAction(_id));\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (\r\n    newTitle: string,\r\n    newAmount: number,\r\n    newCurrency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id,\r\n      userId: googleUser?.googleId ? googleUser?.googleId : null,\r\n      title: newTitle,\r\n      amount: {\r\n        actual: newAmount,\r\n        currency: newCurrency,\r\n        diff: 0,\r\n        starting: newAmount,\r\n      },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .patch(`${dbUrl}/budgets/${_id}`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(editBudgetAction(budget.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(editBudgetAction(newBudget));\r\n      dispatch(changeTransactions());\r\n    }\r\n    context.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Top>\r\n        <IconSpan tabIndex={0}>\r\n          <BiEdit />\r\n        </IconSpan>\r\n        <Header>Edit</Header>\r\n        <IconSpan\r\n          tabIndex={0}\r\n          style={{ fontSize: '3.5rem', height: '4.5rem' }}\r\n          onClick={handleClose}\r\n          onKeyPress={e => handleEnterPressed(e, handleClose)}\r\n        >\r\n          <BiX />\r\n        </IconSpan>\r\n      </Top>\r\n      <div style={{ marginTop: '3.5rem' }}>\r\n        <Form\r\n          handleSubmit={handleSubmitForm}\r\n          button={false}\r\n          data={{\r\n            title: { value: title, required: true },\r\n            amount: { value: amount.starting.toFixed(2), required: true },\r\n          }}\r\n          style={{ padding: 0 }}\r\n          currency={amount.currency}\r\n        >\r\n          <ButtonsContainer>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"gray-dark\"\r\n              secondary\r\n              style={{ width: '48%' }}\r\n              onClick={handleDelete}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"white\"\r\n              style={{ width: '48%' }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ButtonsContainer>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetModal;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { Container } from './Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport BudgetModal from '../BudgetModal';\r\nimport Modal from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\n\r\nconst Budget: FC<BudgetType> = (budget): JSX.Element => {\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <BudgetInfo {...budget} />\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          onClick={() => setModalOpened(true)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <BudgetModal {...budget} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Budget;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { Container, StyledList } from './Elements';\r\nimport Budget from '../Budget';\r\nimport { RootState } from '../../../../store';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Select } from '../../../Payments/components/TransactionList/Elements';\r\nimport { Label } from '../../../../components/Form/Elements';\r\n\r\nconst BudgetList: FC = (): JSX.Element => {\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderBudgets = (): JSX.Element[] => {\r\n    const sortedBudgets = [...budgets];\r\n    sortedBudgets.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare =\r\n            a.amount.actual > b.amount.actual\r\n              ? -1\r\n              : a.amount.actual < b.amount.actual\r\n              ? 1\r\n              : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') sortedBudgets.reverse();\r\n\r\n    return sortedBudgets.map(budget => (\r\n      <CSSTransition timeout={200} classNames=\"slide\" key={budget._id}>\r\n        <li>\r\n          <Budget {...budget} />\r\n        </li>\r\n      </CSSTransition>\r\n    ));\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Label style={{ marginTop: '3rem' }}>Sort by</Label>\r\n      <Select onChange={handleSelectSortChange} value={selectedSort}>\r\n        <option value=\"date\">Newest</option>\r\n        <option value=\"date_r\">Oldest</option>\r\n        <option value=\"title\">A...Z</option>\r\n        <option value=\"title_r\">Z...A</option>\r\n        <option value=\"amount\">Most money</option>\r\n        <option value=\"amount_r\">Least money</option>\r\n      </Select>\r\n      <StyledList>\r\n        <TransitionGroup component={null}>{renderBudgets()}</TransitionGroup>\r\n      </StyledList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BudgetList;\r\n","import { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addBudgetAction } from '../../../../store/budgets/actions';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport Form from '../../../../components/Form';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id: uuidv4(),\r\n      userId: googleUser ? googleUser?.googleId : null,\r\n      title: title,\r\n      amount: { actual: amount, currency, diff: 0, starting: amount },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .post(`${dbUrl}/budgets`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(addBudgetAction(budget.data));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(addBudgetAction(newBudget));\r\n  };\r\n\r\n  return <Form handleSubmit={handleSubmit} pageTitle=\"Budgets\" />;\r\n};\r\n\r\nexport default BudgetForm;\r\n","import { FC } from 'react';\r\n\r\nimport BudgetList from './components/BudgetList';\r\nimport BudgetForm from './components/BudgetForm';\r\n\r\nconst Budgets: FC = (): JSX.Element => {\r\n  return (\r\n    <div>\r\n      <BudgetForm />\r\n      <BudgetList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Budgets;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 14rem;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledP = styled.p<{ checked: boolean }>`\r\n  font-size: 2rem;\r\n  margin-left: 1rem;\r\n  transition: var(--trans-default);\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${props => `var(--color-gray${props.checked ? '-dark)' : ')'}`};\r\n`;\r\n\r\nexport const SmallContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  position: relative;\r\n\r\n  .calendar {\r\n    border-radius: 1.5rem;\r\n    border-color: var(--color-gray);\r\n    top: 4rem;\r\n    position: absolute;\r\n  }\r\n\r\n  button {\r\n    border-radius: 1rem;\r\n  }\r\n`;\r\n\r\nexport const AnimatedSmallContainer = styled(SmallContainer)<{\r\n  animate: boolean;\r\n}>`\r\n  transition: var(--trans-default);\r\n  margin-top: ${props => (props.animate ? '35rem' : '0')};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckBox = styled.div<{ checked: boolean }>`\r\n  width: 2.6rem;\r\n  height: 2.6rem;\r\n  border: 1px solid var(--color-gray-dark);\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    background-color: ${props =>\r\n      `var(--color-${props.checked ? 'gray-dark)' : 'white)'}`};\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n","import React, { FC, useRef, useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport Form from '../../../../components/Form';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport {\r\n  Select,\r\n  Container,\r\n  StyledP,\r\n  SmallContainer,\r\n  AnimatedSmallContainer,\r\n} from './Elements';\r\nimport { Label } from '../../../../components/Form/Elements';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { Button } from '../../../../components/Button';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\nimport { CheckBox } from '../../../../components/Checkbox';\r\nimport { Input } from '../../../../components/Input';\r\nimport '../../../../constant/style/animations.css';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\n\r\ninterface RepeatTransactionType {\r\n  repeat: boolean;\r\n  every: string;\r\n  type: string;\r\n}\r\n\r\nconst PaymentForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [repeatTransaction, setRepeatTransaction] =\r\n    useState<RepeatTransactionType>({\r\n      repeat: false,\r\n      every: '1',\r\n      type: 'hours',\r\n    });\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [dateCheck, setDateCheck] = useState(false);\r\n  const check = useRef(null);\r\n\r\n  let budgetsLength = useRef(-1);\r\n\r\n  useEffect(() => {\r\n    if (budgetsLength.current !== budgets.length) {\r\n      if (budgets[0]) setSelectedBudgetId(budgets[0]._id);\r\n      else setSelectedBudgetId('');\r\n    }\r\n    return () => {\r\n      budgetsLength.current = budgets.length;\r\n    };\r\n  }, [budgets]);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newTransaction: TransactionType = {\r\n      _id: uuidv4(),\r\n      currency,\r\n      budgetId: selectedBudgetId,\r\n      userId: googleUser ? googleUser.googleId : null,\r\n      title,\r\n      amount,\r\n      repeat: {\r\n        ...repeatTransaction,\r\n        every: parseInt(repeatTransaction.every),\r\n      },\r\n      date: dateCheck ? startDate : new Date(),\r\n    };\r\n\r\n    setRepeatTransaction({\r\n      repeat: false,\r\n      every: '1',\r\n      type: 'hours',\r\n    });\r\n\r\n    setDateCheck(false);\r\n    setStartDate(new Date());\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .post(`${dbUrl}/transactions`, {\r\n          ...newTransaction,\r\n        })\r\n        .then(transaction => {\r\n          dispatch(addTransactionAction(transaction.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(addTransactionAction(newTransaction));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => {\r\n      return (\r\n        <option key={budget._id} value={budget._id}>\r\n          {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n          {budget.amount.currency}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const selectedBudget = budgets.filter(\r\n    budget => budget._id === selectedBudgetId\r\n  )[0];\r\n\r\n  const handleCheckboxCheck = (e: React.SyntheticEvent): void => {\r\n    setRepeatTransaction({\r\n      ...repeatTransaction,\r\n      repeat: true,\r\n    });\r\n\r\n    if (e.target === check.current) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        repeat: !repeatTransaction.repeat,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputRepeatChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    if (\r\n      (!isNaN(parseInt(e.target.value)) && parseInt(e.target.value) > 0) ||\r\n      e.target.value === ''\r\n    ) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        every: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelectTypeChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setRepeatTransaction({ ...repeatTransaction, type: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      handleSubmit={handleSubmit}\r\n      disabled={!budgets.length}\r\n      button={false}\r\n      currency={selectedBudget && selectedBudget.amount.currency}\r\n      childrenBefore={\r\n        <>\r\n          <Label htmlFor=\"selectBudget\">Select a budget</Label>\r\n          <Select\r\n            id=\"selectBudget\"\r\n            onChange={handleSelectChange}\r\n            value={selectedBudgetId}\r\n          >\r\n            {renderOptions()}\r\n          </Select>\r\n        </>\r\n      }\r\n      pageTitle=\"Payments\"\r\n    >\r\n      <>\r\n        <SmallContainer>\r\n          <CheckBox\r\n            checked={dateCheck}\r\n            onClick={() => setDateCheck(!dateCheck)}\r\n            tabIndex={0}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => setDateCheck(!dateCheck))\r\n            }\r\n          />\r\n          <StyledP checked={dateCheck} onClick={() => setDateCheck(!dateCheck)}>\r\n            Select date\r\n          </StyledP>\r\n\r\n          <CSSTransition\r\n            in={dateCheck}\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            unmountOnExit\r\n          >\r\n            <Calendar\r\n              value={startDate}\r\n              onChange={(date: Date) => setStartDate(date)}\r\n              className=\"calendar\"\r\n            />\r\n          </CSSTransition>\r\n        </SmallContainer>\r\n        <AnimatedSmallContainer\r\n          animate={dateCheck}\r\n          onClick={handleCheckboxCheck}\r\n        >\r\n          <CheckBox\r\n            checked={repeatTransaction.repeat}\r\n            tabIndex={0}\r\n            onKeyPress={e => handleEnterPressed(e, handleCheckboxCheck)}\r\n            ref={check}\r\n          />\r\n          <StyledP checked={repeatTransaction.repeat}>\r\n            Repeat every\r\n            <Input\r\n              style={{\r\n                width: '4rem',\r\n                padding: '.5rem',\r\n                color: !repeatTransaction.repeat ? 'lightgray' : 'black',\r\n              }}\r\n              onChange={handleInputRepeatChange}\r\n              maxLength={3}\r\n              value={repeatTransaction.every}\r\n              disabled={!repeatTransaction.repeat}\r\n            />\r\n            <Select\r\n              style={{\r\n                width: '8rem',\r\n                padding: '.5rem',\r\n              }}\r\n              value={repeatTransaction.type}\r\n              onChange={handleSelectTypeChange}\r\n              disabled={!repeatTransaction.repeat}\r\n            >\r\n              <option value=\"hours\">hours</option>\r\n              <option value=\"days\">days</option>\r\n              <option value=\"month\">month</option>\r\n              <option value=\"year\">year</option>\r\n            </Select>\r\n          </StyledP>\r\n        </AnimatedSmallContainer>\r\n\r\n        {budgets[0] && (\r\n          <Container>\r\n            {selectedBudgetId && <BudgetInfo {...selectedBudget} />}\r\n          </Container>\r\n        )}\r\n        <Button\r\n          color=\"green\"\r\n          textColor=\"white\"\r\n          style={{ marginTop: '3rem', opacity: !budgets[0] ? 0.6 : 1 }}\r\n          onClick={e => !budgets[0] && e.preventDefault()}\r\n        >\r\n          {!budgets[0] ? 'Add a budget' : 'Add'}\r\n        </Button>\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { RootState } from '../../../../store';\r\nimport Transaction from '../Transaction';\r\nimport { Flex, Line, List, NoMessage, Select } from './Elements';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Label } from '../../../../components/Form/Elements';\r\nimport { Container } from './Elements';\r\n\r\nconst TransactionList: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderTransactions = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = selectedBudgetId\r\n      ? transactions.filter(\r\n          transaction =>\r\n            transaction.budgetId === selectedBudgetId &&\r\n            !transaction.repeat.repeat\r\n        )\r\n      : transactions.filter(transaction => !transaction.repeat.repeat);\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    selectedTransactions.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare = a.amount > b.amount ? -1 : a.amount < b.amount ? 1 : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') selectedTransactions.reverse();\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTransactionsRepeat = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = transactions.filter(\r\n      transaction => transaction.repeat.repeat\r\n    );\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => (\r\n      <option key={budget._id} value={budget._id}>\r\n        {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n        {budget.amount.currency}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const handleSelectFilterChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      <Container>\r\n        <Label>Frequent transactions</Label>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactionsRepeat()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n      <Line></Line>\r\n      <Container>\r\n        <Label htmlFor=\"selectbg\">Filter transactions</Label>\r\n        <Select\r\n          id=\"selectbg\"\r\n          onChange={handleSelectFilterChange}\r\n          value={selectedBudgetId}\r\n        >\r\n          <option value=\"\">All</option>\r\n          {renderOptions()}\r\n        </Select>\r\n        <Label htmlFor=\"sort\" style={{ marginTop: '3rem' }}>\r\n          Sort by\r\n        </Label>\r\n        <Select\r\n          id=\"sort\"\r\n          onChange={handleSelectSortChange}\r\n          value={selectedSort}\r\n        >\r\n          <option value=\"date\">Newest</option>\r\n          <option value=\"date_r\">Oldest</option>\r\n          <option value=\"title\">A...Z</option>\r\n          <option value=\"title_r\">Z...A</option>\r\n          <option value=\"amount\">Most money</option>\r\n          <option value=\"amount_r\">Least money</option>\r\n        </Select>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactions()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import { FC } from 'react';\r\n\r\nimport PaymentForm from './components/PaymentForm';\r\nimport TransactionList from './components/TransactionList';\r\n\r\nconst Payments: FC = () => {\r\n  return (\r\n    <div>\r\n      <PaymentForm />\r\n      <TransactionList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import { FC } from 'react';\r\n\r\nconst Statistics: FC = () => {\r\n  return <h2>Coming soon</h2>;\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h2<{ color: string }>`\r\n  font-size: 3.5rem;\r\n  font-weight: 400;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin-bottom: 2.5rem;\r\n`;\r\n","import axios from 'axios';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dbUrl } from '../../constant/routes';\r\n\r\nimport { RootState } from '../../store';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../store/loader';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { Header } from './Elements';\r\n\r\nconst AllMoney: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n  const googleId = useSelector(\r\n    (state: RootState) => state.googleUser?.googleId\r\n  );\r\n\r\n  let money = 0;\r\n  budgets.forEach(\r\n    budget =>\r\n      (money +=\r\n        budget.amount.actual / currency.currencies[budget.amount.currency])\r\n  );\r\n\r\n  money =\r\n    (money / currency.currencies['USD']) * currency.currencies[primaryCurrency];\r\n\r\n  const handleCurrencyChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    if (googleId) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .patch(`${dbUrl}/users/${googleId}`, {\r\n          currency: e.target.value,\r\n        })\r\n        .then(() => {\r\n          dispatch(setPrimaryCurrency(e.target.value));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(setPrimaryCurrency(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header color={getMoneyColor(money)}>\r\n      {money.toFixed(2)}{' '}\r\n      <CurrencySelector\r\n        color={getMoneyColor(money)}\r\n        onChangeAction={handleCurrencyChange}\r\n      />\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AllMoney;\r\n","import { FC } from 'react';\r\n\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport Overview from '../pages/Overview';\r\nimport Budgets from '../pages/Budgets';\r\nimport Payments from '../pages/Payments';\r\nimport Statistics from '../pages/Statistics';\r\n\r\nimport '../constant/style/animations.css';\r\nimport AllMoney from './AllMoney';\r\n\r\nconst AnimatedRouter: FC = (): JSX.Element => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <AllMoney />\r\n      <div style={{ position: 'relative' }}>\r\n        <TransitionGroup component={null}>\r\n          <CSSTransition\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            key={location.pathname}\r\n          >\r\n            <Switch location={location}>\r\n              <Route exact path=\"/overview\">\r\n                <Overview />\r\n              </Route>\r\n              <Route exact path=\"/budgets\">\r\n                <Budgets />\r\n              </Route>\r\n              <Route exact path=\"/payments\">\r\n                <Payments />\r\n              </Route>\r\n              <Route exact path=\"/statistics\">\r\n                <Statistics />\r\n              </Route>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedRouter;\r\n","import axios from 'axios';\r\nimport { CurrencyType } from '../store/currency/types';\r\n\r\nexport const currencyExchangeAPI = async (\r\n  currencyFromState: CurrencyType\r\n): Promise<CurrencyType> => {\r\n  const date = new Date();\r\n  const lastFetchedDate = new Date(currencyFromState.dateFetched);\r\n\r\n  const dayInMiliseconds = 1000 * 60 * 60 * 24;\r\n  const daysBetweenDates = Math.floor(\r\n    (date.getTime() - lastFetchedDate.getTime()) / dayInMiliseconds\r\n  );\r\n\r\n  if (daysBetweenDates >= 7) {\r\n    interface rate {\r\n      [key: string]: number;\r\n    }\r\n\r\n    interface dataFetchedType {\r\n      rates: rate;\r\n      source: string;\r\n      date: string;\r\n      timestamp: number;\r\n    }\r\n\r\n    const currencies: dataFetchedType = await (\r\n      await axios.get(\r\n        'https://v1.nocodeapi.com/kriziuu/cx/FPLWrEBmjQDFHLdf/rates'\r\n      )\r\n    ).data;\r\n\r\n    let rates: rate = {};\r\n    for (const [key, value] of Object.entries(currencies.rates)) {\r\n      const rate: rate = { [key]: value };\r\n      rates = { ...rates, ...rate };\r\n    }\r\n\r\n    const currency: CurrencyType = {\r\n      dateFetched: date,\r\n      source: currencies.source,\r\n      currencies: rates,\r\n      primaryCurrency: currencyFromState.primaryCurrency,\r\n    };\r\n\r\n    return currency;\r\n  } else return currencyFromState;\r\n};\r\n","import axios from 'axios';\r\nimport { GoogleLoginResponse } from 'react-google-login';\r\nimport { dbUrl } from '../constant/routes';\r\nimport { BudgetType } from '../store/budgets/types';\r\nimport { TransactionType } from '../store/transactions/types';\r\n\r\ninterface ReturnResponseType {\r\n  budgets: BudgetType[];\r\n  transactions: TransactionType[];\r\n  userCurrency: string;\r\n}\r\n\r\nexport const dbAPI = async (\r\n  googleUser: GoogleLoginResponse['profileObj'],\r\n  setLoading: () => void,\r\n  unsetLoading: () => void\r\n): Promise<ReturnResponseType> => {\r\n  setLoading();\r\n\r\n  let budgets: BudgetType[] = await (\r\n    await axios.get(`${dbUrl}/budgets`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let transactions: TransactionType[] = await (\r\n    await axios.get(`${dbUrl}/transactions`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let userCurrency: string = '';\r\n\r\n  await axios\r\n    .get(`${dbUrl}/users/${googleUser?.googleId}`)\r\n    .then(res => {\r\n      userCurrency = res.data.currency;\r\n    })\r\n    .catch(() => {\r\n      axios.post(`${dbUrl}/users`, {\r\n        _id: googleUser?.googleId,\r\n        currency: 'USD',\r\n      });\r\n    });\r\n\r\n  budgets = budgets.map(budget => {\r\n    budget.date = new Date(budget.date);\r\n    return budget;\r\n  });\r\n\r\n  transactions.map(transaction => {\r\n    transaction.date = new Date(transaction.date);\r\n    return transaction;\r\n  });\r\n\r\n  unsetLoading();\r\n  return { budgets, transactions, userCurrency };\r\n};\r\n","import { FC, useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport GlobalStyle from './GlobalStyles';\r\nimport NavBar from './NavBar';\r\nimport { breakpoints } from '../constant/style/breakpoints';\r\nimport AnimatedRouter from './AnimatedRouter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n  removeAllBudgetsAction,\r\n} from '../store/budgets/actions';\r\nimport { RootState } from '../store';\r\nimport {\r\n  addTransactionAction,\r\n  removeAllTransactionsAction,\r\n} from '../store/transactions/actions';\r\nimport { setPrimaryCurrency, updateCurrency } from '../store/currency/actions';\r\nimport { currencyExchangeAPI } from '../api/currencyExchange';\r\nimport { dbAPI } from '../api/db';\r\nimport Modal from './Modal';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport { setLoaderAction, unsetLoaderAction } from '../store/loader';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 75vw;\r\n  }\r\n`;\r\n\r\nconst App: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const currencyFromState = useSelector((state: RootState) => state.currency);\r\n  const firstRender = useRef(true);\r\n  const loader = useSelector((state: RootState) => state.loader);\r\n\r\n  const setLoader = useCallback(() => dispatch(setLoaderAction()), [dispatch]);\r\n  const unsetLoader = useCallback(\r\n    () => dispatch(unsetLoaderAction()),\r\n    [dispatch]\r\n  );\r\n\r\n  // DATABASE\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n      dispatch(removeAllTransactionsAction());\r\n      dispatch(removeAllBudgetsAction());\r\n      dispatch(changeTransactions());\r\n    }\r\n\r\n    if (googleUser) {\r\n      dbAPI(googleUser, setLoader, unsetLoader).then(response => {\r\n        response.budgets.forEach(budget => {\r\n          dispatch(addBudgetAction(budget));\r\n        });\r\n        response.transactions.forEach(transaction => {\r\n          dispatch(addTransactionAction(transaction));\r\n        });\r\n\r\n        dispatch(setPrimaryCurrency(response.userCurrency));\r\n\r\n        dispatch(changeTransactions());\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      firstRender.current = false;\r\n    };\r\n  }, [googleUser, dispatch, setLoader, unsetLoader]);\r\n\r\n  // CURRENCY\r\n  useEffect(() => {\r\n    currencyExchangeAPI(currencyFromState).then(currency => {\r\n      dispatch(updateCurrency(currency));\r\n    });\r\n  }, [currencyFromState, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Container>\r\n        <Router>\r\n          <NavBar />\r\n          <main style={{ position: 'relative' }}>\r\n            <AnimatedRouter />\r\n          </main>\r\n        </Router>\r\n      </Container>\r\n      {loader && (\r\n        <Modal closeModal={() => {}} container={false} closable={false}>\r\n          <ClipLoader size=\"8rem\" color=\"silver\" />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n"],"sourceRoot":""}