{"version":3,"sources":["store/googleUser/constants.ts","components/GlobalStyles.ts","constant/style/breakpoints.ts","components/Button/index.ts","components/NavBar/Elements.ts","constant/routes.ts","store/googleUser/actions.ts","store/budgets/constants.ts","store/localstorage.ts","store/budgets/reducer.ts","store/currency/constants.ts","store/currency/reducer.ts","store/loader.ts","store/transactions/constants.ts","store/transactions/reducer.ts","store/index.ts","store/googleUser/reducer.ts","store/budgets/actions.ts","utils/utility.ts","store/transactions/actions.ts","store/currency/actions.ts","components/NavBar/index.tsx","components/Form/Elements.ts","utils/ux.ts","components/Modal/Elements.ts","components/Modal/index.tsx","components/ModalConfirm/Elements.ts","components/ModalConfirm/index.tsx","pages/Payments/components/Transaction/Elements.ts","pages/Payments/components/Transaction/index.tsx","pages/Overview/components/FrequentTransactionsList/Elements.ts","pages/Overview/components/FrequentTransactionsList/index.tsx","pages/Overview/components/MoneyLastMonth/Elements.ts","pages/Overview/components/MoneyLastMonth/index.tsx","components/BudgetInfo/Elements.ts","components/BudgetInfo/index.tsx","pages/Overview/components/MostValuableBudget/Elements.ts","pages/Overview/components/MostValuableBudget/index.tsx","pages/Overview/index.tsx","pages/Budgets/components/BudgetList/Elements.ts","pages/Budgets/components/Budget/Elements.ts","pages/Budgets/components/BudgetModal/Elements.ts","hooks/useForm.ts","components/Input/index.ts","components/CurrencySelector/Elements.ts","components/CurrencySelector/index.tsx","components/Form/index.tsx","pages/Budgets/components/BudgetModal/index.tsx","pages/Budgets/components/Budget/index.tsx","pages/Payments/components/TransactionList/Elements.ts","pages/Budgets/components/BudgetList/index.tsx","pages/Budgets/components/BudgetForm/index.tsx","pages/Budgets/index.tsx","pages/Payments/components/PaymentForm/Elements.ts","components/Checkbox/index.ts","pages/Payments/components/PaymentForm/index.tsx","pages/Payments/components/TransactionList/index.tsx","pages/Payments/index.tsx","pages/Statistics/index.tsx","components/AllMoney/Elements.ts","components/AllMoney/index.tsx","components/AnimatedRouter.tsx","api/currencyExchange.ts","api/db.ts","components/App.tsx","index.tsx"],"names":["Constants","GlobalStyle","createGlobalStyle","breakpoints","Button","styled","button","props","secondary","color","textColor","Navigation","nav","Header","div","ToggleNavButton","NavIcon","opened","focused","MobileLinksContainer","DesktopLinksContainer","ul","StyledLink","Link","Avatar","url","GoogleButton","routes","dbUrl","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","setLoaderAction","action","SET_LOADING","unsetLoaderAction","UNSET_LOADING","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","store","createStore","combineReducers","budgets","state","type","ADD_BUDGET","payload","budget","REMOVE_BUDGET","filter","_id","budgetId","EDIT_BUDGET","map","CHANGE_TRANSACTIONS","amount","actual","starting","currency","transactions","forEach","transaction","money","currencies","repeat","hour","every","nowDate","Date","getTime","transactionDate","date","multiplier","Math","floor","REMOVE_BUDGET_ALL","ADD_TRANSACTION","REMOVE_TRANSACTION","transactionId","REMOVE_TRANSACTIONS_BUDGET","EDIT_TRANSACTION","REMOVE_TRANSACTION_ALL","googleUser","LOGIN","userInfo","LOGOUT","dateFetched","source","primaryCurrency","UPDATE_CURRENCY","SET_PRIMARY_CURRENCY","currencyString","loader","subscribe","getState","userId","stringify","setItem","saveState","addBudgetAction","removeBudgetAction","editBudgetAction","changeTransactions","prototype","getFancyDate","day","this","getDate","toString","month","getMonth","parseInt","getFullYear","getFancyHours","hours","getHours","minutes","getMinutes","handleEnterPressed","e","key","timeout","ms","Promise","resolve","setTimeout","addTransactionAction","removeTransactionAction","removeTransactionsByBudgetIdAction","setPrimaryCurrency","NavBar","useState","setOpened","btnFocused","setBtnFocued","btnRef","useRef","dispatch","useDispatch","useSelector","toggleNavMenu","target","current","scrollTo","renderLinks","focusableByDefault","route","i","tabIndex","onClick","to","handleResponseGoogle","response","profileObj","handleLogout","a","style","marginRight","clientId","buttonText","onSuccess","onFailure","cookiePolicy","isSignedIn","render","renderProps","disabled","imageUrl","onLogoutSuccess","aria-label","onFocus","onBlur","ref","StyledForm","form","Label","label","Container","Warning","p","MinPlus","MinPlusIcon","minus","h1","getMoneyColor","Background","animating","Center","modalRoot","document","getElementById","ModalContext","createContext","handleClose","Modal","children","closeModal","closable","container","setAnimating","bgRef","useEffect","ReactDOM","createPortal","handleBgClick","Provider","value","ButtonsContainer","ModalConfirm","handleAction","context","useContext","width","Money","Title","MediumTitle","h2","SmallTitle","DateHeader","h3","DeleteBtn","CloseIcon","BiX","DeleteText","Transaction","title","deletable","modalOpened","setModalOpened","setBudget","dateN","selectedBudget","flex","display","flexDirection","alignItems","axios","delete","then","FrequentTransactionsList","sort","b","slice","SmContainer","BigHeader","MoneyLastMonth","income","spent","total","moneyLastMonth","setMoneyLastMonth","toFixed","TitleHeader","MoneyHeader","DiffSpan","SmallMoneyHeader","DiffIcon","BudgetInfo","diff","BudgetContainer","MostValuableBudget","Overview","StyledList","Top","IconSpan","span","useForm","initialState","newState","Object","entries","checked","formData","setFormData","name","bool","required","Input","input","Select","select","CurrencySelector","onChangeAction","currentCurrency","setCurrentCurrency","onChange","Form","handleSubmit","childrenBefore","data","pageTitle","toggleChecked","handleInputChange","formCurrency","setFormCurrency","setMinus","clicked","parseFloat","onSubmit","preventDefault","amountCheck","titleCheck","amountNum","noValidate","autoComplete","htmlFor","id","placeholder","position","padding","fontSize","right","BudgetModal","height","onKeyPress","marginTop","newTitle","newAmount","newCurrency","newBudget","googleId","patch","Budget","List","Flex","NoMessage","Line","BudgetList","selectedSort","setSelectedSort","TransitionGroup","component","sortedBudgets","compare","split","localeCompare","reverse","CSSTransition","classNames","renderBudgets","BudgetForm","uuidv4","post","Budgets","StyledP","SmallContainer","AnimatedSmallContainer","animate","CheckBox","PaymentForm","selectedBudgetId","setSelectedBudgetId","repeatTransaction","setRepeatTransaction","startDate","setStartDate","dateCheck","setDateCheck","check","budgetsLength","length","handleCheckboxCheck","newTransaction","in","unmountOnExit","className","isNaN","maxLength","opacity","TransactionList","selectedTransactions","renderTransactionsRepeat","renderTransactions","Payments","Statistics","AllMoney","AnimatedRouter","location","useLocation","exact","path","pathname","currencyExchangeAPI","currencyFromState","lastFetchedDate","get","rates","rate","dbAPI","setLoading","unsetLoading","params","userCurrency","res","catch","App","firstRender","setLoader","useCallback","unsetLoader","updateCurrency","size"],"mappings":"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","file":"static/js/main.c023d3c2.chunk.js","sourcesContent":["export enum Constants {\r\n  LOGIN = 'LOGIN',\r\n  LOGOUT = 'LOGOUT',\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.6rem;\r\n    font-family: Roboto;\r\n    box-sizing: border-box;\r\n\r\n    color: var(--color-black)\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n\r\n  :root {\r\n    // COLORS\r\n    --color-red: #E53E3E;\r\n    --color-gray: #CBD5E0;\r\n    --color-gray-dark: #1A202C;\r\n    --color-green: #48BB78;\r\n    --color-black: #222;\r\n    --color-white: #fff;\r\n    --color-blue-light: #90CDF4;\r\n\r\n    // TRANSITIONS\r\n    --trans-default: all .2s ease;\r\n    \r\n    // SHADOWS\r\n    --shadow-default: 0px 5px 30px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const breakpoints = {\r\n  mobile: '36rem', // 576px\r\n  tablet: '48rem', // 768px\r\n  laptop: '62rem', // 992px\r\n  desktop: '75rem', // 1200px\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  color: string;\r\n  textColor: string;\r\n  secondary?: boolean;\r\n}\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  border-radius: 1rem;\r\n  border: ${props =>\r\n    props.secondary ? `2px solid var(--color-${props.color})` : 'none'};\r\n  width: 100%;\r\n  font-size: 1.8rem;\r\n  padding: 1.1rem;\r\n  color: ${props => `var(--color-${props.textColor})`};\r\n  background-color: ${props =>\r\n    props.secondary ? 'var(--color-white)' : `var(--color-${props.color})`};\r\n  font-family: inherit;\r\n  transition: var(--trans-default);\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n    transform: translateY(-5%);\r\n    cursor: pointer;\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.3);\r\n    ${props =>\r\n      props.secondary &&\r\n      `background-color: var(--color-${props.color}); color: var(--color-white)`};\r\n  }\r\n\r\n  :active {\r\n    transform: translateY(2%);\r\n    box-shadow: 0px 5px 15px 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\nimport { Button } from '../Button';\r\n\r\ninterface NavProps {\r\n  opened?: boolean;\r\n  focused?: boolean;\r\n}\r\n\r\nexport const Navigation = styled.nav`\r\n  color: #111;\r\n  letter-spacing: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 3.5rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    font-weight: 400;\r\n    font-size: 3rem;\r\n    margin-right: 2rem;\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ToggleNavButton = styled.button`\r\n  width: 4.5rem;\r\n  height: 4.5rem;\r\n  border-radius: 35%;\r\n  background-color: #111;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 11;\r\n  position: fixed;\r\n  right: 3.5rem;\r\n  transition: var(--trans-default);\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavIcon = styled.div<NavProps>`\r\n  pointer-events: none;\r\n  width: 2.2rem;\r\n  height: 3px;\r\n  background-color: #fff;\r\n\r\n  transform: ${props =>\r\n    props.opened ? 'rotate(225deg) scale(1.3)' : 'rotate(0) scale(1)'};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.opened\r\n        ? `rotate(90deg) translateY(0)`\r\n        : `rotate(0) translateY(${props.focused ? '250%' : '125%'})`};\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    width: 2.2rem;\r\n    height: 3px;\r\n    background-color: #fff;\r\n    transition: var(--trans-default);\r\n    transform: ${props =>\r\n      props.focused ? 'translateY(-350%)' : 'translateY(-225%)'};\r\n\r\n    display: ${props => (props.opened ? 'none' : 'block')};\r\n  }\r\n`;\r\n\r\nexport const MobileLinksContainer = styled.div<NavProps>`\r\n  background-color: #111;\r\n  position: fixed;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  transition: var(--trans-default);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  transform: ${props => (props.opened ? 'translateX(0)' : 'translateX(-100%)')};\r\n\r\n  ul {\r\n    transition: var(--trans-default);\r\n    transition-delay: 0.1s;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n    margin-bottom: 25%;\r\n\r\n    transform: ${props =>\r\n      props.opened ? 'translateX(0)' : 'translateX(-100%)'};\r\n\r\n    li {\r\n      :not(:last-child) {\r\n        margin-bottom: 4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DesktopLinksContainer = styled.ul`\r\n  width: 47rem;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n    :not(:last-child) {\r\n    }\r\n  }\r\n\r\n  display: none;\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: 2.5rem;\r\n  text-decoration: none;\r\n  text-transform: capitalize;\r\n\r\n  color: #fff;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    color: #222;\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\ntype url = { url: string };\r\n\r\nexport const Avatar = styled.div<url>`\r\n  border-radius: 50%;\r\n  background-image: ${props => `url('${props.url}')`};\r\n  background-size: cover;\r\n  padding: 2rem;\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nexport const GoogleButton = styled(Button)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 0.9rem;\r\n\r\n  svg {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n","export const routes = ['overview', 'budgets', 'payments', 'statistics'];\r\n\r\nexport const dbUrl = 'https://budgety-server.herokuapp.com';\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { action } from 'typesafe-actions';\r\nimport { Constants } from './constants';\r\n\r\nexport const loginAction = (userInfo: GoogleLoginResponse['profileObj']) => {\r\n  return action(Constants.LOGIN, { userInfo });\r\n};\r\n\r\nexport const logoutAction = () => {\r\n  return action(Constants.LOGOUT);\r\n};\r\n","export enum Constants {\r\n  ADD_BUDGET = 'ADD_BUDGET',\r\n  REMOVE_BUDGET = 'REMOVE_BUDGET',\r\n  EDIT_BUDGET = 'EDIT_BUDGET',\r\n  CHANGE_TRANSACTIONS = 'CHANGE_TRANSACTIONS',\r\n  REMOVE_BUDGET_ALL = 'REMOVE_BUDGET_ALL',\r\n}\r\n","import { RootState } from '.';\r\n\r\nexport const loadState = (): RootState | undefined => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    const state: RootState = JSON.parse(serializedState);\r\n    return state;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: RootState): void => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","import { Constants } from './constants';\r\nimport { BudgetsActions, BudgetsState } from './types';\r\n\r\nexport const budgetsReducer = (\r\n  state: BudgetsState = [],\r\n  action: BudgetsActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_BUDGET:\r\n      return [...state, action.payload.budget];\r\n\r\n    case Constants.REMOVE_BUDGET:\r\n      newState = state.filter(budget => budget._id !== action.payload.budgetId);\r\n      return newState;\r\n\r\n    case Constants.EDIT_BUDGET:\r\n      newState = state.map(budget => {\r\n        if (budget._id === action.payload.budget._id) {\r\n          return action.payload.budget;\r\n        }\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.CHANGE_TRANSACTIONS:\r\n      newState = state.map(budget => {\r\n        budget.amount.actual = budget.amount.starting;\r\n        const currency = action.payload.currency;\r\n\r\n        action.payload.transactions.forEach(transaction => {\r\n          let money =\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[budget.amount.currency];\r\n\r\n          if (transaction.repeat.repeat) {\r\n            const hour = 1000 * 60 * 60 * transaction.repeat.every;\r\n            const nowDate = new Date().getTime();\r\n            const transactionDate = new Date(transaction.date).getTime();\r\n            let multiplier = 1;\r\n\r\n            switch (transaction.repeat.type) {\r\n              case 'hours':\r\n                multiplier = Math.floor((nowDate - transactionDate) / hour);\r\n                break;\r\n              case 'days':\r\n                multiplier = Math.floor(\r\n                  (nowDate - transactionDate) / (hour * 24)\r\n                );\r\n                break;\r\n              case 'month':\r\n                multiplier = Math.floor(\r\n                  (nowDate - transactionDate) / (hour * 24 * 31)\r\n                );\r\n                break;\r\n              case 'year':\r\n                multiplier = Math.floor(\r\n                  (nowDate - transactionDate) / (hour * 24 * 365)\r\n                );\r\n                break;\r\n              default:\r\n                multiplier = 1;\r\n            }\r\n\r\n            money = money + money * multiplier;\r\n          }\r\n\r\n          if (transaction.budgetId === budget._id) {\r\n            budget = {\r\n              ...budget,\r\n              amount: {\r\n                ...budget.amount,\r\n                actual: budget.amount.actual + money,\r\n              },\r\n            };\r\n          }\r\n        });\r\n\r\n        return budget;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_BUDGET_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  UPDATE_CURRENCY = 'UPDATE_CURRENCY',\r\n  SET_PRIMARY_CURRENCY = 'SET_PRIMARY_CURRENCY',\r\n}\r\n","import { Constants } from './constants';\r\nimport { CurrencyActions, CurrencyType } from './types';\r\n\r\nexport const currencyReducer = (\r\n  state: CurrencyType = {\r\n    dateFetched: new Date(0),\r\n    source: 'USD',\r\n    currencies: {},\r\n    primaryCurrency: 'USD',\r\n  },\r\n  action: CurrencyActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.UPDATE_CURRENCY:\r\n      return action.payload.currency;\r\n\r\n    case Constants.SET_PRIMARY_CURRENCY:\r\n      return { ...state, primaryCurrency: action.payload.currencyString };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ActionType } from 'typesafe-actions';\r\nimport { action } from 'typesafe-actions';\r\n\r\nexport enum Constants {\r\n  SET_LOADING = 'SET_LOADING',\r\n  UNSET_LOADING = 'UNSET_LOADING',\r\n}\r\n\r\nexport const setLoaderAction = () => {\r\n  return action(Constants.SET_LOADING);\r\n};\r\n\r\nexport const unsetLoaderAction = () => {\r\n  return action(Constants.UNSET_LOADING);\r\n};\r\n\r\nconst actions = {\r\n  setLoaderAction,\r\n  unsetLoaderAction,\r\n};\r\n\r\nexport type LoaderActions = ActionType<typeof actions>;\r\n\r\nexport const loaderReducer = (\r\n  state: boolean = false,\r\n  action: LoaderActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.SET_LOADING:\r\n      return true;\r\n\r\n    case Constants.UNSET_LOADING:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum Constants {\r\n  ADD_TRANSACTION = 'ADD_TRANSACTION',\r\n  REMOVE_TRANSACTION = 'REMOVE_TRANSACTION',\r\n  REMOVE_TRANSACTIONS_BUDGET = 'REMOVE_TRANSACTIONS_BUDGET',\r\n  EDIT_TRANSACTION = 'EDIT_TRANSACTION',\r\n  REMOVE_TRANSACTION_ALL = 'REMOVE_TRANSACTION_ALL',\r\n}\r\n","import { Constants } from './constants';\r\nimport { TransactionActions, TransactionState } from './types';\r\n\r\nexport const transactionReducer = (\r\n  state: TransactionState = [],\r\n  action: TransactionActions\r\n) => {\r\n  let newState = state;\r\n\r\n  switch (action.type) {\r\n    case Constants.ADD_TRANSACTION:\r\n      return [...state, action.payload.transaction];\r\n\r\n    case Constants.REMOVE_TRANSACTION:\r\n      newState = state.filter(\r\n        transaction => transaction._id !== action.payload.transactionId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTIONS_BUDGET:\r\n      newState = state.filter(\r\n        transaction => transaction.budgetId !== action.payload.budgetId\r\n      );\r\n      return newState;\r\n\r\n    case Constants.EDIT_TRANSACTION:\r\n      newState = state.map(transaction => {\r\n        if (transaction._id === action.payload.transaction._id) {\r\n          return action.payload.transaction;\r\n        }\r\n        return transaction;\r\n      });\r\n      return newState;\r\n\r\n    case Constants.REMOVE_TRANSACTION_ALL:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { combineReducers, createStore, compose } from 'redux';\r\n\r\nimport { budgetsReducer } from './budgets/reducer';\r\nimport { BudgetsState } from './budgets/types';\r\nimport { currencyReducer } from './currency/reducer';\r\nimport { CurrencyType } from './currency/types';\r\nimport { googleUserReducer } from './googleUser/reducer';\r\nimport { loaderReducer } from './loader';\r\nimport { loadState, saveState } from './localstorage';\r\nimport { transactionReducer } from './transactions/reducer';\r\nimport { TransactionState } from './transactions/types';\r\n\r\nexport interface RootState {\r\n  budgets: BudgetsState;\r\n  transactions: TransactionState;\r\n  googleUser: GoogleLoginResponse['profileObj'] | null;\r\n  currency: CurrencyType;\r\n  loader: boolean;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  combineReducers<RootState>({\r\n    budgets: budgetsReducer,\r\n    transactions: transactionReducer,\r\n    googleUser: googleUserReducer,\r\n    currency: currencyReducer,\r\n    loader: loaderReducer,\r\n  }),\r\n  persistedState,\r\n  composeEnhancers()\r\n);\r\n\r\nstore.subscribe((): void => {\r\n  const state = store.getState();\r\n  // const persState = loadState() as RootState;\r\n\r\n  const budgets = state.budgets.filter(budget => budget.userId === null);\r\n  const transactions = state.transactions.filter(\r\n    transaction => transaction.userId === null\r\n  );\r\n  const currency = state.currency;\r\n  const loader = state.loader;\r\n\r\n  if (state.googleUser === null)\r\n    saveState({ budgets, transactions, currency, loader, googleUser: null });\r\n});\r\n\r\nexport default store;\r\n","import { GoogleLoginResponse } from 'react-google-login';\r\nimport { Constants } from './constants';\r\nimport { GoogleUserActions } from './types';\r\n\r\nexport const googleUserReducer = (\r\n  state: GoogleLoginResponse['profileObj'] | null = null,\r\n  action: GoogleUserActions\r\n) => {\r\n  switch (action.type) {\r\n    case Constants.LOGIN:\r\n      return { ...action.payload.userInfo };\r\n\r\n    case Constants.LOGOUT:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport store from '..';\r\nimport { BudgetType } from './types';\r\nimport { TransactionType } from '../transactions/types';\r\nimport { Constants } from './constants';\r\nimport { CurrencyType } from '../currency/types';\r\n\r\nexport const addBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.ADD_BUDGET, { budget });\r\n};\r\n\r\nexport const removeBudgetAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editBudgetAction = (budget: BudgetType) => {\r\n  return action(Constants.EDIT_BUDGET, { budget });\r\n};\r\n\r\nexport const changeTransactions = () => {\r\n  const transactions: TransactionType[] = store.getState().transactions;\r\n  const currency: CurrencyType = store.getState().currency;\r\n  return action(Constants.CHANGE_TRANSACTIONS, { transactions, currency });\r\n};\r\n\r\nexport const removeAllBudgetsAction = () => {\r\n  return action(Constants.REMOVE_BUDGET_ALL);\r\n};\r\n","import React from 'react';\r\n\r\n// PROTOTYPES\r\ndeclare global {\r\n  interface Date {\r\n    getFancyDate(): string;\r\n    getFancyHours(): string;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyDate = function (): string {\r\n  let day = this.getDate().toString();\r\n  let month = (this.getMonth() + 1).toString();\r\n\r\n  if (parseInt(day) < 10) day = `0${day}`;\r\n  if (parseInt(month) < 10) month = `0${month}`;\r\n\r\n  return `${day}/${month}/${this.getFullYear()}`;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.getFancyHours = function (): string {\r\n  let hours = this.getHours().toString();\r\n  let minutes = this.getMinutes().toString();\r\n\r\n  if (parseInt(minutes) < 10) minutes = `0${minutes}`;\r\n  if (parseInt(hours) < 10) hours = `0${hours}`;\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const handleEnterPressed = (\r\n  e: React.KeyboardEvent,\r\n  action: (e: React.SyntheticEvent) => void\r\n): void => {\r\n  if (e.key === 'Enter') action(e);\r\n};\r\n\r\nexport const timeout = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { TransactionType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const addTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.ADD_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeTransactionAction = (transactionId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTION, { transactionId });\r\n};\r\n\r\nexport const removeTransactionsByBudgetIdAction = (budgetId: string) => {\r\n  return action(Constants.REMOVE_TRANSACTIONS_BUDGET, { budgetId });\r\n};\r\n\r\nexport const editTransactionAction = (transaction: TransactionType) => {\r\n  return action(Constants.EDIT_TRANSACTION, { transaction });\r\n};\r\n\r\nexport const removeAllTransactionsAction = () => {\r\n  return action(Constants.REMOVE_TRANSACTION_ALL);\r\n};\r\n","import { action } from 'typesafe-actions';\r\nimport { CurrencyType } from './types';\r\nimport { Constants } from './constants';\r\n\r\nexport const updateCurrency = (currency: CurrencyType) => {\r\n  return action(Constants.UPDATE_CURRENCY, { currency });\r\n};\r\n\r\nexport const setPrimaryCurrency = (currencyString: string) => {\r\n  return action(Constants.SET_PRIMARY_CURRENCY, { currencyString });\r\n};\r\n","import React, { FC, useState, useRef } from 'react';\r\n\r\nimport GoogleLogin, {\r\n  GoogleLoginResponse,\r\n  GoogleLoginResponseOffline,\r\n  GoogleLogout,\r\n} from 'react-google-login';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  Navigation,\r\n  Header,\r\n  ToggleNavButton,\r\n  NavIcon,\r\n  MobileLinksContainer,\r\n  StyledLink,\r\n  DesktopLinksContainer,\r\n  Avatar,\r\n  GoogleButton,\r\n} from './Elements';\r\nimport { FaGoogle } from 'react-icons/fa';\r\nimport { routes } from '../../constant/routes';\r\nimport { loginAction, logoutAction } from '../../store/googleUser/actions';\r\nimport { RootState } from '../../store';\r\nimport { loadState } from '../../store/localstorage';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n} from '../../store/budgets/actions';\r\nimport { timeout } from '../../utils/utility';\r\nimport { addTransactionAction } from '../../store/transactions/actions';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\n\r\nconst NavBar: FC = (): JSX.Element => {\r\n  const [opened, setOpened] = useState(false);\r\n  const [btnFocused, setBtnFocued] = useState(false);\r\n  const btnRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const toggleNavMenu = (e: React.MouseEvent) => {\r\n    setOpened(!opened);\r\n    if (!(e.target === btnRef.current)) window.scrollTo(0, 0);\r\n  };\r\n\r\n  const renderLinks = (\r\n    routes: string[],\r\n    focusableByDefault = true\r\n  ): JSX.Element[] => {\r\n    return routes.map((route, i) => (\r\n      <li key={i}>\r\n        <StyledLink\r\n          tabIndex={focusableByDefault ? 0 : opened ? 0 : -1}\r\n          onClick={toggleNavMenu}\r\n          to={`/${route}`}\r\n        >\r\n          {route}\r\n        </StyledLink>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  const handleResponseGoogle = (\r\n    response: GoogleLoginResponse | GoogleLoginResponseOffline\r\n  ) => {\r\n    if ((response as GoogleLoginResponse).profileObj) {\r\n      dispatch(loginAction((response as GoogleLoginResponse).profileObj));\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    const state = loadState();\r\n    dispatch(logoutAction());\r\n\r\n    if (state) {\r\n      await timeout(100);\r\n      state.budgets.forEach(budget => dispatch(addBudgetAction(budget)));\r\n      state.transactions.forEach(transaction =>\r\n        dispatch(addTransactionAction(transaction))\r\n      );\r\n\r\n      dispatch(setPrimaryCurrency(state.currency.primaryCurrency));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navigation>\r\n      <Header>\r\n        <h1 style={{ marginRight: '1rem' }}>Budgety</h1>\r\n        {googleUser === null ? (\r\n          <GoogleLogin\r\n            clientId=\"118372615416-g77a8gaf92slnb4f50jr6o9cmh0f4ho1.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={handleResponseGoogle}\r\n            onFailure={handleResponseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn\r\n            render={renderProps => (\r\n              <GoogleButton\r\n                color=\"red\"\r\n                textColor=\"white\"\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              >\r\n                <FaGoogle />\r\n                Login\r\n              </GoogleButton>\r\n            )}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Avatar url={googleUser.imageUrl} />\r\n            <GoogleLogout\r\n              clientId=\"118372615416-cjlib17tonjdhn4tqtpnetm7mif08ah9.apps.googleusercontent.com\"\r\n              buttonText=\"Logout\"\r\n              onLogoutSuccess={handleLogout}\r\n              render={renderProps => (\r\n                <GoogleButton\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={renderProps.onClick}\r\n                  disabled={renderProps.disabled}\r\n                >\r\n                  <FaGoogle />\r\n                  Logout\r\n                </GoogleButton>\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n      </Header>\r\n      <ToggleNavButton\r\n        aria-label=\"Navigation button\"\r\n        onClick={toggleNavMenu}\r\n        onFocus={() => setBtnFocued(true)}\r\n        onBlur={() => setBtnFocued(false)}\r\n        ref={btnRef}\r\n      >\r\n        <NavIcon opened={opened} focused={btnFocused} />\r\n      </ToggleNavButton>\r\n      <MobileLinksContainer opened={opened}>\r\n        <ul>{renderLinks(routes, false)}</ul>\r\n      </MobileLinksContainer>\r\n      <DesktopLinksContainer>{renderLinks(routes)}</DesktopLinksContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const StyledForm = styled.form`\r\n  margin: 5rem auto;\r\n  padding: 0 4rem;\r\n  margin-top: 0;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 2.5rem;\r\n  display: block;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  :not(:first-child) {\r\n    margin: 4rem 0;\r\n  }\r\n`;\r\n\r\nexport const Warning = styled.p`\r\n  font-size: 1.3rem;\r\n  color: var(--color-red);\r\n  position: absolute;\r\n  margin-top: 0.7rem;\r\n`;\r\n\r\nexport const MinPlus = styled.div`\r\n  padding: 1.83rem 1.5rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  font-size: 1.6rem;\r\n  width: min-content;\r\n  position: absolute;\r\n  background-color: var(--color-white);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MinPlusIcon = styled.div<{ minus: boolean }>`\r\n  pointer-events: none;\r\n  width: 1.3rem;\r\n  height: 2px;\r\n  background-color: ${props =>\r\n    props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n\r\n  transform: ${props => (props.minus ? 'rotate(180deg)' : 'rotate(0)')};\r\n\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: inherit;\r\n    height: inherit;\r\n    background-color: ${props =>\r\n      props.minus ? 'var(--color-green)' : 'var(--color-red)'};\r\n    transition: var(--trans-default);\r\n    transform: ${props => (props.minus ? `rotate(270deg)` : `rotate(0)`)};\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-weight: normal;\r\n  text-align: center;\r\n`;\r\n","export const getMoneyColor = (amount: number): 'red' | 'green' | 'black' => {\r\n  if (amount > 0) return 'green';\r\n  else if (amount < 0) return 'red';\r\n  return 'black';\r\n};\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../constant/style/breakpoints';\r\n\r\nexport const Background = styled.div<{ animating: boolean }>`\r\n  position: fixed;\r\n  z-index: 20;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  transition: var(--trans-default);\r\n  opacity: ${props => (props.animating ? '0' : '100%')};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  z-index: 21;\r\n  background-color: var(--color-white);\r\n  width: 75%;\r\n  padding: 2rem 2rem;\r\n  border-radius: 1rem;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 50rem;\r\n  }\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  position: absolute;\r\n  top: 45%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n`;\r\n","import ReactDOM from 'react-dom';\r\nimport { FC, useRef } from 'react';\r\n\r\nimport { Background, Center, Container } from './Elements';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nconst modalRoot = document.getElementById('modal') as HTMLElement;\r\n\r\nexport const ModalContext = createContext({ handleClose: () => {} });\r\n\r\ninterface ModalProps {\r\n  children: JSX.Element;\r\n  closeModal: () => void;\r\n  closable?: boolean;\r\n  container?: boolean;\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({\r\n  children,\r\n  closeModal,\r\n  closable = true,\r\n  container = true,\r\n}): JSX.Element => {\r\n  const [animating, setAnimating] = useState(true);\r\n  const bgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setAnimating(false);\r\n  }, []);\r\n\r\n  const handleClose = (): void => {\r\n    setAnimating(true);\r\n    setTimeout(() => closeModal(), 200);\r\n  };\r\n\r\n  const handleBgClick = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ): void => {\r\n    if (e.target === bgRef.current && closable) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <Background\r\n      animating={animating}\r\n      ref={bgRef}\r\n      onClick={e => handleBgClick(e)}\r\n    >\r\n      {container ? (\r\n        <Container>\r\n          <ModalContext.Provider value={{ handleClose }}>\r\n            {children}\r\n          </ModalContext.Provider>\r\n        </Container>\r\n      ) : (\r\n        <ModalContext.Provider value={{ handleClose }}>\r\n          <Center>{children}</Center>\r\n        </ModalContext.Provider>\r\n      )}\r\n    </Background>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h1`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { ButtonsContainer, Header } from './Elements';\r\nimport { ModalContext } from '../Modal';\r\nimport { Button } from '../Button';\r\n\r\ninterface ModalConfirmProps {\r\n  handleAction: () => void;\r\n}\r\n\r\nconst ModalConfirm: FC<ModalConfirmProps> = ({ handleAction }): JSX.Element => {\r\n  const context = useContext(ModalContext);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleActionClicked = (): void => {\r\n    context.handleClose();\r\n\r\n    handleAction();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>Are you sure?</Header>\r\n      <ButtonsContainer>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"gray-dark\"\r\n          secondary\r\n          style={{ width: '48%' }}\r\n          onClick={handleClose}\r\n          type=\"button\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          style={{ width: '48%' }}\r\n          onClick={handleActionClicked}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ButtonsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalConfirm;\r\n","import { BiX } from 'react-icons/bi';\r\nimport styled from 'styled-components';\r\nimport { ColorType } from '../../../../components/BudgetInfo/Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Money = styled.div<ColorType>`\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-size: 2.1rem;\r\n  margin: 0 1rem;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const MediumTitle = styled.h2`\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0.5rem;\r\n  width: max-content;\r\n`;\r\n\r\nexport const SmallTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.9;\r\n`;\r\n\r\nexport const DateHeader = styled.h3`\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport const DeleteBtn = styled(Button)`\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nexport const CloseIcon = styled(BiX)`\r\n  font-size: 3rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const DeleteText = styled.p`\r\n  display: none;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    display: inline;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport { removeTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport { getMoneyColor } from '../../../../utils/ux';\r\nimport Modal from '../../../../components/Modal';\r\nimport ModalConfirm from '../../../../components/ModalConfirm';\r\nimport {\r\n  CloseIcon,\r\n  Container,\r\n  DateHeader,\r\n  DeleteBtn,\r\n  DeleteText,\r\n  MediumTitle,\r\n  Money,\r\n  SmallTitle,\r\n  Title,\r\n} from './Elements';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\ninterface TransactionProps extends TransactionType {\r\n  deletable?: boolean;\r\n}\r\n\r\nconst Transaction: FC<TransactionProps> = ({\r\n  _id,\r\n  budgetId,\r\n  title,\r\n  amount,\r\n  repeat,\r\n  date,\r\n  currency,\r\n  deletable = true,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  const [budget, setBudget] = useState<null | BudgetType>(null);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const dateN = new Date(date);\r\n\r\n  useEffect(() => {\r\n    const selectedBudget = budgets.filter(budget => budget._id === budgetId)[0];\r\n\r\n    if (selectedBudget) {\r\n      setBudget(selectedBudget);\r\n    }\r\n  }, [budgets, budgetId]);\r\n\r\n  const handleDeleteTransaction = (): void => {\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/transactions/${_id}`).then(() => {\r\n        dispatch(removeTransactionAction(_id));\r\n        dispatch(changeTransactions());\r\n        dispatch(unsetLoaderAction());\r\n      });\r\n    } else {\r\n      dispatch(removeTransactionAction(_id));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div style={{ flex: 1 }}>\r\n          <Title>{title}</Title>\r\n\r\n          {budget && <SmallTitle>{budget.title}</SmallTitle>}\r\n\r\n          <DateHeader>\r\n            {dateN.getFancyDate()} | {dateN.getFancyHours()}\r\n          </DateHeader>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-end',\r\n          }}\r\n        >\r\n          {repeat.repeat && (\r\n            <MediumTitle>\r\n              Every {repeat.every} {repeat.type}\r\n            </MediumTitle>\r\n          )}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Money color={getMoneyColor(amount)}>\r\n              {amount} {currency}\r\n            </Money>\r\n\r\n            {deletable && (\r\n              <div>\r\n                <DeleteBtn\r\n                  color=\"red\"\r\n                  textColor=\"white\"\r\n                  onClick={() => setModalOpened(true)}\r\n                >\r\n                  <CloseIcon />\r\n                  <DeleteText>Delete</DeleteText>\r\n                </DeleteBtn>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <ModalConfirm handleAction={handleDeleteTransaction} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h3`\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  margin-top: 4rem;\r\n  text-align: center;\r\n`;\r\n","import { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { RootState } from '../../../../store';\r\nimport Transaction from '../../../Payments/components/Transaction';\r\n\r\nimport { Container, Header } from './Elements';\r\n\r\nconst FrequentTransactionsList: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) =>\r\n    state.transactions\r\n      .sort((a, b) => {\r\n        return a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n      })\r\n      .slice(0, 3)\r\n  );\r\n\r\n  const renderTransactions = (): JSX.Element[] => {\r\n    return transactions.map(transaction => {\r\n      return (\r\n        <Transaction {...transaction} key={transaction._id} deletable={false} />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header>Frequent Payments</Header>\r\n      <Container>{transactions && renderTransactions()}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrequentTransactionsList;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  width: 75%;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 65%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const SmContainer = styled.div`\r\n  padding: 0;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BigHeader = styled.h2`\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  margin-top: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Header = styled.h3`\r\n  font-size: 1.6rem;\r\n  font-weight: 400;\r\n  width: min-content;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Money = styled.h2<{ color: string }>`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  width: min-content;\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../store';\r\nimport { BigHeader, Container, Header, Money, SmContainer } from './Elements';\r\n\r\nconst nowDate = new Date();\r\n\r\nconst MoneyLastMonth: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const [moneyLastMonth, setMoneyLastMonth] = useState({\r\n    income: 0,\r\n    spent: 0,\r\n    total: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let money = { income: 0, spent: 0, total: 0 };\r\n\r\n    transactions.forEach(transaction => {\r\n      const transactionDate = new Date(transaction.date);\r\n      if (transactionDate.getMonth() === nowDate.getMonth())\r\n        if (transaction.amount > 0) {\r\n          money.income +=\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n        } else if (transaction.amount < 0) {\r\n          money.spent +=\r\n            (transaction.amount / currency.currencies[transaction.currency]) *\r\n            currency.currencies[currency.primaryCurrency];\r\n        }\r\n      money.total = money.income + money.spent;\r\n    });\r\n\r\n    setMoneyLastMonth(money);\r\n  }, [transactions, currency.currencies, currency.primaryCurrency]);\r\n\r\n  return (\r\n    <>\r\n      <BigHeader>Outgoings last month</BigHeader>\r\n      <Container>\r\n        <SmContainer>\r\n          <Header>Income</Header>\r\n          <Money color=\"green\">\r\n            {moneyLastMonth.income.toFixed()} {currency.primaryCurrency}\r\n          </Money>\r\n        </SmContainer>\r\n\r\n        <SmContainer>\r\n          <Header>Total</Header>\r\n          <Money color=\"green\">\r\n            {moneyLastMonth.total.toFixed()} {currency.primaryCurrency}\r\n          </Money>\r\n        </SmContainer>\r\n        <SmContainer>\r\n          <Header>Spent</Header>\r\n          <Money color=\"red\">\r\n            {moneyLastMonth.spent.toFixed()} {currency.primaryCurrency}\r\n          </Money>\r\n        </SmContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoneyLastMonth;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ColorType {\r\n  color: 'green' | 'red' | 'black';\r\n}\r\n\r\nexport const TitleHeader = styled.h1`\r\n  font-size: 3rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  text-align: center;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport const MoneyHeader = styled.h2<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin: 0;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const DiffSpan = styled.div<ColorType>`\r\n  font-size: 2.5rem;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  font-weight: 400;\r\n  text-align: center;\r\n  margin-left: 0;\r\n  margin-bottom: 0.5rem;\r\n  position: relative;\r\n  height: 5rem;\r\n`;\r\n\r\nexport const SmallMoneyHeader = styled.h3`\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: max-content;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n\r\nexport const DiffIcon = styled.i<{ amount: number }>`\r\n  position: absolute;\r\n  top: ${props => (props.amount > 0 ? '25%' : '90%')};\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport {\r\n  TitleHeader,\r\n  MoneyHeader,\r\n  SmallMoneyHeader,\r\n  DiffSpan,\r\n  DiffIcon,\r\n} from './Elements';\r\nimport { BiCaretUp, BiCaretDown, BiMinus } from 'react-icons/bi';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport { BudgetType } from '../../store/budgets/types';\r\n\r\nconst BudgetInfo: FC<BudgetType> = (budget): JSX.Element => {\r\n  const { title, amount } = budget;\r\n\r\n  return (\r\n    <>\r\n      <TitleHeader>{title}</TitleHeader>\r\n      <div>\r\n        <MoneyHeader color={getMoneyColor(amount.actual)}>\r\n          {amount.actual.toFixed(2)} {amount.currency}\r\n        </MoneyHeader>\r\n        <DiffSpan color={getMoneyColor(amount.diff)}>\r\n          <SmallMoneyHeader>\r\n            {amount.diff.toFixed(2)} {amount.currency}\r\n          </SmallMoneyHeader>\r\n          <DiffIcon amount={amount.diff}>\r\n            {amount.diff > 0 ? (\r\n              <BiCaretUp />\r\n            ) : amount.diff < 0 ? (\r\n              <BiCaretDown />\r\n            ) : (\r\n              <BiMinus />\r\n            )}\r\n          </DiffIcon>\r\n        </DiffSpan>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h2`\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  margin-top: 4rem;\r\n`;\r\n\r\nexport const BudgetContainer = styled.div`\r\n  margin-top: 2rem;\r\n\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  padding: 2rem;\r\n  border-radius: 1rem;\r\n  width: 20rem;\r\n  box-shadow: var(--shadow-default);\r\n`;\r\n","import { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { RootState } from '../../../../store';\r\n\r\nimport { BudgetContainer, Header } from './Elements';\r\n\r\nconst MostValuableBudget: FC = (): JSX.Element => {\r\n  const budget = useSelector(\r\n    (state: RootState) =>\r\n      state.budgets.sort((a, b) => {\r\n        return a.amount.actual > b.amount.actual\r\n          ? -1\r\n          : a.amount.actual < b.amount.actual\r\n          ? 1\r\n          : 0;\r\n      })[0]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Header>Most valuable Budget</Header>\r\n      {budget && (\r\n        <BudgetContainer>\r\n          <BudgetInfo {...budget} />\r\n        </BudgetContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MostValuableBudget;\r\n","import { FC } from 'react';\r\nimport { Header } from '../../components/Form/Elements';\r\nimport FrequentTransactionsList from './components/FrequentTransactionsList';\r\nimport MoneyLastMonth from './components/MoneyLastMonth';\r\nimport MostValuableBudget from './components/MostValuableBudget';\r\n\r\nconst Overview: FC = () => {\r\n  return (\r\n    <>\r\n      <Header>Overview</Header>\r\n      <MoneyLastMonth />\r\n      <MostValuableBudget />\r\n      <FrequentTransactionsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const StyledList = styled.ul`\r\n  list-style: none;\r\n  margin: 4rem auto;\r\n  padding: 0;\r\n  justify-content: center;\r\n  gap: 4rem;\r\n  grid-template-columns: repeat(auto-fit, 23rem);\r\n  padding: 0 4rem;\r\n  align-items: center;\r\n\r\n  display: grid;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 23rem;\r\n  height: max-content;\r\n  box-shadow: var(--shadow-default);\r\n  border-radius: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-weight: 400;\r\n  font-size: 2.8rem;\r\n`;\r\n\r\nexport const IconSpan = styled.span`\r\n  font-size: 3rem;\r\n  height: 4rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  border: solid 1px transparent;\r\n  border-radius: 1rem;\r\n\r\n  :focus,\r\n  :hover {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n","import { Dispatch, SetStateAction, useState } from 'react';\r\n\r\ninterface returnedObject {\r\n  [key: string]: { value: string; required: boolean; checked: boolean };\r\n}\r\n\r\nconst useForm = (initialState: {\r\n  [key: string]: { value: string; required: boolean };\r\n}): [\r\n  returnedObject,\r\n  Dispatch<SetStateAction<returnedObject>>,\r\n  (name: string, bool?: boolean) => void,\r\n  (e: React.ChangeEvent<HTMLInputElement>) => void\r\n] => {\r\n  let newState: returnedObject = {};\r\n\r\n  for (const [key, value] of Object.entries(initialState)) {\r\n    newState = { ...newState, [key]: { ...value, checked: true } };\r\n  }\r\n\r\n  const [formData, setFormData] = useState(newState);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = formData[e.target.name].required\r\n      ? e.target.value\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: {\r\n        ...formData[e.target.name],\r\n        value: e.target.value,\r\n        checked: checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  const toggleChecked = (name: string, bool: boolean = false): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: {\r\n        ...formData[name],\r\n        checked: bool,\r\n      },\r\n    });\r\n  };\r\n  return [formData, setFormData, toggleChecked, handleInputChange];\r\n};\r\n\r\nexport default useForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select<{ color: string }>`\r\n  padding: 0.2rem 0.2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 3rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  color: ${props => `var(--color-${props.color})`};\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { Select } from './Elements';\r\n\r\ninterface CurrencySelectorProps {\r\n  color: string;\r\n  onChangeAction: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  style?: { [key: string]: string };\r\n  currency?: string;\r\n}\r\n\r\nconst CurrencySelector: FC<CurrencySelectorProps> = ({\r\n  color,\r\n  onChangeAction,\r\n  style,\r\n  currency,\r\n}): JSX.Element => {\r\n  const currencies = useSelector(\r\n    (state: RootState) => state.currency.currencies\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [currentCurrency, setCurrentCurrency] = useState(primaryCurrency);\r\n\r\n  useEffect(() => {\r\n    currency && setCurrentCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setCurrentCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  const renderCurrenciesOptions = (): JSX.Element[] => {\r\n    return Object.entries(currencies).map(currency => {\r\n      return (\r\n        <option value={currency[0]} key={currency[0]}>\r\n          {currency[0]}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setCurrentCurrency(e.target.value);\r\n    onChangeAction(e);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      color={color}\r\n      onChange={handleSelectChange}\r\n      value={currentCurrency}\r\n      style={style}\r\n    >\r\n      {renderCurrenciesOptions()}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CurrencySelector;\r\n","import React, { FC, useState, useEffect, useRef } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport useForm from '../../hooks/useForm';\r\nimport { Input } from '../Input';\r\nimport {\r\n  Container,\r\n  StyledForm,\r\n  Label,\r\n  Warning,\r\n  MinPlus,\r\n  MinPlusIcon,\r\n  Header,\r\n} from './Elements';\r\nimport { Button } from '../Button';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { RootState } from '../../store';\r\n\r\ninterface FormProps {\r\n  handleSubmit: (title: string, amount: number, currency: string) => void;\r\n  disabled?: boolean;\r\n  children?: JSX.Element;\r\n  childrenBefore?: JSX.Element;\r\n  button?: boolean;\r\n  data?: {\r\n    [key in 'title' | 'amount']: { value: string; required: boolean };\r\n  };\r\n  currency?: string;\r\n  style?: {};\r\n  pageTitle?: string;\r\n}\r\n\r\nconst Form: FC<FormProps> = ({\r\n  handleSubmit,\r\n  disabled = false,\r\n  children,\r\n  childrenBefore,\r\n  button = true,\r\n  data,\r\n  currency,\r\n  style,\r\n  pageTitle,\r\n}): JSX.Element => {\r\n  const [formData, setFormData, toggleChecked, handleInputChange] = useForm(\r\n    data\r\n      ? data\r\n      : {\r\n          title: { value: '', required: true },\r\n          amount: { value: '', required: true },\r\n        }\r\n  );\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n\r\n  const [formCurrency, setFormCurrency] = useState(primaryCurrency);\r\n  const [minus, setMinus] = useState(false);\r\n  const clicked = useRef(false);\r\n\r\n  const { title, amount } = formData;\r\n\r\n  useEffect(() => {\r\n    currency && setFormCurrency(currency);\r\n  }, [currency]);\r\n\r\n  useEffect(() => {\r\n    !currency && setFormCurrency(primaryCurrency);\r\n  }, [primaryCurrency, currency]);\r\n\r\n  useEffect(() => {\r\n    if (parseFloat(amount.value) < 0) {\r\n      setFormData({\r\n        title: { ...title },\r\n        amount: {\r\n          ...amount,\r\n          value: (parseFloat(amount.value) * -1).toFixed(),\r\n        },\r\n      });\r\n      setMinus(true);\r\n      clicked.current = true;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSubmitForm = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    if (!disabled) {\r\n      const amountCheck = amount.required && !amount.value;\r\n      const titleCheck = title.required && !title.value;\r\n\r\n      if (amountCheck && titleCheck) {\r\n        let newState = {};\r\n\r\n        for (const [key, value] of Object.entries(formData)) {\r\n          newState = { ...newState, [key]: { ...value, checked: false } };\r\n        }\r\n\r\n        setFormData(newState);\r\n      } else {\r\n        if (titleCheck) toggleChecked('title');\r\n\r\n        if (amountCheck) toggleChecked('amount');\r\n      }\r\n\r\n      if (amountCheck || titleCheck) return;\r\n      let amountNum = parseFloat(amount.value);\r\n\r\n      if (minus && amountNum > 0) amountNum = amountNum * -1;\r\n\r\n      handleSubmit(title.value, amountNum, formCurrency);\r\n\r\n      setFormData({\r\n        title: { ...title, value: '' },\r\n        amount: { ...amount, value: '' },\r\n      });\r\n\r\n      setMinus(false);\r\n      clicked.current = false;\r\n    }\r\n  };\r\n\r\n  const handleCurrencyChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setFormCurrency(e.target.value);\r\n  };\r\n\r\n  const handleInputChangeNew = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (parseFloat(e.target.value) < 0) setMinus(true);\r\n    else if (parseFloat(e.target.value) >= 0 && !clicked.current)\r\n      setMinus(false);\r\n    handleInputChange(e);\r\n  };\r\n\r\n  const handleMinPlusClick = () => {\r\n    setMinus(!minus);\r\n    if (minus) clicked.current = false;\r\n    else clicked.current = true;\r\n  };\r\n\r\n  return (\r\n    <StyledForm\r\n      onSubmit={handleSubmitForm}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      style={style}\r\n    >\r\n      {pageTitle && (\r\n        <Container>\r\n          <Header>{pageTitle}</Header>\r\n        </Container>\r\n      )}\r\n      {childrenBefore && <Container>{childrenBefore}</Container>}\r\n      <Container>\r\n        <Label htmlFor=\"title\">Title</Label>\r\n        <Input\r\n          id=\"title\"\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          value={title.value}\r\n          onChange={handleInputChange}\r\n        />\r\n        {!title.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container style={{ position: 'relative' }}>\r\n        <Label htmlFor=\"amount\">Amount</Label>\r\n        <MinPlus onClick={handleMinPlusClick}>\r\n          <MinPlusIcon minus={!minus}></MinPlusIcon>\r\n        </MinPlus>\r\n        <Input\r\n          id=\"amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          placeholder=\"Enter amount\"\r\n          value={amount.value}\r\n          onChange={handleInputChangeNew}\r\n          style={{ padding: '1rem 5rem' }}\r\n        />\r\n        <CurrencySelector\r\n          color=\"black\"\r\n          onChangeAction={handleCurrencyChange}\r\n          style={{ fontSize: '2.85rem', position: 'absolute', right: '0' }}\r\n          currency={formCurrency}\r\n        />\r\n        {!amount.checked && <Warning>Fill out this field!</Warning>}\r\n      </Container>\r\n      <Container>{children}</Container>\r\n      {button && (\r\n        <Button color=\"green\" textColor=\"white\">\r\n          Add\r\n        </Button>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { FC, useContext } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { Top, Header, IconSpan, ButtonsContainer } from './Elements';\r\nimport { BiEdit, BiX } from 'react-icons/bi';\r\nimport { ModalContext } from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport { Button } from '../../../../components/Button';\r\nimport {\r\n  changeTransactions,\r\n  editBudgetAction,\r\n  removeBudgetAction,\r\n} from '../../../../store/budgets/actions';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\nimport { removeTransactionsByBudgetIdAction } from '../../../../store/transactions/actions';\r\nimport Form from '../../../../components/Form';\r\nimport { RootState } from '../../../../store';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetModal: FC<BudgetType> = ({ _id, title, amount }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const context = useContext(ModalContext);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleClose = (): void => context.handleClose();\r\n\r\n  const handleDelete = (): void => {\r\n    context.handleClose();\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios.delete(`${dbUrl}/budgets/${_id}`).then(() => {\r\n        dispatch(removeBudgetAction(_id));\r\n\r\n        axios.delete(`${dbUrl}/transactions?budgetId=${_id}`).then(() => {\r\n          dispatch(removeTransactionsByBudgetIdAction(_id));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n      });\r\n    } else {\r\n      dispatch(removeBudgetAction(_id));\r\n      dispatch(removeTransactionsByBudgetIdAction(_id));\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (\r\n    newTitle: string,\r\n    newAmount: number,\r\n    newCurrency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id,\r\n      userId: googleUser?.googleId ? googleUser?.googleId : null,\r\n      title: newTitle,\r\n      amount: {\r\n        actual: newAmount,\r\n        currency: newCurrency,\r\n        diff: 0,\r\n        starting: newAmount,\r\n      },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .patch(`${dbUrl}/budgets/${_id}`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(editBudgetAction(budget.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(editBudgetAction(newBudget));\r\n      dispatch(changeTransactions());\r\n    }\r\n    context.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Top>\r\n        <IconSpan tabIndex={0}>\r\n          <BiEdit />\r\n        </IconSpan>\r\n        <Header>Edit</Header>\r\n        <IconSpan\r\n          tabIndex={0}\r\n          style={{ fontSize: '3.5rem', height: '4.5rem' }}\r\n          onClick={handleClose}\r\n          onKeyPress={e => handleEnterPressed(e, handleClose)}\r\n        >\r\n          <BiX />\r\n        </IconSpan>\r\n      </Top>\r\n      <div style={{ marginTop: '3.5rem' }}>\r\n        <Form\r\n          handleSubmit={handleSubmitForm}\r\n          button={false}\r\n          data={{\r\n            title: { value: title, required: true },\r\n            amount: { value: amount.starting.toFixed(2), required: true },\r\n          }}\r\n          style={{ padding: 0 }}\r\n          currency={amount.currency}\r\n        >\r\n          <ButtonsContainer>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"gray-dark\"\r\n              secondary\r\n              style={{ width: '48%' }}\r\n              onClick={handleDelete}\r\n              type=\"button\"\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              color=\"gray-dark\"\r\n              textColor=\"white\"\r\n              style={{ width: '48%' }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </ButtonsContainer>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BudgetModal;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { Container } from './Elements';\r\nimport { Button } from '../../../../components/Button';\r\nimport BudgetModal from '../BudgetModal';\r\nimport Modal from '../../../../components/Modal';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\n\r\nconst Budget: FC<BudgetType> = (budget): JSX.Element => {\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <BudgetInfo {...budget} />\r\n        <Button\r\n          color=\"gray-dark\"\r\n          textColor=\"white\"\r\n          onClick={() => setModalOpened(true)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Container>\r\n      {modalOpened && (\r\n        <Modal closeModal={() => setModalOpened(false)}>\r\n          <BudgetModal {...budget} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Budget;\r\n","import styled from 'styled-components';\r\nimport { breakpoints } from '../../../../constant/style/breakpoints';\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 4rem;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 4rem auto;\r\n  padding: 0 4rem;\r\n\r\n  @media (min-width: ${breakpoints.mobile}) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.tablet}) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Flex = styled.div`\r\n  display: block;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: flex;\r\n\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const NoMessage = styled.h3`\r\n  font-weight: 600;\r\n  color: var(--color-gray-dark);\r\n  opacity: 0.3;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 80%;\r\n  height: 1px;\r\n  background-color: var(--color-gray-dark);\r\n  opacity: 0.3;\r\n\r\n  @media (min-width: ${breakpoints.laptop}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport { Container, StyledList } from './Elements';\r\nimport Budget from '../Budget';\r\nimport { RootState } from '../../../../store';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Select } from '../../../Payments/components/TransactionList/Elements';\r\nimport { Label } from '../../../../components/Form/Elements';\r\n\r\nconst BudgetList: FC = (): JSX.Element => {\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderBudgets = (): JSX.Element[] => {\r\n    const sortedBudgets = [...budgets];\r\n    sortedBudgets.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare =\r\n            a.amount.actual > b.amount.actual\r\n              ? -1\r\n              : a.amount.actual < b.amount.actual\r\n              ? 1\r\n              : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') sortedBudgets.reverse();\r\n\r\n    return sortedBudgets.map(budget => (\r\n      <CSSTransition timeout={200} classNames=\"slide\" key={budget._id}>\r\n        <li>\r\n          <Budget {...budget} />\r\n        </li>\r\n      </CSSTransition>\r\n    ));\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Label style={{ marginTop: '3rem' }}>Sort by</Label>\r\n      <Select onChange={handleSelectSortChange} value={selectedSort}>\r\n        <option value=\"date\">Newest</option>\r\n        <option value=\"date_r\">Oldest</option>\r\n        <option value=\"title\">A...Z</option>\r\n        <option value=\"title_r\">Z...A</option>\r\n        <option value=\"amount\">Most money</option>\r\n        <option value=\"amount_r\">Least money</option>\r\n      </Select>\r\n      <StyledList>\r\n        <TransitionGroup component={null}>{renderBudgets()}</TransitionGroup>\r\n      </StyledList>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BudgetList;\r\n","import { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addBudgetAction } from '../../../../store/budgets/actions';\r\nimport { BudgetType } from '../../../../store/budgets/types';\r\nimport Form from '../../../../components/Form';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\n\r\nconst BudgetForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newBudget: BudgetType = {\r\n      _id: uuidv4(),\r\n      userId: googleUser ? googleUser?.googleId : null,\r\n      title: title,\r\n      amount: { actual: amount, currency, diff: 0, starting: amount },\r\n      date: new Date(),\r\n    };\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .post(`${dbUrl}/budgets`, {\r\n          ...newBudget,\r\n        })\r\n        .then(budget => {\r\n          dispatch(addBudgetAction(budget.data));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(addBudgetAction(newBudget));\r\n  };\r\n\r\n  return <Form handleSubmit={handleSubmit} pageTitle=\"Budgets\" />;\r\n};\r\n\r\nexport default BudgetForm;\r\n","import { FC } from 'react';\r\n\r\nimport BudgetList from './components/BudgetList';\r\nimport BudgetForm from './components/BudgetForm';\r\n\r\nconst Budgets: FC = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <BudgetForm />\r\n      <BudgetList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Budgets;\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n  padding: 1rem 2rem;\r\n  border: 1px solid var(--color-gray);\r\n  border-radius: 1rem;\r\n  transition: var(--trans-default);\r\n  font-size: 1.6rem;\r\n  background-color: var(--color-white);\r\n  font-family: inherit;\r\n  width: 100%;\r\n\r\n  :focus {\r\n    outline: none;\r\n    border-color: var(--color-blue-light);\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 14rem;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledP = styled.p<{ checked: boolean }>`\r\n  font-size: 2rem;\r\n  margin-left: 1rem;\r\n  transition: var(--trans-default);\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${props => `var(--color-gray${props.checked ? '-dark)' : ')'}`};\r\n`;\r\n\r\nexport const SmallContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  position: relative;\r\n\r\n  .calendar {\r\n    border-radius: 1.5rem;\r\n    border-color: var(--color-gray);\r\n    top: 4rem;\r\n    position: absolute;\r\n  }\r\n\r\n  button {\r\n    border-radius: 1rem;\r\n  }\r\n`;\r\n\r\nexport const AnimatedSmallContainer = styled(SmallContainer)<{\r\n  animate: boolean;\r\n}>`\r\n  transition: var(--trans-default);\r\n  margin-top: ${props => (props.animate ? '35rem' : '0')};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckBox = styled.div<{ checked: boolean }>`\r\n  width: 2.6rem;\r\n  height: 2.6rem;\r\n  border: 1px solid var(--color-gray-dark);\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  transition: var(--trans-default);\r\n\r\n  ::after {\r\n    content: '';\r\n    display: block;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    background-color: ${props =>\r\n      `var(--color-${props.checked ? 'gray-dark)' : 'white)'}`};\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    transition: var(--trans-default);\r\n  }\r\n`;\r\n","import React, { FC, useRef, useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { addTransactionAction } from '../../../../store/transactions/actions';\r\nimport { TransactionType } from '../../../../store/transactions/types';\r\nimport Form from '../../../../components/Form';\r\nimport { changeTransactions } from '../../../../store/budgets/actions';\r\nimport {\r\n  Select,\r\n  Container,\r\n  StyledP,\r\n  SmallContainer,\r\n  AnimatedSmallContainer,\r\n} from './Elements';\r\nimport { Label } from '../../../../components/Form/Elements';\r\nimport BudgetInfo from '../../../../components/BudgetInfo';\r\nimport { Button } from '../../../../components/Button';\r\nimport { dbUrl } from '../../../../constant/routes';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../../../store/loader';\r\nimport { CheckBox } from '../../../../components/Checkbox';\r\nimport { Input } from '../../../../components/Input';\r\nimport '../../../../constant/style/animations.css';\r\nimport { handleEnterPressed } from '../../../../utils/utility';\r\n\r\ninterface RepeatTransactionType {\r\n  repeat: boolean;\r\n  every: string;\r\n  type: string;\r\n}\r\n\r\nconst PaymentForm: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [repeatTransaction, setRepeatTransaction] =\r\n    useState<RepeatTransactionType>({\r\n      repeat: false,\r\n      every: '1',\r\n      type: 'hours',\r\n    });\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [dateCheck, setDateCheck] = useState(false);\r\n  const check = useRef(null);\r\n\r\n  let budgetsLength = useRef(-1);\r\n\r\n  useEffect(() => {\r\n    if (budgetsLength.current !== budgets.length) {\r\n      if (budgets[0]) setSelectedBudgetId(budgets[0]._id);\r\n      else setSelectedBudgetId('');\r\n    }\r\n    return () => {\r\n      budgetsLength.current = budgets.length;\r\n    };\r\n  }, [budgets]);\r\n\r\n  const handleSubmit = (\r\n    title: string,\r\n    amount: number,\r\n    currency: string\r\n  ): void => {\r\n    const newTransaction: TransactionType = {\r\n      _id: uuidv4(),\r\n      currency,\r\n      budgetId: selectedBudgetId,\r\n      userId: googleUser ? googleUser.googleId : null,\r\n      title,\r\n      amount,\r\n      repeat: {\r\n        ...repeatTransaction,\r\n        every: parseInt(repeatTransaction.every),\r\n      },\r\n      date: dateCheck ? startDate : new Date(),\r\n    };\r\n\r\n    setRepeatTransaction({\r\n      repeat: false,\r\n      every: '1',\r\n      type: 'hours',\r\n    });\r\n\r\n    setDateCheck(false);\r\n    setStartDate(new Date());\r\n\r\n    if (googleUser) {\r\n      dispatch(setLoaderAction());\r\n      axios\r\n        .post(`${dbUrl}/transactions`, {\r\n          ...newTransaction,\r\n        })\r\n        .then(transaction => {\r\n          dispatch(addTransactionAction(transaction.data));\r\n          dispatch(changeTransactions());\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else {\r\n      dispatch(addTransactionAction(newTransaction));\r\n      dispatch(changeTransactions());\r\n    }\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => {\r\n      return (\r\n        <option key={budget._id} value={budget._id}>\r\n          {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n          {budget.amount.currency}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const selectedBudget = budgets.filter(\r\n    budget => budget._id === selectedBudgetId\r\n  )[0];\r\n\r\n  const handleCheckboxCheck = (e: React.SyntheticEvent): void => {\r\n    setRepeatTransaction({\r\n      ...repeatTransaction,\r\n      repeat: true,\r\n    });\r\n\r\n    if (e.target === check.current) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        repeat: !repeatTransaction.repeat,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputRepeatChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    if (\r\n      (!isNaN(parseInt(e.target.value)) && parseInt(e.target.value) > 0) ||\r\n      e.target.value === ''\r\n    ) {\r\n      setRepeatTransaction({\r\n        ...repeatTransaction,\r\n        every: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelectTypeChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setRepeatTransaction({ ...repeatTransaction, type: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      handleSubmit={handleSubmit}\r\n      disabled={!budgets.length}\r\n      button={false}\r\n      currency={selectedBudget && selectedBudget.amount.currency}\r\n      childrenBefore={\r\n        <>\r\n          <Label htmlFor=\"selectBudget\">Select a budget</Label>\r\n          <Select\r\n            id=\"selectBudget\"\r\n            onChange={handleSelectChange}\r\n            value={selectedBudgetId}\r\n          >\r\n            {renderOptions()}\r\n          </Select>\r\n        </>\r\n      }\r\n      pageTitle=\"Payments\"\r\n    >\r\n      <>\r\n        <SmallContainer>\r\n          <CheckBox\r\n            checked={dateCheck}\r\n            onClick={() => setDateCheck(!dateCheck)}\r\n            tabIndex={0}\r\n            onKeyPress={e =>\r\n              handleEnterPressed(e, () => setDateCheck(!dateCheck))\r\n            }\r\n          />\r\n          <StyledP checked={dateCheck} onClick={() => setDateCheck(!dateCheck)}>\r\n            Select date\r\n          </StyledP>\r\n\r\n          <CSSTransition\r\n            in={dateCheck}\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            unmountOnExit\r\n          >\r\n            <Calendar\r\n              value={startDate}\r\n              onChange={(date: Date) => setStartDate(date)}\r\n              className=\"calendar\"\r\n            />\r\n          </CSSTransition>\r\n        </SmallContainer>\r\n        <AnimatedSmallContainer\r\n          animate={dateCheck}\r\n          onClick={handleCheckboxCheck}\r\n        >\r\n          <CheckBox\r\n            checked={repeatTransaction.repeat}\r\n            tabIndex={0}\r\n            onKeyPress={e => handleEnterPressed(e, handleCheckboxCheck)}\r\n            ref={check}\r\n          />\r\n          <StyledP checked={repeatTransaction.repeat}>\r\n            Repeat every\r\n            <Input\r\n              style={{\r\n                width: '4rem',\r\n                padding: '.5rem',\r\n                color: !repeatTransaction.repeat ? 'lightgray' : 'black',\r\n              }}\r\n              onChange={handleInputRepeatChange}\r\n              maxLength={3}\r\n              value={repeatTransaction.every}\r\n              disabled={!repeatTransaction.repeat}\r\n            />\r\n            <Select\r\n              style={{\r\n                width: '8rem',\r\n                padding: '.5rem',\r\n              }}\r\n              value={repeatTransaction.type}\r\n              onChange={handleSelectTypeChange}\r\n              disabled={!repeatTransaction.repeat}\r\n            >\r\n              <option value=\"hours\">hours</option>\r\n              <option value=\"days\">days</option>\r\n              <option value=\"month\">month</option>\r\n              <option value=\"year\">year</option>\r\n            </Select>\r\n          </StyledP>\r\n        </AnimatedSmallContainer>\r\n\r\n        {budgets[0] && (\r\n          <Container>\r\n            {selectedBudgetId && <BudgetInfo {...selectedBudget} />}\r\n          </Container>\r\n        )}\r\n        <Button\r\n          color=\"green\"\r\n          textColor=\"white\"\r\n          style={{ marginTop: '3rem', opacity: !budgets[0] ? 0.6 : 1 }}\r\n          onClick={e => !budgets[0] && e.preventDefault()}\r\n        >\r\n          {!budgets[0] ? 'Add a budget' : 'Add'}\r\n        </Button>\r\n      </>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { RootState } from '../../../../store';\r\nimport Transaction from '../Transaction';\r\nimport { Flex, Line, List, NoMessage, Select } from './Elements';\r\nimport '../../../../constant/style/animations.css';\r\nimport { Label } from '../../../../components/Form/Elements';\r\nimport { Container } from './Elements';\r\n\r\nconst TransactionList: FC = (): JSX.Element => {\r\n  const transactions = useSelector((state: RootState) => state.transactions);\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const [selectedBudgetId, setSelectedBudgetId] = useState('');\r\n  const [selectedSort, setSelectedSort] = useState('date');\r\n\r\n  const renderTransactions = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = selectedBudgetId\r\n      ? transactions.filter(\r\n          transaction =>\r\n            transaction.budgetId === selectedBudgetId &&\r\n            !transaction.repeat.repeat\r\n        )\r\n      : transactions.filter(transaction => !transaction.repeat.repeat);\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    selectedTransactions.sort((a, b) => {\r\n      let compare: number;\r\n\r\n      switch (selectedSort.split('_')[0]) {\r\n        case 'title':\r\n          compare = a.title.localeCompare(b.title);\r\n          break;\r\n        case 'date':\r\n          compare = a.date > b.date ? -1 : a.date < b.date ? 1 : 0;\r\n          break;\r\n        case 'amount':\r\n          compare = a.amount > b.amount ? -1 : a.amount < b.amount ? 1 : 0;\r\n          break;\r\n        default:\r\n          compare = 0;\r\n          break;\r\n      }\r\n\r\n      return compare;\r\n    });\r\n\r\n    if (selectedSort.split('_')[1] === 'r') selectedTransactions.reverse();\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderTransactionsRepeat = (): JSX.Element[] | JSX.Element => {\r\n    const selectedTransactions = transactions.filter(\r\n      transaction => transaction.repeat.repeat\r\n    );\r\n\r\n    if (!selectedTransactions.length)\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\">\r\n          <NoMessage>No transactions</NoMessage>\r\n        </CSSTransition>\r\n      );\r\n\r\n    return selectedTransactions.map(transaction => {\r\n      return (\r\n        <CSSTransition timeout={200} classNames=\"slide\" key={transaction._id}>\r\n          <li>\r\n            <Transaction {...transaction} />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderOptions = (): JSX.Element[] => {\r\n    return budgets.map(budget => (\r\n      <option key={budget._id} value={budget._id}>\r\n        {budget.title}: {budget.amount.actual.toFixed(2)}{' '}\r\n        {budget.amount.currency}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const handleSelectFilterChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedBudgetId(e.target.value);\r\n  };\r\n\r\n  const handleSelectSortChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    setSelectedSort(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      <Container>\r\n        <Label>Frequent transactions</Label>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactionsRepeat()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n      <Line></Line>\r\n      <Container>\r\n        <Label htmlFor=\"selectbg\">Filter transactions</Label>\r\n        <Select\r\n          id=\"selectbg\"\r\n          onChange={handleSelectFilterChange}\r\n          value={selectedBudgetId}\r\n        >\r\n          <option value=\"\">All</option>\r\n          {renderOptions()}\r\n        </Select>\r\n        <Label htmlFor=\"sort\" style={{ marginTop: '3rem' }}>\r\n          Sort by\r\n        </Label>\r\n        <Select\r\n          id=\"sort\"\r\n          onChange={handleSelectSortChange}\r\n          value={selectedSort}\r\n        >\r\n          <option value=\"date\">Newest</option>\r\n          <option value=\"date_r\">Oldest</option>\r\n          <option value=\"title\">A...Z</option>\r\n          <option value=\"title_r\">Z...A</option>\r\n          <option value=\"amount\">Most money</option>\r\n          <option value=\"amount_r\">Least money</option>\r\n        </Select>\r\n        <List>\r\n          <TransitionGroup component={null}>\r\n            {renderTransactions()}\r\n          </TransitionGroup>\r\n        </List>\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import { FC } from 'react';\r\n\r\nimport PaymentForm from './components/PaymentForm';\r\nimport TransactionList from './components/TransactionList';\r\n\r\nconst Payments: FC = () => {\r\n  return (\r\n    <>\r\n      <PaymentForm />\r\n      <TransactionList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import { FC } from 'react';\r\n\r\nconst Statistics: FC = () => {\r\n  return <div>Statistics</div>;\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h2<{ color: string }>`\r\n  font-size: 3.5rem;\r\n  font-weight: 400;\r\n  color: ${props => `var(--color-${props.color})`};\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin-bottom: 2.5rem;\r\n`;\r\n","import axios from 'axios';\r\nimport { FC } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dbUrl } from '../../constant/routes';\r\n\r\nimport { RootState } from '../../store';\r\nimport { setPrimaryCurrency } from '../../store/currency/actions';\r\nimport { setLoaderAction, unsetLoaderAction } from '../../store/loader';\r\nimport { getMoneyColor } from '../../utils/ux';\r\nimport CurrencySelector from '../CurrencySelector';\r\nimport { Header } from './Elements';\r\n\r\nconst AllMoney: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const budgets = useSelector((state: RootState) => state.budgets);\r\n  const currency = useSelector((state: RootState) => state.currency);\r\n  const primaryCurrency = useSelector(\r\n    (state: RootState) => state.currency.primaryCurrency\r\n  );\r\n  const googleId = useSelector(\r\n    (state: RootState) => state.googleUser?.googleId\r\n  );\r\n\r\n  let money = 0;\r\n  budgets.forEach(\r\n    budget =>\r\n      (money +=\r\n        budget.amount.actual / currency.currencies[budget.amount.currency])\r\n  );\r\n\r\n  money =\r\n    (money / currency.currencies['USD']) * currency.currencies[primaryCurrency];\r\n\r\n  const handleCurrencyChange = (\r\n    e: React.ChangeEvent<HTMLSelectElement>\r\n  ): void => {\r\n    if (googleId) {\r\n      dispatch(setLoaderAction());\r\n\r\n      axios\r\n        .patch(`${dbUrl}/users/${googleId}`, {\r\n          currency: e.target.value,\r\n        })\r\n        .then(() => {\r\n          dispatch(setPrimaryCurrency(e.target.value));\r\n          dispatch(unsetLoaderAction());\r\n        });\r\n    } else dispatch(setPrimaryCurrency(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header color={getMoneyColor(money)}>\r\n      {money.toFixed(2)}{' '}\r\n      <CurrencySelector\r\n        color={getMoneyColor(money)}\r\n        onChangeAction={handleCurrencyChange}\r\n      />\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default AllMoney;\r\n","import { FC } from 'react';\r\n\r\nimport { Route, Switch, useLocation } from 'react-router';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport Overview from '../pages/Overview';\r\nimport Budgets from '../pages/Budgets';\r\nimport Payments from '../pages/Payments';\r\nimport Statistics from '../pages/Statistics';\r\n\r\nimport '../constant/style/animations.css';\r\nimport AllMoney from './AllMoney';\r\n\r\nconst AnimatedRouter: FC = (): JSX.Element => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <AllMoney />\r\n      <div style={{ position: 'relative' }}>\r\n        <TransitionGroup component={null}>\r\n          <CSSTransition\r\n            timeout={200}\r\n            classNames=\"fade\"\r\n            key={location.pathname}\r\n          >\r\n            <Switch location={location}>\r\n              <Route exact path=\"/overview\">\r\n                <Overview />\r\n              </Route>\r\n              <Route exact path=\"/budgets\">\r\n                <Budgets />\r\n              </Route>\r\n              <Route exact path=\"/payments\">\r\n                <Payments />\r\n              </Route>\r\n              <Route exact path=\"/statistics\">\r\n                <Statistics />\r\n              </Route>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedRouter;\r\n","import axios from 'axios';\r\nimport { CurrencyType } from '../store/currency/types';\r\n\r\nexport const currencyExchangeAPI = async (\r\n  currencyFromState: CurrencyType\r\n): Promise<CurrencyType> => {\r\n  const date = new Date();\r\n  const lastFetchedDate = new Date(currencyFromState.dateFetched);\r\n\r\n  const dayInMiliseconds = 1000 * 60 * 60 * 24;\r\n  const daysBetweenDates = Math.floor(\r\n    (date.getTime() - lastFetchedDate.getTime()) / dayInMiliseconds\r\n  );\r\n\r\n  if (daysBetweenDates >= 7) {\r\n    interface rate {\r\n      [key: string]: number;\r\n    }\r\n\r\n    interface dataFetchedType {\r\n      rates: rate;\r\n      source: string;\r\n      date: string;\r\n      timestamp: number;\r\n    }\r\n\r\n    const currencies: dataFetchedType = await (\r\n      await axios.get(\r\n        'https://v1.nocodeapi.com/kriziuu/cx/FPLWrEBmjQDFHLdf/rates'\r\n      )\r\n    ).data;\r\n\r\n    let rates: rate = {};\r\n    for (const [key, value] of Object.entries(currencies.rates)) {\r\n      const rate: rate = { [key]: value };\r\n      rates = { ...rates, ...rate };\r\n    }\r\n\r\n    const currency: CurrencyType = {\r\n      dateFetched: date,\r\n      source: currencies.source,\r\n      currencies: rates,\r\n      primaryCurrency: currencyFromState.primaryCurrency,\r\n    };\r\n\r\n    return currency;\r\n  } else return currencyFromState;\r\n};\r\n","import axios from 'axios';\r\nimport { GoogleLoginResponse } from 'react-google-login';\r\nimport { dbUrl } from '../constant/routes';\r\nimport { BudgetType } from '../store/budgets/types';\r\nimport { TransactionType } from '../store/transactions/types';\r\n\r\ninterface ReturnResponseType {\r\n  budgets: BudgetType[];\r\n  transactions: TransactionType[];\r\n  userCurrency: string;\r\n}\r\n\r\nexport const dbAPI = async (\r\n  googleUser: GoogleLoginResponse['profileObj'],\r\n  setLoading: () => void,\r\n  unsetLoading: () => void\r\n): Promise<ReturnResponseType> => {\r\n  setLoading();\r\n\r\n  let budgets: BudgetType[] = await (\r\n    await axios.get(`${dbUrl}/budgets`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let transactions: TransactionType[] = await (\r\n    await axios.get(`${dbUrl}/transactions`, {\r\n      params: {\r\n        userId: googleUser?.googleId,\r\n      },\r\n    })\r\n  ).data;\r\n\r\n  let userCurrency: string = '';\r\n\r\n  await axios\r\n    .get(`${dbUrl}/users/${googleUser?.googleId}`)\r\n    .then(res => {\r\n      userCurrency = res.data.currency;\r\n    })\r\n    .catch(() => {\r\n      axios.post(`${dbUrl}/users`, {\r\n        _id: googleUser?.googleId,\r\n        currency: 'USD',\r\n      });\r\n    });\r\n\r\n  budgets = budgets.map(budget => {\r\n    budget.date = new Date(budget.date);\r\n    return budget;\r\n  });\r\n\r\n  transactions.map(transaction => {\r\n    transaction.date = new Date(transaction.date);\r\n    return transaction;\r\n  });\r\n\r\n  unsetLoading();\r\n  return { budgets, transactions, userCurrency };\r\n};\r\n","import { FC, useCallback, useEffect, useRef } from 'react';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport GlobalStyle from './GlobalStyles';\r\nimport NavBar from './NavBar';\r\nimport { breakpoints } from '../constant/style/breakpoints';\r\nimport AnimatedRouter from './AnimatedRouter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addBudgetAction,\r\n  changeTransactions,\r\n  removeAllBudgetsAction,\r\n} from '../store/budgets/actions';\r\nimport { RootState } from '../store';\r\nimport {\r\n  addTransactionAction,\r\n  removeAllTransactionsAction,\r\n} from '../store/transactions/actions';\r\nimport { setPrimaryCurrency, updateCurrency } from '../store/currency/actions';\r\nimport { currencyExchangeAPI } from '../api/currencyExchange';\r\nimport { dbAPI } from '../api/db';\r\nimport Modal from './Modal';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport { setLoaderAction, unsetLoaderAction } from '../store/loader';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  @media (min-width: ${breakpoints.desktop}) {\r\n    width: 75vw;\r\n  }\r\n`;\r\n\r\nconst App: FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const googleUser = useSelector((state: RootState) => state.googleUser);\r\n  const currencyFromState = useSelector((state: RootState) => state.currency);\r\n  const firstRender = useRef(true);\r\n  const loader = useSelector((state: RootState) => state.loader);\r\n\r\n  const setLoader = useCallback(() => dispatch(setLoaderAction()), [dispatch]);\r\n  const unsetLoader = useCallback(\r\n    () => dispatch(unsetLoaderAction()),\r\n    [dispatch]\r\n  );\r\n\r\n  // DATABASE\r\n  useEffect(() => {\r\n    if (!firstRender.current) {\r\n      dispatch(removeAllTransactionsAction());\r\n      dispatch(removeAllBudgetsAction());\r\n      dispatch(changeTransactions());\r\n    }\r\n\r\n    if (googleUser) {\r\n      dbAPI(googleUser, setLoader, unsetLoader).then(response => {\r\n        response.budgets.forEach(budget => {\r\n          dispatch(addBudgetAction(budget));\r\n        });\r\n        response.transactions.forEach(transaction => {\r\n          dispatch(addTransactionAction(transaction));\r\n        });\r\n\r\n        dispatch(setPrimaryCurrency(response.userCurrency));\r\n\r\n        dispatch(changeTransactions());\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      firstRender.current = false;\r\n    };\r\n  }, [googleUser, dispatch, setLoader, unsetLoader]);\r\n\r\n  // CURRENCY\r\n  useEffect(() => {\r\n    currencyExchangeAPI(currencyFromState).then(currency => {\r\n      dispatch(updateCurrency(currency));\r\n    });\r\n  }, [currencyFromState, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Container>\r\n        <Router>\r\n          <NavBar />\r\n          <main style={{ position: 'relative' }}>\r\n            <AnimatedRouter />\r\n          </main>\r\n        </Router>\r\n      </Container>\r\n      {loader && (\r\n        <Modal closeModal={() => {}} container={false} closable={false}>\r\n          <ClipLoader size=\"8rem\" color=\"silver\" />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n"],"sourceRoot":""}